2025-03-21 10:44:02 [INFO][com.easyjob.EasyjobAdminApplication][logStarting][55]-> Starting EasyjobAdminApplication using Java 1.8.0_351 on DESKTOP-KCPGUDB with PID 20748 (C:\easyjob\easyjob-java\easyjob-admin\target\classes started by HM in C:\easyjob\easyjob-java)
2025-03-21 10:44:02 [DEBUG][com.easyjob.EasyjobAdminApplication][logStarting][56]-> Running with Spring Boot v2.7.13, Spring v5.3.28
2025-03-21 10:44:02 [INFO][com.easyjob.EasyjobAdminApplication][logStartupProfileInfo][631]-> No active profile set, falling back to 1 default profile: "default"
2025-03-21 10:44:02 [DEBUG][org.springframework.boot.SpringApplication][load][664]-> Loading source class com.easyjob.EasyjobAdminApplication
2025-03-21 10:44:02 [DEBUG][org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext][prepareRefresh][629]-> Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ea6147e
2025-03-21 10:44:02 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2025-03-21 10:44:03 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
2025-03-21 10:44:03 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\InitRun.class]
2025-03-21 10:44:03 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\aspect\OperationAspect.class]
2025-03-21 10:44:03 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\controller\AGlobalExceptionHandlerController.class]
2025-03-21 10:44:03 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\controller\AppCarouselController.class]
2025-03-21 10:44:03 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\controller\AppFeedbackController.class]
2025-03-21 10:44:03 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\controller\AppUpdateController.class]
2025-03-21 10:44:03 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\controller\AppUserInfoController.class]
2025-03-21 10:44:03 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\controller\CategoryController.class]
2025-03-21 10:44:03 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\controller\ExamQuestionController.class]
2025-03-21 10:44:03 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\controller\FileController.class]
2025-03-21 10:44:03 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\controller\IndexController.class]
2025-03-21 10:44:03 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\controller\LoginController.class]
2025-03-21 10:44:03 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\controller\QuestionInfoController.class]
2025-03-21 10:44:03 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\controller\ShareInfoController.class]
2025-03-21 10:44:03 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\controller\SysAccountController.class]
2025-03-21 10:44:03 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\controller\SysMenuController.class]
2025-03-21 10:44:03 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\controller\SysRoleController.class]
2025-03-21 10:44:03 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\component\RedisConfig.class]
2025-03-21 10:44:03 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\component\RedisUtils.class]
2025-03-21 10:44:03 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\entity\config\AppConfig.class]
2025-03-21 10:44:03 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\AppCarouselServiceImpl.class]
2025-03-21 10:44:03 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\AppDeviceServiceImpl.class]
2025-03-21 10:44:03 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\AppExamQuestionServiceImpl.class]
2025-03-21 10:44:03 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\AppExamServiceImpl.class]
2025-03-21 10:44:03 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\AppFeedbackServiceImpl.class]
2025-03-21 10:44:03 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\AppUpdateServiceImpl.class]
2025-03-21 10:44:03 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\AppUserCollectServiceImpl.class]
2025-03-21 10:44:03 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\AppUserInfoServiceImpl.class]
2025-03-21 10:44:03 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\CategoryServiceImpl.class]
2025-03-21 10:44:03 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\ExamQuestionItemServiceImpl.class]
2025-03-21 10:44:03 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\ExamQuestionServiceImpl.class]
2025-03-21 10:44:03 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\QuestionInfoServiceImpl.class]
2025-03-21 10:44:03 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\ShareInfoServiceImpl.class]
2025-03-21 10:44:03 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\StatisticsDataServiceImpl.class]
2025-03-21 10:44:03 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\SysAccountServiceImpl.class]
2025-03-21 10:44:03 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\SysMenuServiceImpl.class]
2025-03-21 10:44:03 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\SysRole2MenuServiceImpl.class]
2025-03-21 10:44:03 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\SysRoleServiceImpl.class]
2025-03-21 10:44:03 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\utils\JWTUtil.class]
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\ACommonMapper.class]
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\AppCarouselMapper.class]
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\AppDeviceMapper.class]
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\AppExamMapper.class]
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\AppExamQuestionMapper.class]
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\AppFeedbackMapper.class]
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\AppUpdateMapper.class]
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\AppUserCollectMapper.class]
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\AppUserInfoMapper.class]
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\BaseMapper.class]
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\CategoryMapper.class]
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\ExamQuestionItemMapper.class]
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\ExamQuestionMapper.class]
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\QuestionInfoMapper.class]
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\ShareInfoMapper.class]
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\SysAccountMapper.class]
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\SysMenuMapper.class]
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\SysRole2MenuMapper.class]
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\SysRoleMapper.class]
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'ACommonMapper' and 'com.easyjob.mappers.ACommonMapper' mapperInterface
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'ACommonMapper'.
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'appCarouselMapper' and 'com.easyjob.mappers.AppCarouselMapper' mapperInterface
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'appCarouselMapper'.
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'appDeviceMapper' and 'com.easyjob.mappers.AppDeviceMapper' mapperInterface
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'appDeviceMapper'.
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'appExamMapper' and 'com.easyjob.mappers.AppExamMapper' mapperInterface
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'appExamMapper'.
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'appExamQuestionMapper' and 'com.easyjob.mappers.AppExamQuestionMapper' mapperInterface
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'appExamQuestionMapper'.
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'appFeedbackMapper' and 'com.easyjob.mappers.AppFeedbackMapper' mapperInterface
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'appFeedbackMapper'.
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'appUpdateMapper' and 'com.easyjob.mappers.AppUpdateMapper' mapperInterface
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'appUpdateMapper'.
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'appUserCollectMapper' and 'com.easyjob.mappers.AppUserCollectMapper' mapperInterface
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'appUserCollectMapper'.
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'appUserInfoMapper' and 'com.easyjob.mappers.AppUserInfoMapper' mapperInterface
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'appUserInfoMapper'.
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'baseMapper' and 'com.easyjob.mappers.BaseMapper' mapperInterface
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'baseMapper'.
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'categoryMapper' and 'com.easyjob.mappers.CategoryMapper' mapperInterface
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'categoryMapper'.
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'examQuestionItemMapper' and 'com.easyjob.mappers.ExamQuestionItemMapper' mapperInterface
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'examQuestionItemMapper'.
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'examQuestionMapper' and 'com.easyjob.mappers.ExamQuestionMapper' mapperInterface
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'examQuestionMapper'.
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'questionInfoMapper' and 'com.easyjob.mappers.QuestionInfoMapper' mapperInterface
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'questionInfoMapper'.
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'shareInfoMapper' and 'com.easyjob.mappers.ShareInfoMapper' mapperInterface
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'shareInfoMapper'.
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'sysAccountMapper' and 'com.easyjob.mappers.SysAccountMapper' mapperInterface
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'sysAccountMapper'.
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'sysMenuMapper' and 'com.easyjob.mappers.SysMenuMapper' mapperInterface
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'sysMenuMapper'.
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'sysRole2MenuMapper' and 'com.easyjob.mappers.SysRole2MenuMapper' mapperInterface
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'sysRole2MenuMapper'.
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'sysRoleMapper' and 'com.easyjob.mappers.SysRoleMapper' mapperInterface
2025-03-21 10:44:03 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'sysRoleMapper'.
2025-03-21 10:44:03 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][multipleStoresDetected][262]-> Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-21 10:44:03 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][132]-> Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-21 10:44:03 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
2025-03-21 10:44:03 [DEBUG][org.springframework.boot.autoconfigure.AutoConfigurationPackages][get][196]-> @EnableAutoConfiguration was declared on a class in the package 'com.easyjob'. Automatic @Repository and @Entity scanning is enabled.
2025-03-21 10:44:03 [DEBUG][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][145]-> Scanning for Redis repositories in packages com.easyjob.
2025-03-21 10:44:03 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][201]-> Finished Spring Data repository scanning in 35 ms. Found 0 Redis repository interfaces.
2025-03-21 10:44:03 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'
2025-03-21 10:44:03 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor'
2025-03-21 10:44:03 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2025-03-21 10:44:03 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'
2025-03-21 10:44:03 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2025-03-21 10:44:03 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2025-03-21 10:44:03 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2025-03-21 10:44:03 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2025-03-21 10:44:03 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
2025-03-21 10:44:03 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'
2025-03-21 10:44:03 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinderFactory'
2025-03-21 10:44:03 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
2025-03-21 10:44:03 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.scheduling.annotation.SchedulingConfiguration'
2025-03-21 10:44:03 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
2025-03-21 10:44:03 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.scheduling.annotation.ProxyAsyncConfiguration'
2025-03-21 10:44:03 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2025-03-21 10:44:03 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'persistenceExceptionTranslationPostProcessor'
2025-03-21 10:44:03 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'persistenceExceptionTranslationPostProcessor' via factory method to bean named 'environment'
2025-03-21 10:44:03 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'
2025-03-21 10:44:03 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor'
2025-03-21 10:44:03 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'projectingArgumentResolverBeanPostProcessor'
2025-03-21 10:44:03 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2025-03-21 10:44:03 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
2025-03-21 10:44:03 [DEBUG][org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory][getAdvice][258]-> Found AspectJ method: public void com.easyjob.aspect.OperationAspect.interceptorDo(org.aspectj.lang.JoinPoint)
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'transactionAttributeSource'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'transactionInterceptor'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'
2025-03-21 10:44:04 [DEBUG][org.springframework.ui.context.support.UiApplicationContextUtils][initThemeSource][85]-> Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@1e9804b9]
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'tomcatServletWebServerFactory'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'websocketServletWebServerCustomizer'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'localeCharsetMappingsCustomizer'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'errorPageCustomizer'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'dispatcherServletRegistration'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'dispatcherServlet'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'multipartConfigElement'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration'
2025-03-21 10:44:04 [DEBUG][org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory][getArchiveFileDocumentRoot][81]-> Code archive: C:\repo\org\springframework\boot\spring-boot\2.7.13\spring-boot-2.7.13.jar
2025-03-21 10:44:04 [DEBUG][org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory][getExplodedWarFileDocumentRoot][125]-> Code archive: C:\repo\org\springframework\boot\spring-boot\2.7.13\spring-boot-2.7.13.jar
2025-03-21 10:44:04 [DEBUG][org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory][logNoDocumentRoots][149]-> None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2025-03-21 10:44:04 [INFO][org.springframework.boot.web.embedded.tomcat.TomcatWebServer][initialize][108]-> Tomcat initialized with port(s): 9091 (http)
2025-03-21 10:44:04 [INFO][org.apache.coyote.http11.Http11NioProtocol][log][173]-> Initializing ProtocolHandler ["http-nio-9091"]
2025-03-21 10:44:04 [INFO][org.apache.catalina.core.StandardService][log][173]-> Starting service [Tomcat]
2025-03-21 10:44:04 [INFO][org.apache.catalina.core.StandardEngine][log][173]-> Starting Servlet engine: [Apache Tomcat/9.0.76]
2025-03-21 10:44:04 [INFO][org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/api]][log][173]-> Initializing Spring embedded WebApplicationContext
2025-03-21 10:44:04 [DEBUG][org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext][prepareWebApplicationContext][286]-> Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2025-03-21 10:44:04 [INFO][org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext][prepareWebApplicationContext][292]-> Root WebApplicationContext: initialization completed in 1551 ms
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sessionRepositoryFilterRegistration'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.session.SessionRepositoryFilterConfiguration'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.session-org.springframework.boot.autoconfigure.session.SessionProperties'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'sessionRepositoryFilterRegistration' via factory method to bean named 'spring.session-org.springframework.boot.autoconfigure.session.SessionProperties'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'sessionRepositoryFilterRegistration' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@448c8166'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'requestContextFilter'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'formContentFilter'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'characterEncodingFilter'
2025-03-21 10:44:04 [DEBUG][org.springframework.boot.web.servlet.ServletContextInitializerBeans][logMappings][237]-> Mapping filters: springSessionRepositoryFilter urls=[/*] order=-2147483598, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
2025-03-21 10:44:04 [DEBUG][org.springframework.boot.web.servlet.ServletContextInitializerBeans][logMappings][237]-> Mapping servlets: dispatcherServlet urls=[/]
2025-03-21 10:44:04 [DEBUG][org.springframework.boot.web.servlet.filter.OrderedRequestContextFilter][init][242]-> Filter 'requestContextFilter' configured for use
2025-03-21 10:44:04 [DEBUG][org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean$1][init][242]-> Filter 'springSessionRepositoryFilter' configured for use
2025-03-21 10:44:04 [DEBUG][org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter][init][242]-> Filter 'characterEncodingFilter' configured for use
2025-03-21 10:44:04 [DEBUG][org.springframework.boot.web.servlet.filter.OrderedFormContentFilter][init][242]-> Filter 'formContentFilter' configured for use
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'easyjobAdminApplication'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'initRun'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'dataSource'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dataSource' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
2025-03-21 10:44:04 [DEBUG][com.zaxxer.hikari.HikariConfig][attemptFromContextLoader][971]-> Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader sun.misc.Launcher$AppClassLoader@18b4aac2
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisUtils'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisTemplate'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisConfig'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisConnectionFactory'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration' via constructor to bean named 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'lettuceClientResources'
2025-03-21 10:44:04 [DEBUG][io.netty.util.internal.logging.InternalLoggerFactory][useSlf4JLoggerFactory][63]-> Using SLF4J as the default logging framework
2025-03-21 10:44:04 [DEBUG][io.lettuce.core.resource.AddressResolverGroupProvider][<clinit>][37]-> Starting without optional netty's non-blocking DNS resolver library
2025-03-21 10:44:04 [DEBUG][io.lettuce.core.resource.DefaultClientResources][<clinit>][122]-> -Dio.netty.eventLoopThreads: 16
2025-03-21 10:44:04 [DEBUG][io.lettuce.core.resource.DefaultEventLoopGroupProvider][createEventLoopGroup][231]-> Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
2025-03-21 10:44:04 [DEBUG][io.netty.util.concurrent.GlobalEventExecutor][<clinit>][53]-> -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-03-21 10:44:04 [DEBUG][io.netty.util.internal.InternalThreadLocalMap][<clinit>][100]-> -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-03-21 10:44:04 [DEBUG][io.netty.util.internal.InternalThreadLocalMap][<clinit>][101]-> -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-03-21 10:44:04 [DEBUG][io.netty.util.ResourceLeakDetector][<clinit>][129]-> -Dio.netty.leakDetection.level: simple
2025-03-21 10:44:04 [DEBUG][io.netty.util.ResourceLeakDetector][<clinit>][130]-> -Dio.netty.leakDetection.targetRecords: 4
2025-03-21 10:44:04 [DEBUG][io.netty.util.ResourceLeakDetectorFactory][newResourceLeakDetector][196]-> Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@6137cf6e
2025-03-21 10:44:04 [DEBUG][io.netty.util.internal.PlatformDependent0][explicitNoUnsafeCause0][497]-> -Dio.netty.noUnsafe: false
2025-03-21 10:44:04 [DEBUG][io.netty.util.internal.PlatformDependent0][javaVersion0][1001]-> Java version: 8
2025-03-21 10:44:04 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][137]-> sun.misc.Unsafe.theUnsafe: available
2025-03-21 10:44:04 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][161]-> sun.misc.Unsafe.copyMemory: available
2025-03-21 10:44:04 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][193]-> sun.misc.Unsafe.storeFence: available
2025-03-21 10:44:04 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][236]-> java.nio.Buffer.address: available
2025-03-21 10:44:04 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][308]-> direct buffer constructor: available
2025-03-21 10:44:04 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][386]-> java.nio.Bits.unaligned: available, true
2025-03-21 10:44:04 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][460]-> jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2025-03-21 10:44:04 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][483]-> java.nio.DirectByteBuffer.<init>(long, {int,long}): available
2025-03-21 10:44:04 [DEBUG][io.netty.util.internal.PlatformDependent][unsafeUnavailabilityCause0][1159]-> sun.misc.Unsafe: available
2025-03-21 10:44:04 [DEBUG][io.netty.util.internal.PlatformDependent][tmpdir0][1289]-> -Dio.netty.tmpdir: C:\Users\HM\AppData\Local\Temp (java.io.tmpdir)
2025-03-21 10:44:04 [DEBUG][io.netty.util.internal.PlatformDependent][bitMode0][1368]-> -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-03-21 10:44:04 [DEBUG][io.netty.util.internal.PlatformDependent][isWindows0][1119]-> Platform: Windows
2025-03-21 10:44:04 [DEBUG][io.netty.util.internal.PlatformDependent][<clinit>][178]-> -Dio.netty.maxDirectMemory: 3307208704 bytes
2025-03-21 10:44:04 [DEBUG][io.netty.util.internal.PlatformDependent][<clinit>][185]-> -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-03-21 10:44:04 [DEBUG][io.netty.util.internal.CleanerJava6][<clinit>][92]-> java.nio.ByteBuffer.cleaner(): available
2025-03-21 10:44:04 [DEBUG][io.netty.util.internal.PlatformDependent][<clinit>][205]-> -Dio.netty.noPreferDirect: false
2025-03-21 10:44:04 [DEBUG][io.netty.util.internal.PlatformDependent][<clinit>][1010]-> org.jctools-core.MpscChunkedArrayQueue: available
2025-03-21 10:44:04 [DEBUG][reactor.util.Loggers][debug][254]-> Using Slf4j logging framework
2025-03-21 10:44:04 [DEBUG][io.lettuce.core.event.jfr.EventRecorderHolder][<clinit>][55]-> Starting without optional JFR support. JFR unavailable.
2025-03-21 10:44:04 [DEBUG][io.lettuce.core.resource.DefaultClientResources][<init>][227]-> LatencyUtils/HdrUtils are not available, metrics are disabled
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'redisConnectionFactory' via factory method to bean named 'lettuceClientResources'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'redisTemplate' via factory method to bean named 'redisConnectionFactory'
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.String as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Number to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Number as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Enum to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Enum as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Boolean to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Boolean as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.Date as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.UUID to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.UUID as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDate as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalTime as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Instant as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZoneId as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Period as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Duration as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class java.lang.String as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Period as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.String as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Number to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Number as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Enum to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Enum as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Boolean to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Boolean as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.Date as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.UUID to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.UUID as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDate as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalTime as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Instant as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZoneId as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Period as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Duration as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class java.lang.String as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Period as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.String as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Number to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Number as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Enum to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Enum as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Boolean to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Boolean as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.Date as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.UUID to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.UUID as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDate as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalTime as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Instant as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZoneId as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Period as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Duration as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class java.lang.String as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Period as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.String as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Number to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Number as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Enum to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Enum as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Boolean to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Boolean as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.Date as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.UUID to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.UUID as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDate as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalTime as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Instant as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZoneId as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Period as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Duration as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class java.lang.String as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Period as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.String as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Number to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Number as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Enum to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Enum as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Boolean to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Boolean as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.Date as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.UUID to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.UUID as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDate as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalTime as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Instant as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZoneId as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Period as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class [B as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Duration as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class java.lang.String as writing converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Period as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'operationAspect'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'AGlobalExceptionHandlerController'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appCarouselController'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appCarouselService'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appCarouselMapper'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sqlSessionFactory'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration'
2025-03-21 10:44:04 [DEBUG][org.springframework.core.LocalVariableTableParameterNameDiscoverer][inspectClass][105]-> Cannot find '.class' file for class [class org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$63e1c8dd] - unable to determine constructor/method parameter names
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' via constructor to bean named 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ea6147e'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'sqlSessionFactory' via factory method to bean named 'dataSource'
2025-03-21 10:44:04 [DEBUG][org.apache.ibatis.logging.LogFactory][setImplementation][135]-> Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2025-03-21 10:44:04 [DEBUG][org.mybatis.spring.SqlSessionFactoryBean][buildSqlSessionFactory][534]-> Property 'mapperLocations' was not specified or no matching resources found
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sqlSessionTemplate'
2025-03-21 10:44:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'sqlSessionTemplate' via factory method to bean named 'sqlSessionFactory'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appFeedbackController'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appFeedbackService'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appFeedbackMapper'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appUpdateController'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appUpdateService'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appConfig'
2025-03-21 10:44:05 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'project.folder' in PropertySource 'environmentProperties' with value of type String
2025-03-21 10:44:05 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'super.admin.phones' in PropertySource 'environmentProperties' with value of type String
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appUpdateMapper'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appUserInfoController'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appUserInfoService'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appUserInfoMapper'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'jwtUtil'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appDeviceService'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appDeviceMapper'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'categoryController'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'categoryService'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'categoryMapper'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'examQuestionController'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'examQuestionService'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'examQuestionMapper'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'examQuestionItemMapper'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'examQuestionItemService'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'fileController'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'indexController'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'statisticsDataService'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'questionInfoMapper'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'shareInfoMapper'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'loginController'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysAccountService'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysAccountMapper'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysMenuService'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysMenuMapper'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'questionInfoController'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'questionInfoService'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'ACommonMapper'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'shareInfoController'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'shareInfoService'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysAccountController'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysMenuController'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysRoleController'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysRoleService'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysRoleMapper'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysRole2MenuMapper'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appExamQuestionService'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appExamQuestionMapper'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appExamService'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appExamMapper'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appUserCollectMapper'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appUserCollectService'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysRole2MenuService'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration$SessionCleanupConfiguration'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'cookieSerializer'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$ServletSessionConfiguration'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'cookieSerializer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sessionRepository'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration$SessionCleanupConfiguration' via constructor to bean named 'org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration$SessionCleanupConfiguration' via constructor to bean named 'sessionRepository'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'springSessionRedisMessageListenerContainer'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'springSessionRedisMessageListenerContainer' via factory method to bean named 'sessionRepository'
2025-03-21 10:44:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'enableRedisKeyspaceNotificationsInitializer'
2025-03-21 10:44:05 [DEBUG][io.lettuce.core.RedisClient][connectStandaloneAsync][273]-> Trying to get a Redis connection for: redis://127.0.0.1/1?timeout=2s
2025-03-21 10:44:05 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][157]-> -Dio.netty.allocator.numHeapArenas: 32
2025-03-21 10:44:05 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][158]-> -Dio.netty.allocator.numDirectArenas: 32
2025-03-21 10:44:05 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][160]-> -Dio.netty.allocator.pageSize: 8192
2025-03-21 10:44:05 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][165]-> -Dio.netty.allocator.maxOrder: 9
2025-03-21 10:44:05 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][169]-> -Dio.netty.allocator.chunkSize: 4194304
2025-03-21 10:44:05 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][170]-> -Dio.netty.allocator.smallCacheSize: 256
2025-03-21 10:44:05 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][171]-> -Dio.netty.allocator.normalCacheSize: 64
2025-03-21 10:44:05 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][172]-> -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-03-21 10:44:05 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][173]-> -Dio.netty.allocator.cacheTrimInterval: 8192
2025-03-21 10:44:05 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][174]-> -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-03-21 10:44:05 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][175]-> -Dio.netty.allocator.useCacheForAllThreads: false
2025-03-21 10:44:05 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][176]-> -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-03-21 10:44:05 [DEBUG][io.netty.buffer.ByteBufUtil][<clinit>][88]-> -Dio.netty.allocator.type: pooled
2025-03-21 10:44:05 [DEBUG][io.netty.buffer.ByteBufUtil][<clinit>][97]-> -Dio.netty.threadLocalDirectBufferSize: 0
2025-03-21 10:44:05 [DEBUG][io.netty.buffer.ByteBufUtil][<clinit>][100]-> -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-03-21 10:44:05 [DEBUG][io.lettuce.core.resource.KqueueProvider][<clinit>][73]-> Starting without optional kqueue library
2025-03-21 10:44:05 [DEBUG][io.lettuce.core.resource.IOUringProvider][<clinit>][75]-> Starting without optional io_uring library
2025-03-21 10:44:05 [DEBUG][io.lettuce.core.resource.EpollProvider][<clinit>][76]-> Starting without optional epoll library
2025-03-21 10:44:05 [DEBUG][io.lettuce.core.resource.DefaultEventLoopGroupProvider][allocate][112]-> Allocating executor io.netty.channel.nio.NioEventLoopGroup
2025-03-21 10:44:05 [DEBUG][io.lettuce.core.resource.DefaultEventLoopGroupProvider][createEventLoopGroup][231]-> Creating executor io.netty.channel.nio.NioEventLoopGroup
2025-03-21 10:44:05 [DEBUG][io.netty.channel.MultithreadEventLoopGroup][<clinit>][44]-> -Dio.netty.eventLoopThreads: 32
2025-03-21 10:44:05 [DEBUG][io.netty.channel.nio.NioEventLoop][<clinit>][110]-> -Dio.netty.noKeySetOptimization: false
2025-03-21 10:44:05 [DEBUG][io.netty.channel.nio.NioEventLoop][<clinit>][111]-> -Dio.netty.selectorAutoRebuildThreshold: 512
2025-03-21 10:44:05 [DEBUG][io.lettuce.core.resource.DefaultEventLoopGroupProvider][addReference][128]-> Adding reference to io.netty.channel.nio.NioEventLoopGroup@fa5f81c, existing ref count 0
2025-03-21 10:44:05 [DEBUG][io.lettuce.core.RedisClient][lambda$getSocketAddressSupplier$14][736]-> Resolved SocketAddress 127.0.0.1:6379 using redis://127.0.0.1/1?timeout=2s
2025-03-21 10:44:05 [DEBUG][io.lettuce.core.AbstractRedisClient][initializeChannelAsync0][401]-> Connecting to Redis at 127.0.0.1:6379
2025-03-21 10:44:05 [DEBUG][io.netty.channel.DefaultChannelId][<clinit>][79]-> -Dio.netty.processId: 20748 (auto-detected)
2025-03-21 10:44:05 [DEBUG][io.netty.util.NetUtil][<clinit>][148]-> -Djava.net.preferIPv4Stack: false
2025-03-21 10:44:05 [DEBUG][io.netty.util.NetUtil][<clinit>][149]-> -Djava.net.preferIPv6Addresses: false
2025-03-21 10:44:05 [DEBUG][io.netty.util.NetUtilInitializations][determineLoopback][145]-> Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-03-21 10:44:05 [DEBUG][io.netty.util.NetUtil][run][206]-> Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-03-21 10:44:05 [DEBUG][io.netty.channel.DefaultChannelId][<clinit>][101]-> -Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2025-03-21 10:44:05 [DEBUG][io.netty.util.Recycler][<clinit>][96]-> -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-03-21 10:44:05 [DEBUG][io.netty.util.Recycler][<clinit>][97]-> -Dio.netty.recycler.ratio: 8
2025-03-21 10:44:05 [DEBUG][io.netty.util.Recycler][<clinit>][98]-> -Dio.netty.recycler.chunkSize: 32
2025-03-21 10:44:05 [DEBUG][io.netty.util.Recycler][<clinit>][99]-> -Dio.netty.recycler.blocking: false
2025-03-21 10:44:05 [DEBUG][io.netty.util.Recycler][<clinit>][100]-> -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-03-21 10:44:05 [DEBUG][io.netty.buffer.AbstractByteBuf][<clinit>][63]-> -Dio.netty.buffer.checkAccessible: true
2025-03-21 10:44:05 [DEBUG][io.netty.buffer.AbstractByteBuf][<clinit>][64]-> -Dio.netty.buffer.checkBounds: true
2025-03-21 10:44:05 [DEBUG][io.netty.util.ResourceLeakDetectorFactory][newResourceLeakDetector][196]-> Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@78554a38
2025-03-21 10:44:06 [DEBUG][io.lettuce.core.AbstractRedisClient][lambda$null$5][439]-> Connecting to Redis at 127.0.0.1:6379: Success
2025-03-21 10:44:06 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=CONFIG, output=MapOutput [output=AsyncCommand [type=CONFIG, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:44:06 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=CONFIG, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sessionEventHttpSessionListenerAdapter'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'springSessionRepositoryFilter'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'springSessionRepositoryFilter' via factory method to bean named 'sessionRepository'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'baseMapper'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'taskExecutorBuilder'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'error'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'beanNameViewResolver'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ea6147e'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'conventionErrorViewResolver'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'errorAttributes'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'basicErrorController'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@448c8166'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@448c8166'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataWebConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.data.web.config.SpringDataWebConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ea6147e'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcContentNegotiationManager'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcConversionService'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcValidator'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'messageConverters'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'stringHttpMessageConverter'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'environment'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'jacksonObjectMapper'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ea6147e'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ea6147e'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'parameterNamesModule'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'jsonComponentModule'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'jsonMixinModule'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ea6147e'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'jacksonGeoModule'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sortResolver'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sortCustomizer'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration' via constructor to bean named 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'pageableResolver'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'pageableCustomizer'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'applicationTaskExecutor'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
2025-03-21 10:44:06 [DEBUG][org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor][initialize][184]-> Initializing ExecutorService 'applicationTaskExecutor'
2025-03-21 10:44:06 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter][initControllerAdviceCache][625]-> ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'welcomePageHandlerMapping'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcResourceUrlProvider'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ea6147e'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'welcomePageNotAcceptableHandlerMapping'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'welcomePageNotAcceptableHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ea6147e'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'welcomePageNotAcceptableHandlerMapping' via factory method to bean named 'mvcConversionService'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'welcomePageNotAcceptableHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'localeResolver'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'themeResolver'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'flashMapManager'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'requestMappingHandlerMapping'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2025-03-21 10:44:06 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.e.c.AppCarouselController:
	{ [/appCarousel/loadDataList]}: loadDataList(AppCarouselQuery)
	{ [/appCarousel/changeSort]}: changeSort(String)
	{ [/appCarousel/delCarousel]}: delCarousel(Integer)
	{ [/appCarousel/saveCarousel]}: saveCarousel(AppCarousel)
2025-03-21 10:44:06 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.e.c.AppFeedbackController:
	{ [/appFeedback/loadFeedbackReply]}: loadFeedbackReply(Integer)
	{ [/appFeedback/loadFeedback]}: loadFeedback(AppFeedbackQuery)
	{ [/appFeedback/replyFeedback]}: replyFeedback(String,Integer)
2025-03-21 10:44:06 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.e.c.AppUpdateController:
	{ [/app/loadDataList]}: loadDataList(AppUpdateQuery)
	{ [/app/postUpdate]}: postUpdate(Integer,Integer,String)
	{ [/app/delUpdate]}: delUpdate(Integer)
	{ [/app/saveUpdate]}: saveUpdate(Integer,String,String,Integer,MultipartFile)
2025-03-21 10:44:06 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.e.c.AppUserInfoController:
	{ [/appUser/updateStatus]}: updateStatus(String,Integer)
	{ [/appUser/loadDataList]}: loadDataList(AppUserInfoQuery)
	{ [/appUser/loadDeviceList]}: loadDeviceList(AppDeviceQuery)
2025-03-21 10:44:06 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.e.c.CategoryController:
	{ [/category/loadAllCategory4Select]}: loadAllCategory4Select(Integer)
	{ [/category/saveCategory]}: saveCategory(Category)
	{ [/category/changeSort]}: changeSort(String)
	{ [/category/loadAllCategory]}: loadAllCategory(CategoryQuery)
	{ [/category/delCategory]}: delCategory(Integer)
2025-03-21 10:44:06 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.e.c.ExamQuestionController:
	{ [/examQuestion/showExamQuestionDetailNext]}: showExamQuestionDetailNext(ExamQuestionQuery,Integer,Integer)
	{ [/examQuestion/importExamQuestion]}: importExamQuestion(HttpSession,MultipartFile)
	{ [/examQuestion/cancelPostExamQuestion]}: cancelPostExamQuestion(String)
	{ [/examQuestion/delExamQuestionBatch]}: delExamQuestionBatch(String)
	{ [/examQuestion/loadDataList]}: loadDataList(ExamQuestionQuery)
	{ [/examQuestion/postExamQuestion]}: postExamQuestion(String)
	{ [/examQuestion/delExamQuestion]}: delExamQuestion(HttpSession,Integer)
	{ [/examQuestion/saveExamQuestion]}: saveExamQuestion(HttpSession,ExamQuestion,String)
	{ [/examQuestion/loadQuestionItem]}: loadQuestionItem(Integer)
2025-03-21 10:44:06 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.e.c.FileController:
	{ [/file/downloadTemplate]}: downloadTemplate(HttpServletResponse,HttpServletRequest,Integer)
	{ [/file/getImage/{imageFolder}/{imageName}]}: getImage(HttpServletResponse,String,String)
	{ [/file/uploadFile]}: uploadFile(MultipartFile,Integer)
2025-03-21 10:44:06 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.e.c.IndexController:
	{ [/index/getContentWeekData]}: getContentWeekData()
	{ [/index/getAppWeekData]}: getAppWeekData()
	{ [/index/getAllData]}: getAllData()
2025-03-21 10:44:06 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.e.c.LoginController:
	{ [/login]}: login(HttpSession,String,String,String)
	{ [/checkCode]}: checkCode(HttpServletResponse,HttpSession)
	{ [/logout]}: logout(HttpSession)
	{ [/updateMyPwd]}: updateMyPwd(HttpSession,String)
2025-03-21 10:44:06 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.e.c.QuestionInfoController:
	{ [/questionInfo/showQuestionDetailNext]}: showQuestionDetailNext(QuestionInfoQuery,Integer,Integer)
	{ [/questionInfo/cancelPostQuestion]}: cancelPostQuestion(String)
	{ [/questionInfo/loadDataList]}: loadDataList(QuestionInfoQuery)
	{ [/questionInfo/importQuestion]}: importQuestion(HttpSession,MultipartFile)
	{ [/questionInfo/saveQuestionInfo]}: saveQuestionInfo(HttpSession,QuestionInfo)
	{ [/questionInfo/postQuestion]}: postQuestion(String)
	{ [/questionInfo/delQuestion]}: delQuestion(HttpSession,Integer)
	{ [/questionInfo/delQuestionBatch]}: delQuestionBatch(String)
2025-03-21 10:44:06 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.e.c.ShareInfoController:
	{ [/shareInfo/showShareDetailNext]}: showShareDetailNext(ShareInfoQuery,Integer,Integer)
	{ [/shareInfo/loadDataList]}: loadDataList(ShareInfoQuery)
	{ [/shareInfo/saveShareInfo]}: saveShareInfo(HttpSession,Integer,String,Integer,String,String)
	{ [/shareInfo/delShareBatch]}: delShareBatch(String)
	{ [/shareInfo/delShare]}: delShare(HttpSession,String)
	{ [/shareInfo/postShare]}: postShare(String)
	{ [/shareInfo/cancelPostShare]}: cancelPostShare(String)
2025-03-21 10:44:06 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.e.c.SysAccountController:
	{ [/settings/updateStatus]}: updateStatus(Integer,Integer)
	{ [/settings/loadAccountList]}: loadAccountList(SysAccountQuery)
	{ [/settings/delAccount]}: delAccount(Integer)
	{ [/settings/updatePassword]}: updatePassword(Integer,String)
	{ [/settings/saveAccount]}: saveAccount(SysAccount)
2025-03-21 10:44:06 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.e.c.SysMenuController:
	{ [/settings/delMenu]}: delMenu(Integer)
	{ [/settings/menuList]}: menuList()
	{ [/settings/saveMenu]}: saveMenu(SysMenu)
2025-03-21 10:44:06 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.e.c.SysRoleController:
	{ [/settings/saveRoleMenu]}: saveRoleMenu(Integer,String,String)
	{ [/settings/delRole]}: delRole(Integer)
	{ [/settings/saveRole]}: saveRole(SysRole,String,String)
	{ [/settings/loadRoles]}: loadRoles(SysRoleQuery)
	{ [/settings/getRoleByRoleId]}: getRoleByRoleId(Integer)
	{ [/settings/loadAllRoles]}: loadAllRoles()
2025-03-21 10:44:06 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-03-21 10:44:06 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][handlerMethodsInitialized][367]-> 69 mappings in 'requestMappingHandlerMapping'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcPatternParser'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcUrlPathHelper'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcPathMatcher'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'viewControllerHandlerMapping'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'beanNameHandlerMapping'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2025-03-21 10:44:06 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlers][86]-> 'beanNameHandlerMapping' {}
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'routerFunctionMapping'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'resourceHandlerMapping'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2025-03-21 10:44:06 [DEBUG][org.springframework.web.servlet.config.annotation.WebMvcConfigurer][addResourceHandlers][335]-> Default resource handling disabled
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'defaultServletHandlerMapping'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'handlerFunctionAdapter'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcUriComponentsContributor'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'handlerExceptionResolver'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
2025-03-21 10:44:06 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver][initExceptionHandlerAdviceCache][307]-> ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcViewResolver'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'viewNameTranslator'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'defaultViewResolver'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'viewResolver'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@448c8166'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'viewResolver'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'freeMarkerViewResolver'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerServletWebConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.freemarker-org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerServletWebConfiguration' via constructor to bean named 'spring.freemarker-org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari' via constructor to bean named 'dataSource'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'hikariPoolDataSourceMetadataProvider'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.jmx-org.springframework.boot.autoconfigure.jmx.JmxProperties'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration' via constructor to bean named 'spring.jmx-org.springframework.boot.autoconfigure.jmx.JmxProperties'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mbeanExporter'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'objectNamingStrategy'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mbeanExporter' via factory method to bean named 'objectNamingStrategy'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mbeanExporter' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@448c8166'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mbeanServer'
2025-03-21 10:44:06 [DEBUG][org.springframework.jmx.support.JmxUtils][locateMBeanServer][127]-> Found MBeanServer: com.sun.jmx.mbeanserver.JmxMBeanServer@6193b845
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'springApplicationAdminRegistrar'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'springApplicationAdminRegistrar' via factory method to bean named 'environment'
2025-03-21 10:44:06 [DEBUG][org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin][afterPropertiesSet][131]-> Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'applicationAvailability'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'stringRedisTemplate'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'stringRedisTemplate' via factory method to bean named 'redisConnectionFactory'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'lifecycleProcessor'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'lifecycleProcessor' via factory method to bean named 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'reactiveRedisTemplate'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'reactiveRedisTemplate' via factory method to bean named 'redisConnectionFactory'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'reactiveRedisTemplate' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ea6147e'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'reactiveStringRedisTemplate'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'reactiveStringRedisTemplate' via factory method to bean named 'redisConnectionFactory'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'keyValueMappingContext'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisCustomConversions'
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class [B as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.String as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Number to class [B as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Number as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Enum to class [B as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Enum as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Boolean to class [B as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Boolean as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class [B as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.Date as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.UUID to class [B as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.UUID as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class [B as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDate as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class [B as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalTime as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class [B as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Instant as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class [B as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZoneId as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class [B as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Period as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class [B as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Duration as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class java.lang.String as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Period as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisReferenceResolver'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisConverter'
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class [B as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.String as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Number to class [B as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Number as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Enum to class [B as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Enum as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Boolean to class [B as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Boolean as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class [B as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.Date as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.UUID to class [B as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.UUID as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class [B as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDate as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class [B as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalTime as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class [B as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Instant as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class [B as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZoneId as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class [B as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Period as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class [B as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Duration as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class java.lang.String as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Period as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class [B as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.String as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Number to class [B as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Number as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Enum to class [B as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Enum as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Boolean to class [B as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Boolean as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class [B as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.Date as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.UUID to class [B as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.UUID as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class [B as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDate as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class [B as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalTime as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class [B as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Instant as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class [B as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZoneId as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class [B as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Period as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class [B as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Duration as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class java.lang.String as writing converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Period as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisKeyValueAdapter'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisKeyValueTemplate'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.data.web.config.ProjectingArgumentResolverRegistrar'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'freeMarkerConfigurer'
2025-03-21 10:44:06 [DEBUG][org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer][getTemplateLoaderForPath][362]-> File system access not preferred: using SpringTemplateLoader
2025-03-21 10:44:06 [DEBUG][org.springframework.ui.freemarker.SpringTemplateLoader][<init>][62]-> SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ea6147e, started on Fri Mar 21 10:44:02 CST 2025] and template loader path [classpath:/templates/]
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'freeMarkerConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'freeMarkerConfiguration' via factory method to bean named 'freeMarkerConfigurer'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ea6147e'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration' via constructor to bean named 'spring.freemarker-org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties'
2025-03-21 10:44:06 [WARN][org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration][checkTemplateLocationExists][65]-> Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.check-template-location=false)
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'dataSourceScriptDatabaseInitializer'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'dataSource'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'jdbcTemplate'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.netty-org.springframework.boot.autoconfigure.netty.NettyProperties'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration' via constructor to bean named 'spring.netty-org.springframework.boot.autoconfigure.netty.NettyProperties'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$ServletSessionRepositoryValidator'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$ServletSessionRepositoryValidator' via constructor to bean named 'spring.session-org.springframework.boot.autoconfigure.session.SessionProperties'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.session.SessionAutoConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.webflux-org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'scheduledBeanLazyInitializationExcludeFilter'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'taskSchedulerBuilder'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'transactionManager'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'transactionManager' via factory method to bean named 'environment'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'transactionManager' via factory method to bean named 'dataSource'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'transactionTemplate'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
2025-03-21 10:44:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'multipartResolver'
2025-03-21 10:44:06 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][afterSingletonsInstantiated][434]-> Registering beans for JMX exposure on startup
2025-03-21 10:44:06 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeans][541]-> Autodetecting user-defined JMX MBeans
2025-03-21 10:44:06 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect][896]-> Bean with name 'dataSource' has been autodetected for JMX exposure
2025-03-21 10:44:06 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance][669]-> Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2025-03-21 10:44:06 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][start][352]-> Starting beans in phase -2147483647
2025-03-21 10:44:06 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][doStart][184]-> Successfully started bean 'springBootLoggingLifecycle'
2025-03-21 10:44:06 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][start][352]-> Starting beans in phase 2147483646
2025-03-21 10:44:06 [INFO][org.apache.coyote.http11.Http11NioProtocol][log][173]-> Starting ProtocolHandler ["http-nio-9091"]
2025-03-21 10:44:06 [INFO][org.springframework.boot.web.embedded.tomcat.TomcatWebServer][start][220]-> Tomcat started on port(s): 9091 (http) with context path '/api'
2025-03-21 10:44:06 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][doStart][184]-> Successfully started bean 'webServerStartStop'
2025-03-21 10:44:06 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][start][352]-> Starting beans in phase 2147483647
2025-03-21 10:44:06 [DEBUG][io.lettuce.core.RedisClient][lambda$getSocketAddressSupplier$14][736]-> Resolved SocketAddress 127.0.0.1:6379 using redis://127.0.0.1/1?timeout=2s
2025-03-21 10:44:06 [DEBUG][io.lettuce.core.AbstractRedisClient][initializeChannelAsync0][401]-> Connecting to Redis at 127.0.0.1:6379
2025-03-21 10:44:06 [DEBUG][io.lettuce.core.AbstractRedisClient][lambda$null$5][439]-> Connecting to Redis at 127.0.0.1:6379: Success
2025-03-21 10:44:06 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:44:06 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:44:06 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][doStart][184]-> Successfully started bean 'springSessionRedisMessageListenerContainer'
2025-03-21 10:44:06 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][doStart][184]-> Successfully started bean 'webServerGracefulShutdown'
2025-03-21 10:44:06 [DEBUG][org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener][logAutoConfigurationReport][126]-> 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   ApplicationAvailabilityAutoConfiguration#applicationAvailability matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.availability.ApplicationAvailability; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnWarDeployment the application is not deployed as a WAR file. (OnWarDeploymentCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   FreeMarkerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'freemarker.template.Configuration', 'org.springframework.ui.freemarker.FreeMarkerConfigurationFactory' (OnClassCondition)

   FreeMarkerServletWebConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   FreeMarkerServletWebConfiguration#freeMarkerConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.freemarker.FreeMarkerConfig; SearchStrategy: all) did not find any beans (OnBeanCondition)

   FreeMarkerServletWebConfiguration#freeMarkerViewResolver matched:
      - @ConditionalOnProperty (spring.freemarker.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (names: freeMarkerViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LettuceConnectionConfiguration matched:
      - @ConditionalOnClass found required class 'io.lettuce.core.RedisClient' (OnClassCondition)
      - @ConditionalOnProperty (spring.redis.client-type=lettuce) matched (OnPropertyCondition)

   LettuceConnectionConfiguration#lettuceClientResources matched:
      - @ConditionalOnMissingBean (types: io.lettuce.core.resource.ClientResources; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LettuceConnectionConfiguration#redisConnectionFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: javax.servlet.MultipartConfigElement,org.springframework.web.multipart.commons.CommonsMultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.ibatis.session.SqlSessionFactory', 'org.mybatis.spring.SqlSessionFactoryBean' (OnClassCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource' (OnBeanCondition)

   MybatisAutoConfiguration#sqlSessionFactory matched:
      - @ConditionalOnMissingBean (types: org.apache.ibatis.session.SqlSessionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisAutoConfiguration#sqlSessionTemplate matched:
      - @ConditionalOnMissingBean (types: org.mybatis.spring.SqlSessionTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NettyAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RedisAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisAutoConfiguration#stringRedisTemplate matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found a single bean 'redisConnectionFactory'; @ConditionalOnMissingBean (types: org.springframework.data.redis.core.StringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisCacheConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)
      - Cache org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration automatic cache type (CacheCondition)

   RedisReactiveAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.redis.connection.ReactiveRedisConnectionFactory', 'org.springframework.data.redis.core.ReactiveRedisTemplate', 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisReactiveAutoConfiguration#reactiveRedisTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: reactiveRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisReactiveAutoConfiguration#reactiveStringRedisTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: reactiveStringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.redis.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (types: org.springframework.data.redis.repository.support.RedisRepositoryFactoryBean; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisSessionConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.redis.core.RedisTemplate', 'org.springframework.session.data.redis.RedisIndexedSessionRepository' (OnClassCondition)
      - Session Condition found spring.session.store-type property REDIS (ServletSessionCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration#restTemplateBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SessionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.session.Session' (OnClassCondition)
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   SessionAutoConfiguration.ServletSessionConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   SessionAutoConfiguration.ServletSessionConfiguration#cookieSerializer matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on SessionAutoConfiguration.DefaultCookieSerializerCondition.CookieHttpSessionIdResolverAvailable found non-matching nested conditions @ConditionalOnBean (types: org.springframework.session.web.http.CookieHttpSessionIdResolver; SearchStrategy: all) did not find any beans of type org.springframework.session.web.http.CookieHttpSessionIdResolver, @ConditionalOnBean (types: org.springframework.session.web.http.CookieHttpSessionIdResolver; SearchStrategy: all) did not find any beans of type org.springframework.session.web.http.CookieHttpSessionIdResolver; NestedCondition on SessionAutoConfiguration.DefaultCookieSerializerCondition.NoComponentsAvailable @ConditionalOnMissingBean (types: org.springframework.session.web.http.HttpSessionIdResolver,org.springframework.session.web.http.CookieSerializer; SearchStrategy: all) did not find any beans (SessionAutoConfiguration.DefaultCookieSerializerCondition)

   SessionRepositoryFilterConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.session.web.http.SessionRepositoryFilter; SearchStrategy: all) found bean 'springSessionRepositoryFilter' (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#scheduledBeanLazyInitializationExcludeFilter matched:
      - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) found bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' (OnBeanCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   EhCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Cache' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedMongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClientSettings' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerNonWebConfiguration:
      Did not match:
         - @ConditionalOnWebApplication found 'session' scope and did not find reactive web application classes (OnWebApplicationCondition)

   FreeMarkerReactiveWebConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   FreeMarkerServletWebConfiguration#resourceUrlEncodingFilter:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.WebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastSessionConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.hazelcast.HazelcastIndexedSessionRepository' (OnClassCondition)

   HibernateJpaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.persistence.EntityManager' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JdbcSessionConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.jdbc.JdbcIndexedSessionRepository' (OnClassCondition)

   JedisConnectionConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.apache.commons.pool2.impl.GenericObjectPool', 'redis.clients.jedis.Jedis' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.Message' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JtaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.Transaction' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mail.test-connection) did not find property 'test-connection' (OnPropertyCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoSessionConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.mongodb.core.MongoOperations' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   MybatisAutoConfiguration.MapperScannerRegistrarNotFoundConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.mybatis.spring.mapper.MapperFactoryBean; SearchStrategy: all) found beans of type 'org.mybatis.spring.mapper.MapperFactoryBean' &ACommonMapper, &appCarouselMapper, &appDeviceMapper, &appExamMapper, &appExamQuestionMapper, &appFeedbackMapper, &appUpdateMapper, &appUserCollectMapper, &appUserInfoMapper, &baseMapper, &categoryMapper, &examQuestionItemMapper, &examQuestionMapper, &questionInfoMapper, &shareInfoMapper, &sysAccountMapper, &sysMenuMapper, &sysRole2MenuMapper, &sysRoleMapper (OnBeanCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NoOpSessionConfiguration:
      Did not match:
         - Session Condition found spring.session.store-type property REDIS (ServletSessionCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RedisAutoConfiguration#redisTemplate:
      Did not match:
         - @ConditionalOnMissingBean (names: redisTemplate; SearchStrategy: all) found beans named redisTemplate (OnBeanCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration.ReactiveSessionConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   SessionAutoConfiguration.ServletSessionConfiguration.RememberMeServicesConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.web.authentication.RememberMeServices' (OnClassCondition)

   SessionAutoConfiguration.ServletSessionConfiguration.ServletSessionRepositoryConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.session.SessionRepository; SearchStrategy: all) found beans of type 'org.springframework.session.SessionRepository' sessionRepository (OnBeanCondition)

   SolrAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.impl.CloudSolrClient' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskScheduler:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.scheduling.annotation.SchedulingConfigurer,org.springframework.scheduling.TaskScheduler,java.util.concurrent.ScheduledExecutorService; SearchStrategy: all) found beans of type 'org.springframework.scheduling.annotation.SchedulingConfigurer' org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration$SessionCleanupConfiguration (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring5.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) found beans of type 'org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration' org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)
         - Ancestor org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   ValidationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.validation.executable.ExecutableValidator' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.client.core.WebServiceTemplate' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.Jetty10WebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.websocket.javax.server.internal.JavaxWebSocketServerContainer', 'org.eclipse.jetty.websocket.server.JettyWebSocketServerContainer' (OnClassCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.TransactionManager' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



2025-03-21 10:44:06 [INFO][org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor][finishRegistration][315]-> No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2025-03-21 10:44:06 [DEBUG][org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver][logKeyFound][115]-> Found key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties' with value of type String
2025-03-21 10:44:06 [INFO][com.easyjob.EasyjobAdminApplication][logStarted][61]-> Started EasyjobAdminApplication in 4.246 seconds (JVM running for 5.144)
2025-03-21 10:44:06 [DEBUG][org.springframework.boot.availability.ApplicationAvailabilityBean][onApplicationEvent][77]-> Application availability state LivenessState changed to CORRECT
2025-03-21 10:44:06 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1103]-> HikariCPDatasource - configuration:
2025-03-21 10:44:06 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> allowPoolSuspension................................false
2025-03-21 10:44:06 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> autoCommit................................true
2025-03-21 10:44:06 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> catalog................................none
2025-03-21 10:44:06 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> connectionInitSql................................none
2025-03-21 10:44:06 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> connectionTestQuery................................"SELECT 1"
2025-03-21 10:44:06 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> connectionTimeout................................30000
2025-03-21 10:44:06 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> dataSource................................none
2025-03-21 10:44:06 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> dataSourceClassName................................none
2025-03-21 10:44:06 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> dataSourceJNDI................................none
2025-03-21 10:44:06 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> dataSourceProperties................................{password=<masked>}
2025-03-21 10:44:06 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> driverClassName................................"com.mysql.cj.jdbc.Driver"
2025-03-21 10:44:06 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> exceptionOverrideClassName................................none
2025-03-21 10:44:06 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> healthCheckProperties................................{}
2025-03-21 10:44:06 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> healthCheckRegistry................................none
2025-03-21 10:44:06 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> idleTimeout................................180000
2025-03-21 10:44:06 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> initializationFailTimeout................................1
2025-03-21 10:44:06 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> isolateInternalQueries................................false
2025-03-21 10:44:06 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> jdbcUrl................................jdbc:mysql://127.0.0.1:3306/easyjob?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf8&autoReconnect=true&allowMultiQueries=true
2025-03-21 10:44:06 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> keepaliveTime................................0
2025-03-21 10:44:06 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> leakDetectionThreshold................................0
2025-03-21 10:44:06 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> maxLifetime................................1800000
2025-03-21 10:44:06 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> maximumPoolSize................................10
2025-03-21 10:44:06 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> metricRegistry................................none
2025-03-21 10:44:06 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> metricsTrackerFactory................................none
2025-03-21 10:44:06 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> minimumIdle................................5
2025-03-21 10:44:06 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> password................................<masked>
2025-03-21 10:44:06 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> poolName................................"HikariCPDatasource"
2025-03-21 10:44:06 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> readOnly................................false
2025-03-21 10:44:06 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> registerMbeans................................false
2025-03-21 10:44:06 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> scheduledExecutor................................none
2025-03-21 10:44:06 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> schema................................none
2025-03-21 10:44:06 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> threadFactory................................internal
2025-03-21 10:44:06 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> transactionIsolation................................default
2025-03-21 10:44:06 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> username................................"root"
2025-03-21 10:44:06 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> validationTimeout................................5000
2025-03-21 10:44:06 [INFO][com.zaxxer.hikari.HikariDataSource][getConnection][110]-> HikariCPDatasource - Starting...
2025-03-21 10:44:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][checkFailFast][565]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@39f42d0e
2025-03-21 10:44:07 [INFO][com.zaxxer.hikari.HikariDataSource][getConnection][123]-> HikariCPDatasource - Start completed.
2025-03-21 10:44:07 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:44:07 [ERROR][com.easyjob.InitRun][run][31]-> 服务启动成功，可以开始愉快的开发了
2025-03-21 10:44:07 [DEBUG][org.springframework.boot.availability.ApplicationAvailabilityBean][onApplicationEvent][77]-> Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2025-03-21 10:44:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=1, active=1, idle=0, waiting=0)
2025-03-21 10:44:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=1, active=1, idle=0, waiting=0)
2025-03-21 10:44:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@40ed682f
2025-03-21 10:44:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@3420fb5e
2025-03-21 10:44:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@65c00119
2025-03-21 10:44:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@21ae4c95
2025-03-21 10:44:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@618e1878
2025-03-21 10:44:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After adding stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:44:16 [INFO][org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/api]][log][173]-> Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-21 10:44:16 [INFO][org.springframework.web.servlet.DispatcherServlet][initServletBean][525]-> Initializing Servlet 'dispatcherServlet'
2025-03-21 10:44:16 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initMultipartResolver][522]-> Detected StandardServletMultipartResolver
2025-03-21 10:44:16 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initLocaleResolver][546]-> Detected AcceptHeaderLocaleResolver
2025-03-21 10:44:16 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initThemeResolver][571]-> Detected FixedThemeResolver
2025-03-21 10:44:16 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initRequestToViewNameTranslator][721]-> Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@7da635c0
2025-03-21 10:44:16 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initFlashMapManager][785]-> Detected org.springframework.web.servlet.support.SessionFlashMapManager@1de4bee0
2025-03-21 10:44:16 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initServletBean][542]-> enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-03-21 10:44:16 [INFO][org.springframework.web.servlet.DispatcherServlet][initServletBean][547]-> Completed initialization in 2 ms
2025-03-21 10:44:16 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> GET "/api/checkCode?time=1742525056667", parameters={masked}
2025-03-21 10:44:16 [DEBUG][org.springframework.session.web.http.SessionRepositoryFilter.SESSION_LOGGER][getSession][305]-> No session found by id: Caching result for getSession(false) for this HttpServletRequest.
2025-03-21 10:44:16 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.LoginController#checkCode(HttpServletResponse, HttpSession)
2025-03-21 10:44:16 [DEBUG][org.springframework.session.web.http.SessionRepositoryFilter.SESSION_LOGGER][getSession][305]-> No session found by id: Caching result for getSession(false) for this HttpServletRequest.
2025-03-21 10:44:16 [DEBUG][org.springframework.session.web.http.SessionRepositoryFilter.SESSION_LOGGER][getSession][318]-> A new session was created. To help you troubleshoot where the session was created we provided a StackTrace (this is not an error). You can prevent this from appearing by disabling DEBUG logging for org.springframework.session.web.http.SessionRepositoryFilter.SESSION_LOGGER
java.lang.RuntimeException: For debugging purposes only (not an error)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:320)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:332)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:193)
	at org.springframework.web.servlet.mvc.method.annotation.ServletRequestMethodArgumentResolver.resolveArgument(ServletRequestMethodArgumentResolver.java:139)
	at org.springframework.web.servlet.mvc.method.annotation.ServletRequestMethodArgumentResolver.resolveArgument(ServletRequestMethodArgumentResolver.java:124)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:142)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2025-03-21 10:44:17 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:44:17 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:44:17 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:44:17 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:44:17 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:44:17 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:44:17 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PUBLISH, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:44:17 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 10:44:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:44:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:44:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 10:45:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 10:45:00 CST 2025
2025-03-21 10:45:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:45:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:45:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:45:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:45:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 10:45:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:45:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:45:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 10:45:46 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/login", parameters={multipart}
2025-03-21 10:45:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:45:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.LoginController#login(HttpSession, String, String, String)
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a8e10c4] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1663984715 wrapping com.mysql.cj.jdbc.ConnectionImpl@40ed682f] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.SysAccountMapper.selectByPhone][debug][159]-> ==>  Preparing: select user_id ,phone,user_name,password,position, status,roles,create_time from sys_account where phone=? 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.SysAccountMapper.selectByPhone][debug][159]-> ==> Parameters: 18688886666(String)
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.SysAccountMapper.selectByPhone][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a8e10c4]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@410cac04] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1860986368 wrapping com.mysql.cj.jdbc.ConnectionImpl@40ed682f] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.SysMenuMapper.selectList][debug][159]-> ==>  Preparing: SELECT menu_id ,menu_name,menu_type,menu_url,p_id, sort,permission_code,icon FROM sys_menu order by sort asc 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.SysMenuMapper.selectList][debug][159]-> ==> Parameters: 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.SysMenuMapper.selectList][debug][159]-> <==      Total: 46
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@410cac04]
2025-03-21 10:45:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 10:45:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@59815462]
2025-03-21 10:45:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:45:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:45:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:45:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:45:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:45:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:45:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:45:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:45:46 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 10:45:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:45:46 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/index/getAppWeekData", parameters={multipart}
2025-03-21 10:45:46 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/index/getContentWeekData", parameters={multipart}
2025-03-21 10:45:46 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/index/getAllData", parameters={multipart}
2025-03-21 10:45:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:45:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:45:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:45:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.IndexController#getAppWeekData()
2025-03-21 10:45:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.IndexController#getContentWeekData()
2025-03-21 10:45:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.IndexController#getAllData()
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58b63b9f] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@979207a] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69aa7bb2] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1838539359 wrapping com.mysql.cj.jdbc.ConnectionImpl@40ed682f] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1172773301 wrapping com.mysql.cj.jdbc.ConnectionImpl@3420fb5e] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1838868807 wrapping com.mysql.cj.jdbc.ConnectionImpl@65c00119] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69aa7bb2]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1975396b] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1538303744 wrapping com.mysql.cj.jdbc.ConnectionImpl@40ed682f] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58b63b9f]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@979207a]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1975396b]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55003e3e] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@774c63c8] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2eec2c0d] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@518190810 wrapping com.mysql.cj.jdbc.ConnectionImpl@40ed682f] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1886442137 wrapping com.mysql.cj.jdbc.ConnectionImpl@3420fb5e] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@977752284 wrapping com.mysql.cj.jdbc.ConnectionImpl@65c00119] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55003e3e]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2eec2c0d]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@774c63c8]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4cf6b2cf] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b97a5f4] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1cbf7984] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2144459117 wrapping com.mysql.cj.jdbc.ConnectionImpl@65c00119] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@53830424 wrapping com.mysql.cj.jdbc.ConnectionImpl@40ed682f] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4cf6b2cf]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b97a5f4]
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1696084955 wrapping com.mysql.cj.jdbc.ConnectionImpl@3420fb5e] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cef23bc] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15e7f35d] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@368481316 wrapping com.mysql.cj.jdbc.ConnectionImpl@40ed682f] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1133075472 wrapping com.mysql.cj.jdbc.ConnectionImpl@65c00119] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15e7f35d]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48b73975] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1312455279 wrapping com.mysql.cj.jdbc.ConnectionImpl@65c00119] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48b73975]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cef23bc]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1cbf7984]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@775dea0c] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33979773] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7fdbfff2] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1648018840 wrapping com.mysql.cj.jdbc.ConnectionImpl@40ed682f] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1222473066 wrapping com.mysql.cj.jdbc.ConnectionImpl@65c00119] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@515447460 wrapping com.mysql.cj.jdbc.ConnectionImpl@3420fb5e] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-14(String), 2025-03-14(String)
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33979773]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@775dea0c]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22e73328] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69e1e545] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@987268342 wrapping com.mysql.cj.jdbc.ConnectionImpl@65c00119] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@243384753 wrapping com.mysql.cj.jdbc.ConnectionImpl@40ed682f] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7fdbfff2]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22e73328]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4fa20b42] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57f073d1] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@703701741 wrapping com.mysql.cj.jdbc.ConnectionImpl@65c00119] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@421020712 wrapping com.mysql.cj.jdbc.ConnectionImpl@3420fb5e] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57f073d1]
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4fa20b42]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69e1e545]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5642b160] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bbae6a6] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e5265ca] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@41434754 wrapping com.mysql.cj.jdbc.ConnectionImpl@65c00119] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1151145608 wrapping com.mysql.cj.jdbc.ConnectionImpl@3420fb5e] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@150961800 wrapping com.mysql.cj.jdbc.ConnectionImpl@40ed682f] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5642b160]
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bbae6a6]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e5265ca]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5629b88e] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71c00b93] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cdb025d] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@354667162 wrapping com.mysql.cj.jdbc.ConnectionImpl@65c00119] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1023630555 wrapping com.mysql.cj.jdbc.ConnectionImpl@3420fb5e] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@31085625 wrapping com.mysql.cj.jdbc.ConnectionImpl@40ed682f] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5629b88e]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71c00b93]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20371ff7] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7786cb39] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@107731657 wrapping com.mysql.cj.jdbc.ConnectionImpl@3420fb5e] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1002520247 wrapping com.mysql.cj.jdbc.ConnectionImpl@65c00119] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-15(String), 2025-03-15(String)
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20371ff7]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7786cb39]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b09030] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1aa10c7] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cdb025d]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67971d5d] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@501284822 wrapping com.mysql.cj.jdbc.ConnectionImpl@65c00119] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1959688375 wrapping com.mysql.cj.jdbc.ConnectionImpl@3420fb5e] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1132081688 wrapping com.mysql.cj.jdbc.ConnectionImpl@40ed682f] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b09030]
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67971d5d]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1aa10c7]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7523f8c4] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@719c21bd] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43072833] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1955841856 wrapping com.mysql.cj.jdbc.ConnectionImpl@65c00119] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@775862054 wrapping com.mysql.cj.jdbc.ConnectionImpl@40ed682f] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? 
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer)
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1837824552 wrapping com.mysql.cj.jdbc.ConnectionImpl@3420fb5e] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7523f8c4]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@739e1754] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43072833]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c60383f] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@428942395 wrapping com.mysql.cj.jdbc.ConnectionImpl@65c00119] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1806495072 wrapping com.mysql.cj.jdbc.ConnectionImpl@3420fb5e] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@739e1754]
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@2155427f]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@719c21bd]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c60383f]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a7c4c1c] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13822287] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@721228583 wrapping com.mysql.cj.jdbc.ConnectionImpl@40ed682f] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1930346281 wrapping com.mysql.cj.jdbc.ConnectionImpl@3420fb5e] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-20(String), 2025-03-20(String)
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-16(String), 2025-03-16(String)
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13822287]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a7c4c1c]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39cde617] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 10:45:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@625c08b0]
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1787119944 wrapping com.mysql.cj.jdbc.ConnectionImpl@3420fb5e] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 10:45:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 10:45:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39cde617]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ceec0fb] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@449145391 wrapping com.mysql.cj.jdbc.ConnectionImpl@3420fb5e] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 10:45:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ceec0fb]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5574d37d] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1873229872 wrapping com.mysql.cj.jdbc.ConnectionImpl@3420fb5e] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:45:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5574d37d]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51be9410] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:45:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1955762349 wrapping com.mysql.cj.jdbc.ConnectionImpl@3420fb5e] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 10:45:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-17(String), 2025-03-17(String)
2025-03-21 10:45:46 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 10:45:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:45:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51be9410]
2025-03-21 10:45:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1aff6541] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@717116733 wrapping com.mysql.cj.jdbc.ConnectionImpl@3420fb5e] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 10:45:46 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 10:45:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1aff6541]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56d427db] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@937461037 wrapping com.mysql.cj.jdbc.ConnectionImpl@3420fb5e] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56d427db]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@681843cc] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@528829419 wrapping com.mysql.cj.jdbc.ConnectionImpl@3420fb5e] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@681843cc]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a8cada4] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@278957850 wrapping com.mysql.cj.jdbc.ConnectionImpl@3420fb5e] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-18(String), 2025-03-18(String)
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a8cada4]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72016d30] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@963874219 wrapping com.mysql.cj.jdbc.ConnectionImpl@3420fb5e] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72016d30]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fd50f92] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1878940864 wrapping com.mysql.cj.jdbc.ConnectionImpl@3420fb5e] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fd50f92]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a52acb2] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1627650236 wrapping com.mysql.cj.jdbc.ConnectionImpl@3420fb5e] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a52acb2]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2746e1a4] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1855249759 wrapping com.mysql.cj.jdbc.ConnectionImpl@3420fb5e] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-19(String), 2025-03-19(String)
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2746e1a4]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ff45cde] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1596968773 wrapping com.mysql.cj.jdbc.ConnectionImpl@3420fb5e] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ff45cde]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67341646] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@172733650 wrapping com.mysql.cj.jdbc.ConnectionImpl@3420fb5e] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67341646]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7003aacb] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@935462059 wrapping com.mysql.cj.jdbc.ConnectionImpl@3420fb5e] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7003aacb]
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@332d8e5c] was not registered for synchronization because synchronization is not active
2025-03-21 10:45:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1578450688 wrapping com.mysql.cj.jdbc.ConnectionImpl@3420fb5e] will not be managed by Spring
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-20(String), 2025-03-20(String)
2025-03-21 10:45:46 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 10:45:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@332d8e5c]
2025-03-21 10:45:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 10:45:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@5f56c649]
2025-03-21 10:45:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:45:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:45:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:45:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:45:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:45:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:45:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:45:46 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 10:45:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:46:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 10:46:00 CST 2025
2025-03-21 10:46:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:46:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:46:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:46:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:46:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 10:46:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:46:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:46:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 10:47:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 10:47:00 CST 2025
2025-03-21 10:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:47:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:47:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:47:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 10:47:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:47:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:47:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 10:48:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 10:48:00 CST 2025
2025-03-21 10:48:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:48:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:48:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:48:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:48:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 10:48:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:48:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:48:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 10:49:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 10:49:00 CST 2025
2025-03-21 10:49:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:49:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:49:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:49:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:49:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 10:49:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:49:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:49:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 10:50:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 10:50:00 CST 2025
2025-03-21 10:50:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:50:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:50:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:50:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:50:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 10:50:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:50:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:50:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 10:51:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 10:51:00 CST 2025
2025-03-21 10:51:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:51:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:51:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:51:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:51:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 10:51:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:51:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:51:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 10:52:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 10:52:00 CST 2025
2025-03-21 10:52:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:52:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:52:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:52:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:52:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 10:52:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:52:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:52:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 10:53:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 10:53:00 CST 2025
2025-03-21 10:53:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:53:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:53:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:53:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:53:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 10:53:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:53:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:53:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 10:54:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 10:54:00 CST 2025
2025-03-21 10:54:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:54:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:54:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:54:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:54:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 10:54:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:54:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:54:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 10:55:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 10:55:00 CST 2025
2025-03-21 10:55:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:55:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:55:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:55:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:55:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 10:55:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:55:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:55:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 10:56:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 10:56:00 CST 2025
2025-03-21 10:56:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:56:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:56:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:56:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:56:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 10:56:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:56:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:56:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 10:57:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 10:57:00 CST 2025
2025-03-21 10:57:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:57:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:57:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:57:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:57:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 10:57:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:57:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:57:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 10:58:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 10:58:00 CST 2025
2025-03-21 10:58:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:58:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:58:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:58:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:58:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 10:58:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:58:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:58:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 10:59:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 10:59:00 CST 2025
2025-03-21 10:59:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:59:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 10:59:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:59:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:59:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 10:59:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:59:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 10:59:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:00:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:00:00 CST 2025
2025-03-21 11:00:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:00:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:00:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:00:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:00:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:00:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:00:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:00:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:01:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:01:00 CST 2025
2025-03-21 11:01:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:01:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:01:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:01:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:01:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:01:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:01:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:01:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:02:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:02:00 CST 2025
2025-03-21 11:02:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:02:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:02:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:02:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:02:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:02:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:02:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:02:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:03:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:03:00 CST 2025
2025-03-21 11:03:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:03:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:03:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:03:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:03:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:03:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:03:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:03:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:04:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:04:00 CST 2025
2025-03-21 11:04:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:04:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:04:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:04:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:04:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:04:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:04:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:04:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:05:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:05:00 CST 2025
2025-03-21 11:05:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:05:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:05:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:05:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:05:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:05:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:05:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:05:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:06:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:06:00 CST 2025
2025-03-21 11:06:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:06:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:06:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:06:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:06:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:06:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:06:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:06:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:07:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:07:00 CST 2025
2025-03-21 11:07:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:07:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:07:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:07:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:07:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:07:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:07:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:07:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:08:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:08:00 CST 2025
2025-03-21 11:08:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:08:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:08:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:08:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:08:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:08:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:08:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:08:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:09:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:09:00 CST 2025
2025-03-21 11:09:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:09:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:09:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:09:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:09:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:09:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:09:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:09:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:10:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:10:00 CST 2025
2025-03-21 11:10:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:10:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:10:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:10:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:10:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:10:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:10:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:10:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:11:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:11:00 CST 2025
2025-03-21 11:11:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:11:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:11:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:11:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:11:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:11:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:11:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:11:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:12:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:12:00 CST 2025
2025-03-21 11:12:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:12:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:12:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:12:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:12:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:12:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:12:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:12:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:13:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:13:00 CST 2025
2025-03-21 11:13:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:13:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:13:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:13:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:13:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:13:25 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@40ed682f: (connection has passed maxLifetime)
2025-03-21 11:13:25 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@736a9051
2025-03-21 11:13:30 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@3420fb5e: (connection has passed maxLifetime)
2025-03-21 11:13:30 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@52786525
2025-03-21 11:13:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:13:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:13:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:13:43 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@21ae4c95: (connection has passed maxLifetime)
2025-03-21 11:13:43 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@9485f20
2025-03-21 11:13:59 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@65c00119: (connection has passed maxLifetime)
2025-03-21 11:13:59 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@4acc8a3
2025-03-21 11:14:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:14:00 CST 2025
2025-03-21 11:14:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:14:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:14:00 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@618e1878: (connection has passed maxLifetime)
2025-03-21 11:14:00 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@4591c298
2025-03-21 11:14:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:14:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:14:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:14:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:14:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:14:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:15:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:15:00 CST 2025
2025-03-21 11:15:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:15:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:15:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:15:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:15:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:15:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:15:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:15:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:16:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:16:00 CST 2025
2025-03-21 11:16:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:16:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:16:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:16:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:16:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:16:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:16:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:16:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:17:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:17:00 CST 2025
2025-03-21 11:17:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:17:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:17:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:17:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:17:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:17:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:17:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:17:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:18:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:18:00 CST 2025
2025-03-21 11:18:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:18:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:18:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:18:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:18:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:18:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:18:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:18:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:19:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:19:00 CST 2025
2025-03-21 11:19:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:19:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:19:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:19:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:19:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:19:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:19:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:19:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:20:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:20:00 CST 2025
2025-03-21 11:20:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:20:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:20:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:20:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:20:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:20:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:20:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:20:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:21:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:21:00 CST 2025
2025-03-21 11:21:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:21:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:21:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:21:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:21:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:21:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:21:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:21:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:22:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:22:00 CST 2025
2025-03-21 11:22:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:22:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:22:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:22:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:22:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:22:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:22:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:22:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:23:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:23:00 CST 2025
2025-03-21 11:23:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:23:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:23:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:23:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:23:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:23:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:23:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:23:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:24:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:24:00 CST 2025
2025-03-21 11:24:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:24:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:24:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:24:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:24:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:24:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:24:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:24:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:25:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:25:00 CST 2025
2025-03-21 11:25:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:25:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:25:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:25:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:25:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:25:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:25:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:25:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:25:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:25:46 [DEBUG][org.springframework.session.data.redis.RedisIndexedSessionRepository][onMessage][552]-> Publishing SessionDestroyedEvent for session 37fce615-0cbf-48ab-ba3f-ced697c2d25d
2025-03-21 11:26:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:26:00 CST 2025
2025-03-21 11:26:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:26:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:26:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:26:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:26:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:26:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:26:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:26:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:26:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:27:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:27:00 CST 2025
2025-03-21 11:27:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:27:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:27:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:27:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:27:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:27:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:27:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:27:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:28:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:28:00 CST 2025
2025-03-21 11:28:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:28:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:28:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:28:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:28:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:28:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:28:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:28:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:29:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:29:00 CST 2025
2025-03-21 11:29:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:29:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:29:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:29:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:29:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:29:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:29:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:29:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:30:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:30:00 CST 2025
2025-03-21 11:30:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:30:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:30:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:30:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:30:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:30:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:30:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:30:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:31:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:31:00 CST 2025
2025-03-21 11:31:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:31:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:31:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:31:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:31:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:31:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:31:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:31:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:32:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:32:00 CST 2025
2025-03-21 11:32:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:32:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:32:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:32:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:32:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:32:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:32:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:32:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:33:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:33:00 CST 2025
2025-03-21 11:33:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:33:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:33:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:33:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:33:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:33:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:33:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:33:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:34:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:34:00 CST 2025
2025-03-21 11:34:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:34:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:34:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:34:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:34:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:34:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:34:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:34:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:35:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:35:00 CST 2025
2025-03-21 11:35:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:35:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:35:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:35:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:35:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:35:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:35:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:35:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:36:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:36:00 CST 2025
2025-03-21 11:36:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:36:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:36:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:36:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:36:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:36:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:36:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:36:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:37:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:37:00 CST 2025
2025-03-21 11:37:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:37:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:37:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:37:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:37:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:37:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:37:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:37:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:38:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:38:00 CST 2025
2025-03-21 11:38:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:38:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:38:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:38:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:38:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:38:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:38:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:38:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:39:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:39:00 CST 2025
2025-03-21 11:39:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:39:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:39:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:39:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:39:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:39:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:39:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:39:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:40:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:40:00 CST 2025
2025-03-21 11:40:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:40:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:40:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:40:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:40:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:40:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:40:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:40:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:41:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:41:00 CST 2025
2025-03-21 11:41:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:41:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:41:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:41:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:41:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:41:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:41:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:41:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:42:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:42:00 CST 2025
2025-03-21 11:42:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:42:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:42:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:42:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:42:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:42:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:42:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:42:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:42:53 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@736a9051: (connection has passed maxLifetime)
2025-03-21 11:42:53 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@49e1633f
2025-03-21 11:43:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:43:00 CST 2025
2025-03-21 11:43:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:43:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:43:06 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@9485f20: (connection has passed maxLifetime)
2025-03-21 11:43:06 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@4710e502
2025-03-21 11:43:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:43:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:43:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:43:19 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@52786525: (connection has passed maxLifetime)
2025-03-21 11:43:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@2e89b653
2025-03-21 11:43:36 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@4acc8a3: (connection has passed maxLifetime)
2025-03-21 11:43:36 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@1ee5c2f
2025-03-21 11:43:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:43:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:43:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:43:54 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@4591c298: (connection has passed maxLifetime)
2025-03-21 11:43:54 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@12e03e24
2025-03-21 11:44:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:44:00 CST 2025
2025-03-21 11:44:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:44:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:44:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:44:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:44:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:44:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:44:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:44:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:45:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:45:00 CST 2025
2025-03-21 11:45:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:45:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:45:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:45:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:45:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:45:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:45:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:45:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:46:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:46:00 CST 2025
2025-03-21 11:46:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:46:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:46:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:46:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:46:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:46:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:46:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:46:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:47:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:47:00 CST 2025
2025-03-21 11:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:47:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:47:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:47:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:47:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:47:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:47:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:48:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:48:00 CST 2025
2025-03-21 11:48:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:48:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:48:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:48:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:48:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:48:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:48:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:48:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:49:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:49:00 CST 2025
2025-03-21 11:49:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:49:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:49:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:49:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:49:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:49:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:49:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:49:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:50:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:50:00 CST 2025
2025-03-21 11:50:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:50:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:50:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:50:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:50:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:50:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:50:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:50:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:51:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:51:00 CST 2025
2025-03-21 11:51:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:51:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:51:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:51:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:51:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:51:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:51:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:51:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:52:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:52:00 CST 2025
2025-03-21 11:52:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:52:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:52:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:52:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:52:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:52:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:52:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:52:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:53:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:53:00 CST 2025
2025-03-21 11:53:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:53:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:53:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:53:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:53:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:53:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:53:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:53:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:54:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:54:00 CST 2025
2025-03-21 11:54:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:54:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:54:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:54:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:54:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:54:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:54:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:54:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:55:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:55:00 CST 2025
2025-03-21 11:55:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:55:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:55:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:55:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:55:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:55:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:55:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:55:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:56:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:56:00 CST 2025
2025-03-21 11:56:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:56:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:56:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:56:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:56:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:56:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:56:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:56:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:57:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:57:00 CST 2025
2025-03-21 11:57:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:57:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:57:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:57:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:57:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:57:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:57:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:57:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:58:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:58:00 CST 2025
2025-03-21 11:58:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:58:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:58:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:58:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:58:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:58:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:58:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:58:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:59:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 11:59:00 CST 2025
2025-03-21 11:59:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:59:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 11:59:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:59:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:59:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 11:59:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:59:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 11:59:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:00:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:00:00 CST 2025
2025-03-21 12:00:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:00:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:00:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:00:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:00:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:00:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:00:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:00:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:01:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:01:00 CST 2025
2025-03-21 12:01:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:01:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:01:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:01:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:01:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:01:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:01:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:01:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:02:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:02:00 CST 2025
2025-03-21 12:02:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:02:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:02:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:02:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:02:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:02:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:02:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:02:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:03:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:03:00 CST 2025
2025-03-21 12:03:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:03:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:03:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:03:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:03:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:03:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:03:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:03:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:04:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:04:00 CST 2025
2025-03-21 12:04:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:04:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:04:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:04:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:04:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:04:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:04:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:04:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:05:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:05:00 CST 2025
2025-03-21 12:05:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:05:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:05:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:05:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:05:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:05:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:05:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:05:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:06:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:06:00 CST 2025
2025-03-21 12:06:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:06:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:06:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:06:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:06:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:06:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:06:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:06:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:07:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:07:00 CST 2025
2025-03-21 12:07:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:07:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:07:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:07:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:07:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:07:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:07:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:07:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:08:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:08:00 CST 2025
2025-03-21 12:08:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:08:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:08:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:08:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:08:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:08:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:08:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:08:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:09:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:09:00 CST 2025
2025-03-21 12:09:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:09:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:09:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:09:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:09:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:09:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:09:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:09:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:10:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:10:00 CST 2025
2025-03-21 12:10:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:10:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:10:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:10:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:10:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:10:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:10:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:10:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:11:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:11:00 CST 2025
2025-03-21 12:11:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:11:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:11:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:11:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:11:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:11:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:11:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:11:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:12:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:12:00 CST 2025
2025-03-21 12:12:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:12:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:12:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:12:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:12:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:12:30 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@49e1633f: (connection has passed maxLifetime)
2025-03-21 12:12:30 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@454106b5
2025-03-21 12:12:37 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2e89b653: (connection has passed maxLifetime)
2025-03-21 12:12:37 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@6c4998be
2025-03-21 12:12:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:12:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:12:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:12:49 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@4710e502: (connection has passed maxLifetime)
2025-03-21 12:12:50 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@a90d7f3
2025-03-21 12:13:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:13:00 CST 2025
2025-03-21 12:13:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:13:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:13:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:13:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:13:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:13:13 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@12e03e24: (connection has passed maxLifetime)
2025-03-21 12:13:13 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@65b46ed6
2025-03-21 12:13:21 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1ee5c2f: (connection has passed maxLifetime)
2025-03-21 12:13:21 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@73ed1008
2025-03-21 12:13:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:13:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:13:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:14:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:14:00 CST 2025
2025-03-21 12:14:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:14:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:14:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:14:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:14:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:14:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:14:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:14:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:15:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:15:00 CST 2025
2025-03-21 12:15:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:15:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:15:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:15:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:15:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:15:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:15:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:15:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:16:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:16:00 CST 2025
2025-03-21 12:16:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:16:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:16:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:16:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:16:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:16:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:16:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:16:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:17:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:17:00 CST 2025
2025-03-21 12:17:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:17:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:17:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:17:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:17:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:17:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:17:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:17:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:18:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:18:00 CST 2025
2025-03-21 12:18:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:18:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:18:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:18:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:18:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:18:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:18:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:18:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:19:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:19:00 CST 2025
2025-03-21 12:19:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:19:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:19:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:19:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:19:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:19:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:19:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:19:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:20:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:20:00 CST 2025
2025-03-21 12:20:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:20:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:20:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:20:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:20:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:20:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:20:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:20:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:21:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:21:00 CST 2025
2025-03-21 12:21:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:21:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:21:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:21:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:21:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:21:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:21:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:21:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:22:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:22:00 CST 2025
2025-03-21 12:22:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:22:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:22:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:22:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:22:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:22:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:22:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:22:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:23:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:23:00 CST 2025
2025-03-21 12:23:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:23:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:23:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:23:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:23:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:23:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:23:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:23:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:24:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:24:00 CST 2025
2025-03-21 12:24:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:24:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:24:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:24:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:24:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:24:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:24:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:24:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:25:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:25:00 CST 2025
2025-03-21 12:25:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:25:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:25:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:25:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:25:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:25:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:25:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:25:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:26:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:26:00 CST 2025
2025-03-21 12:26:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:26:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:26:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:26:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:26:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:26:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:26:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:26:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:27:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:27:00 CST 2025
2025-03-21 12:27:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:27:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:27:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:27:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:27:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:27:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:27:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:27:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:28:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:28:00 CST 2025
2025-03-21 12:28:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:28:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:28:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:28:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:28:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:28:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:28:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:28:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:29:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:29:00 CST 2025
2025-03-21 12:29:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:29:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:29:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:29:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:29:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:29:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:29:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:29:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:30:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:30:00 CST 2025
2025-03-21 12:30:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:30:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:30:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:30:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:30:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:30:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:30:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:30:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:31:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:31:00 CST 2025
2025-03-21 12:31:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:31:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:31:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:31:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:31:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:31:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:31:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:31:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:32:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:32:00 CST 2025
2025-03-21 12:32:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:32:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:32:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:32:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:32:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:32:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:32:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:32:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:33:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:33:00 CST 2025
2025-03-21 12:33:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:33:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:33:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:33:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:33:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:33:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:33:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:33:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:34:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:34:00 CST 2025
2025-03-21 12:34:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:34:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:34:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:34:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:34:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:34:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:34:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:34:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:35:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:35:00 CST 2025
2025-03-21 12:35:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:35:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:35:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:35:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:35:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:35:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:35:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:35:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:36:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:36:00 CST 2025
2025-03-21 12:36:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:36:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:36:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:36:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:36:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:36:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:36:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:36:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:37:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:37:00 CST 2025
2025-03-21 12:37:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:37:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:37:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:37:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:37:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:37:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:37:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:37:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:38:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:38:00 CST 2025
2025-03-21 12:38:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:38:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:38:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:38:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:38:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:38:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:38:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:38:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:39:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:39:00 CST 2025
2025-03-21 12:39:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:39:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:39:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:39:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:39:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:39:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:39:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:39:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:40:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:40:00 CST 2025
2025-03-21 12:40:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:40:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:40:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:40:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:40:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:40:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:40:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:40:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:41:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:41:00 CST 2025
2025-03-21 12:41:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:41:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:41:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:41:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:41:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:41:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:41:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:41:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:41:55 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6c4998be: (connection has passed maxLifetime)
2025-03-21 12:41:56 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@4446e528
2025-03-21 12:41:56 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@454106b5: (connection has passed maxLifetime)
2025-03-21 12:41:56 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@57bef13
2025-03-21 12:42:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:42:00 CST 2025
2025-03-21 12:42:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:42:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:42:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:42:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:42:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:42:20 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@a90d7f3: (connection has passed maxLifetime)
2025-03-21 12:42:20 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@722ed9f9
2025-03-21 12:42:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:42:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:42:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:42:58 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@73ed1008: (connection has passed maxLifetime)
2025-03-21 12:42:58 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@915dcb
2025-03-21 12:42:59 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@65b46ed6: (connection has passed maxLifetime)
2025-03-21 12:42:59 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@41ac57f0
2025-03-21 12:43:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:43:00 CST 2025
2025-03-21 12:43:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:43:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:43:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:43:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:43:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:43:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:43:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:43:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:44:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:44:00 CST 2025
2025-03-21 12:44:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:44:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:44:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:44:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:44:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:44:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:44:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:44:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:45:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:45:00 CST 2025
2025-03-21 12:45:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:45:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:45:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:45:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:45:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:45:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:45:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:45:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:46:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:46:00 CST 2025
2025-03-21 12:46:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:46:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:46:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:46:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:46:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:46:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:46:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:46:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:47:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:47:00 CST 2025
2025-03-21 12:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:47:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:47:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:47:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:47:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:47:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:47:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:48:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:48:00 CST 2025
2025-03-21 12:48:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:48:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:48:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:48:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:48:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:48:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:48:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:48:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:49:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:49:00 CST 2025
2025-03-21 12:49:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:49:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:49:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:49:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:49:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:49:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:49:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:49:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:50:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:50:00 CST 2025
2025-03-21 12:50:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:50:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:50:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:50:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:50:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:50:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:50:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:50:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:51:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:51:00 CST 2025
2025-03-21 12:51:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:51:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:51:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:51:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:51:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:51:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:51:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:51:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:52:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:52:00 CST 2025
2025-03-21 12:52:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:52:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:52:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:52:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:52:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:52:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:52:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:52:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:53:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:53:00 CST 2025
2025-03-21 12:53:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:53:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:53:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:53:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:53:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:53:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:53:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:53:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:54:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:54:00 CST 2025
2025-03-21 12:54:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:54:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:54:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:54:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:54:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:54:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:54:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:54:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:55:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:55:00 CST 2025
2025-03-21 12:55:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:55:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:55:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:55:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:55:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:55:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:55:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:55:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:56:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:56:00 CST 2025
2025-03-21 12:56:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:56:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:56:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:56:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:56:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:56:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:56:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:56:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:57:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:57:00 CST 2025
2025-03-21 12:57:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:57:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:57:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:57:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:57:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:57:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:57:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:57:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:58:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:58:00 CST 2025
2025-03-21 12:58:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:58:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:58:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:58:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:58:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:58:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:58:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:58:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:59:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 12:59:00 CST 2025
2025-03-21 12:59:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:59:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 12:59:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:59:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:59:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 12:59:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:59:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 12:59:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:00:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:00:00 CST 2025
2025-03-21 13:00:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:00:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:00:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:00:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:00:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:00:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:00:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:00:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:01:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:01:00 CST 2025
2025-03-21 13:01:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:01:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:01:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:01:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:01:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:01:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:01:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:01:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:02:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:02:00 CST 2025
2025-03-21 13:02:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:02:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:02:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:02:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:02:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:02:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:02:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:02:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:03:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:03:00 CST 2025
2025-03-21 13:03:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:03:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:03:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:03:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:03:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:03:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:03:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:03:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:04:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:04:00 CST 2025
2025-03-21 13:04:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:04:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:04:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:04:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:04:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:04:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:04:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:04:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:05:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:05:00 CST 2025
2025-03-21 13:05:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:05:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:05:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:05:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:05:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:05:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:05:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:05:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:06:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:06:00 CST 2025
2025-03-21 13:06:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:06:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:06:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:06:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:06:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:06:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:06:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:06:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:07:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:07:00 CST 2025
2025-03-21 13:07:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:07:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:07:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:07:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:07:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:07:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:07:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:07:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:08:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:08:00 CST 2025
2025-03-21 13:08:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:08:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:08:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:08:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:08:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:08:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:08:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:08:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:09:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:09:00 CST 2025
2025-03-21 13:09:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:09:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:09:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:09:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:09:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:09:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:09:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:09:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:10:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:10:00 CST 2025
2025-03-21 13:10:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:10:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:10:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:10:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:10:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:10:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:10:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:10:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:11:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:11:00 CST 2025
2025-03-21 13:11:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:11:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:11:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:11:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:11:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:11:20 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@4446e528: (connection has passed maxLifetime)
2025-03-21 13:11:20 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@324dc5d9
2025-03-21 13:11:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:11:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:11:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:11:39 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@57bef13: (connection has passed maxLifetime)
2025-03-21 13:11:39 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@20eae073
2025-03-21 13:12:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:12:00 CST 2025
2025-03-21 13:12:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:12:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:12:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:12:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:12:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:12:20 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@722ed9f9: (connection has passed maxLifetime)
2025-03-21 13:12:20 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@6358c10
2025-03-21 13:12:32 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@915dcb: (connection has passed maxLifetime)
2025-03-21 13:12:32 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@7c0d3bd6
2025-03-21 13:12:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:12:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:12:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:12:38 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@41ac57f0: (connection has passed maxLifetime)
2025-03-21 13:12:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@29bde563
2025-03-21 13:13:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:13:00 CST 2025
2025-03-21 13:13:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:13:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:13:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:13:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:13:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:13:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:13:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:13:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:14:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:14:00 CST 2025
2025-03-21 13:14:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:14:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:14:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:14:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:14:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:14:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:14:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:14:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:15:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:15:00 CST 2025
2025-03-21 13:15:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:15:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:15:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:15:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:15:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:15:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:15:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:15:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:16:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:16:00 CST 2025
2025-03-21 13:16:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:16:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:16:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:16:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:16:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:16:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:16:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:16:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:17:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:17:00 CST 2025
2025-03-21 13:17:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:17:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:17:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:17:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:17:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:17:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:17:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:17:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:18:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:18:00 CST 2025
2025-03-21 13:18:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:18:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:18:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:18:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:18:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:18:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:18:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:18:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:19:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:19:00 CST 2025
2025-03-21 13:19:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:19:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:19:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:19:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:19:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:19:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:19:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:19:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:20:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:20:00 CST 2025
2025-03-21 13:20:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:20:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:20:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:20:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:20:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:20:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:20:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:20:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:21:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:21:00 CST 2025
2025-03-21 13:21:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:21:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:21:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:21:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:21:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:21:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:21:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:21:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:22:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:22:00 CST 2025
2025-03-21 13:22:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:22:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:22:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:22:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:22:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:22:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:22:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:22:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:23:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:23:00 CST 2025
2025-03-21 13:23:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:23:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:23:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:23:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:23:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:23:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:23:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:23:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:24:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:24:00 CST 2025
2025-03-21 13:24:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:24:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:24:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:24:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:24:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:24:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:24:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:24:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:25:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:25:00 CST 2025
2025-03-21 13:25:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:25:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:25:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:25:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:25:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:25:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:25:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:25:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:26:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:26:00 CST 2025
2025-03-21 13:26:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:26:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:26:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:26:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:26:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:26:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:26:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:26:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:27:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:27:00 CST 2025
2025-03-21 13:27:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:27:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:27:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:27:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:27:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:27:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:27:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:27:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:28:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:28:00 CST 2025
2025-03-21 13:28:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:28:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:28:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:28:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:28:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:28:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:28:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:28:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:29:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:29:00 CST 2025
2025-03-21 13:29:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:29:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:29:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:29:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:29:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:29:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:29:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:29:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:30:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:30:00 CST 2025
2025-03-21 13:30:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:30:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:30:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:30:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:30:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:30:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:30:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:30:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:31:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:31:00 CST 2025
2025-03-21 13:31:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:31:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:31:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:31:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:31:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:31:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:31:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:31:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:32:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:32:00 CST 2025
2025-03-21 13:32:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:32:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:32:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:32:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:32:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:32:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:32:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:32:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:33:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:33:00 CST 2025
2025-03-21 13:33:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:33:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:33:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:33:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:33:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:33:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:33:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:33:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:34:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:34:00 CST 2025
2025-03-21 13:34:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:34:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:34:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:34:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:34:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:34:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:34:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:34:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:35:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:35:00 CST 2025
2025-03-21 13:35:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:35:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:35:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:35:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:35:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:35:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:35:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:35:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:36:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:36:00 CST 2025
2025-03-21 13:36:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:36:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:36:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:36:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:36:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:36:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:36:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:36:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:37:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:37:00 CST 2025
2025-03-21 13:37:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:37:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:37:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:37:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:37:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:37:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:37:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:37:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:38:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:38:00 CST 2025
2025-03-21 13:38:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:38:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:38:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:38:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:38:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:38:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:38:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:38:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:39:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:39:00 CST 2025
2025-03-21 13:39:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:39:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:39:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:39:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:39:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:39:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:39:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:39:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:40:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:40:00 CST 2025
2025-03-21 13:40:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:40:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:40:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:40:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:40:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:40:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:40:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:40:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:40:57 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@324dc5d9: (connection has passed maxLifetime)
2025-03-21 13:40:57 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@71575567
2025-03-21 13:41:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:41:00 CST 2025
2025-03-21 13:41:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:41:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:41:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:41:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:41:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:41:17 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@20eae073: (connection has passed maxLifetime)
2025-03-21 13:41:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@72d535b1
2025-03-21 13:41:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:41:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:41:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:41:48 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@7c0d3bd6: (connection has passed maxLifetime)
2025-03-21 13:41:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@36f2260
2025-03-21 13:42:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:42:00 CST 2025
2025-03-21 13:42:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:42:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:42:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:42:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:42:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:42:08 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6358c10: (connection has passed maxLifetime)
2025-03-21 13:42:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@5f5ba9f
2025-03-21 13:42:18 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@29bde563: (connection has passed maxLifetime)
2025-03-21 13:42:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@1b167cec
2025-03-21 13:42:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:42:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:42:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:43:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:43:00 CST 2025
2025-03-21 13:43:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:43:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:43:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:43:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:43:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:43:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:43:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:43:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:44:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:44:00 CST 2025
2025-03-21 13:44:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:44:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:44:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:44:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:44:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:44:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:44:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:44:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:45:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:45:00 CST 2025
2025-03-21 13:45:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:45:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:45:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:45:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:45:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:45:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:45:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:45:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:46:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:46:00 CST 2025
2025-03-21 13:46:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:46:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:46:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:46:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:46:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:46:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:46:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:46:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:47:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:47:00 CST 2025
2025-03-21 13:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:47:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:47:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:47:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:47:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:47:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:47:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:48:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:48:00 CST 2025
2025-03-21 13:48:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:48:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:48:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:48:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:48:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:48:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:48:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:48:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:49:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:49:00 CST 2025
2025-03-21 13:49:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:49:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:49:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:49:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:49:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:49:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:49:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:49:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:50:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:50:00 CST 2025
2025-03-21 13:50:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:50:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:50:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:50:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:50:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:50:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:50:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:50:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:51:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:51:00 CST 2025
2025-03-21 13:51:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:51:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:51:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:51:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:51:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:51:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:51:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:51:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:52:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:52:00 CST 2025
2025-03-21 13:52:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:52:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:52:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:52:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:52:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:52:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:52:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:52:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:53:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:53:00 CST 2025
2025-03-21 13:53:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:53:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:53:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:53:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:53:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:53:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:53:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:53:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:54:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:54:00 CST 2025
2025-03-21 13:54:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:54:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:54:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:54:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:54:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:54:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:54:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:54:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:55:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:55:00 CST 2025
2025-03-21 13:55:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:55:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:55:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:55:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:55:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:55:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:55:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:55:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:56:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:56:00 CST 2025
2025-03-21 13:56:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:56:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:56:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:56:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:56:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:56:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:56:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:56:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:57:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:57:00 CST 2025
2025-03-21 13:57:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:57:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:57:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:57:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:57:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:57:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:57:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:57:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:58:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:58:00 CST 2025
2025-03-21 13:58:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:58:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:58:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:58:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:58:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:58:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:58:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:58:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:59:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 13:59:00 CST 2025
2025-03-21 13:59:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:59:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 13:59:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:59:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:59:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 13:59:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:59:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 13:59:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:00:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 14:00:00 CST 2025
2025-03-21 14:00:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:00:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:00:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:00:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:00:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:00:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:00:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:00:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:01:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 14:01:00 CST 2025
2025-03-21 14:01:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:01:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:01:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:01:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:01:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:01:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:01:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:01:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:02:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 14:02:00 CST 2025
2025-03-21 14:02:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:02:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:02:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:02:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:02:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:02:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:02:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:02:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:03:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 14:03:00 CST 2025
2025-03-21 14:03:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:03:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:03:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:03:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:03:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:03:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:03:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:03:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:04:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 14:04:00 CST 2025
2025-03-21 14:04:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:04:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:04:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:04:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:04:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:04:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:04:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:04:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:05:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 14:05:00 CST 2025
2025-03-21 14:05:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:05:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:05:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:05:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:05:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:05:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:05:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:05:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:06:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 14:06:00 CST 2025
2025-03-21 14:06:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:06:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:06:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:06:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:06:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:06:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:06:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:06:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:07:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 14:07:00 CST 2025
2025-03-21 14:07:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:07:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:07:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:07:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:07:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:07:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:07:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:07:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:08:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 14:08:00 CST 2025
2025-03-21 14:08:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:08:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:08:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:08:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:08:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:08:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:08:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:08:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:09:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 14:09:00 CST 2025
2025-03-21 14:09:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:09:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:09:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:09:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:09:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:09:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:09:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:09:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:10:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 14:10:00 CST 2025
2025-03-21 14:10:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:10:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:10:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:10:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:10:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:10:22 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@71575567: (connection has passed maxLifetime)
2025-03-21 14:10:22 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@1f7cf9bb
2025-03-21 14:10:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:10:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:10:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:11:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 14:11:00 CST 2025
2025-03-21 14:11:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:11:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:11:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:11:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:11:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:11:16 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@72d535b1: (connection has passed maxLifetime)
2025-03-21 14:11:16 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@2efde75e
2025-03-21 14:11:34 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@36f2260: (connection has passed maxLifetime)
2025-03-21 14:11:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@7e24550d
2025-03-21 14:11:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:11:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:11:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:11:43 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@5f5ba9f: (connection has passed maxLifetime)
2025-03-21 14:11:43 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@679824a6
2025-03-21 14:11:51 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1b167cec: (connection has passed maxLifetime)
2025-03-21 14:11:51 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@3d76527f
2025-03-21 14:12:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 14:12:00 CST 2025
2025-03-21 14:12:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:12:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:12:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:12:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:12:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:12:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:12:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:12:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:13:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 14:13:00 CST 2025
2025-03-21 14:13:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:13:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:13:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:13:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:13:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:13:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:13:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:13:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:14:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 14:14:00 CST 2025
2025-03-21 14:14:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:14:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:14:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:14:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:14:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:14:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:14:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:14:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:15:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 14:15:00 CST 2025
2025-03-21 14:15:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:15:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:15:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:15:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:15:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:15:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:15:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:15:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:16:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 14:16:00 CST 2025
2025-03-21 14:16:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:16:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:16:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:16:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:16:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:16:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:16:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:16:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:17:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 14:17:00 CST 2025
2025-03-21 14:17:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:17:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:17:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:17:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:17:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:17:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:17:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:17:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:18:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 14:18:00 CST 2025
2025-03-21 14:18:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:18:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:18:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:18:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:18:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:18:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:18:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:18:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:19:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 14:19:00 CST 2025
2025-03-21 14:19:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:19:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:19:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:19:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:19:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:19:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:19:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:19:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:20:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 14:20:00 CST 2025
2025-03-21 14:20:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:20:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:20:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:20:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:20:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:20:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:20:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:20:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:21:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 14:21:00 CST 2025
2025-03-21 14:21:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:21:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:21:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:21:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:21:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:21:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:21:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:21:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:22:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 14:22:00 CST 2025
2025-03-21 14:22:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:22:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:22:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:22:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:22:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:22:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:22:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:22:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:23:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 14:23:00 CST 2025
2025-03-21 14:23:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:23:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:23:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:23:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:23:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:23:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:23:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:23:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:24:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 14:24:00 CST 2025
2025-03-21 14:24:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:24:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:24:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:24:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:24:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:24:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:24:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:24:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:25:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 14:25:00 CST 2025
2025-03-21 14:25:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:25:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:25:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:25:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:25:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:25:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:25:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:25:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:26:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 14:26:00 CST 2025
2025-03-21 14:26:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:26:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:26:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:26:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:26:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:26:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:26:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:26:38 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 14:27:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 14:27:00 CST 2025
2025-03-21 14:27:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:27:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 14:27:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:27:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 14:27:08 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:10:30 [INFO][com.easyjob.EasyjobAdminApplication][logStarting][55]-> Starting EasyjobAdminApplication using Java 1.8.0_351 on DESKTOP-KCPGUDB with PID 11016 (C:\easyjob\easyjob-java\easyjob-admin\target\classes started by HM in C:\easyjob\easyjob-java)
2025-03-21 15:10:30 [DEBUG][com.easyjob.EasyjobAdminApplication][logStarting][56]-> Running with Spring Boot v2.7.13, Spring v5.3.28
2025-03-21 15:10:30 [INFO][com.easyjob.EasyjobAdminApplication][logStartupProfileInfo][631]-> No active profile set, falling back to 1 default profile: "default"
2025-03-21 15:10:30 [DEBUG][org.springframework.boot.SpringApplication][load][664]-> Loading source class com.easyjob.EasyjobAdminApplication
2025-03-21 15:10:30 [DEBUG][org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext][prepareRefresh][629]-> Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ea6147e
2025-03-21 15:10:30 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2025-03-21 15:10:30 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
2025-03-21 15:10:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\InitRun.class]
2025-03-21 15:10:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\aspect\OperationAspect.class]
2025-03-21 15:10:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\controller\AGlobalExceptionHandlerController.class]
2025-03-21 15:10:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\controller\AppCarouselController.class]
2025-03-21 15:10:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\controller\AppFeedbackController.class]
2025-03-21 15:10:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\controller\AppUpdateController.class]
2025-03-21 15:10:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\controller\AppUserInfoController.class]
2025-03-21 15:10:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\controller\CategoryController.class]
2025-03-21 15:10:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\controller\ExamQuestionController.class]
2025-03-21 15:10:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\controller\FileController.class]
2025-03-21 15:10:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\controller\IndexController.class]
2025-03-21 15:10:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\controller\LoginController.class]
2025-03-21 15:10:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\controller\QuestionInfoController.class]
2025-03-21 15:10:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\controller\ShareInfoController.class]
2025-03-21 15:10:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\controller\SysAccountController.class]
2025-03-21 15:10:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\controller\SysMenuController.class]
2025-03-21 15:10:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\controller\SysRoleController.class]
2025-03-21 15:10:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\component\RedisConfig.class]
2025-03-21 15:10:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\component\RedisUtils.class]
2025-03-21 15:10:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\entity\config\AppConfig.class]
2025-03-21 15:10:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\AppCarouselServiceImpl.class]
2025-03-21 15:10:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\AppDeviceServiceImpl.class]
2025-03-21 15:10:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\AppExamQuestionServiceImpl.class]
2025-03-21 15:10:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\AppExamServiceImpl.class]
2025-03-21 15:10:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\AppFeedbackServiceImpl.class]
2025-03-21 15:10:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\AppUpdateServiceImpl.class]
2025-03-21 15:10:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\AppUserCollectServiceImpl.class]
2025-03-21 15:10:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\AppUserInfoServiceImpl.class]
2025-03-21 15:10:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\CategoryServiceImpl.class]
2025-03-21 15:10:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\ExamQuestionItemServiceImpl.class]
2025-03-21 15:10:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\ExamQuestionServiceImpl.class]
2025-03-21 15:10:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\QuestionInfoServiceImpl.class]
2025-03-21 15:10:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\ShareInfoServiceImpl.class]
2025-03-21 15:10:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\StatisticsDataServiceImpl.class]
2025-03-21 15:10:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\SysAccountServiceImpl.class]
2025-03-21 15:10:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\SysMenuServiceImpl.class]
2025-03-21 15:10:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\SysRole2MenuServiceImpl.class]
2025-03-21 15:10:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\SysRoleServiceImpl.class]
2025-03-21 15:10:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\utils\JWTUtil.class]
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\ACommonMapper.class]
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\AppCarouselMapper.class]
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\AppDeviceMapper.class]
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\AppExamMapper.class]
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\AppExamQuestionMapper.class]
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\AppFeedbackMapper.class]
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\AppUpdateMapper.class]
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\AppUserCollectMapper.class]
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\AppUserInfoMapper.class]
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\BaseMapper.class]
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\CategoryMapper.class]
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\ExamQuestionItemMapper.class]
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\ExamQuestionMapper.class]
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\QuestionInfoMapper.class]
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\ShareInfoMapper.class]
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\SysAccountMapper.class]
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\SysMenuMapper.class]
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\SysRole2MenuMapper.class]
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\SysRoleMapper.class]
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'ACommonMapper' and 'com.easyjob.mappers.ACommonMapper' mapperInterface
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'ACommonMapper'.
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'appCarouselMapper' and 'com.easyjob.mappers.AppCarouselMapper' mapperInterface
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'appCarouselMapper'.
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'appDeviceMapper' and 'com.easyjob.mappers.AppDeviceMapper' mapperInterface
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'appDeviceMapper'.
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'appExamMapper' and 'com.easyjob.mappers.AppExamMapper' mapperInterface
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'appExamMapper'.
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'appExamQuestionMapper' and 'com.easyjob.mappers.AppExamQuestionMapper' mapperInterface
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'appExamQuestionMapper'.
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'appFeedbackMapper' and 'com.easyjob.mappers.AppFeedbackMapper' mapperInterface
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'appFeedbackMapper'.
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'appUpdateMapper' and 'com.easyjob.mappers.AppUpdateMapper' mapperInterface
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'appUpdateMapper'.
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'appUserCollectMapper' and 'com.easyjob.mappers.AppUserCollectMapper' mapperInterface
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'appUserCollectMapper'.
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'appUserInfoMapper' and 'com.easyjob.mappers.AppUserInfoMapper' mapperInterface
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'appUserInfoMapper'.
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'baseMapper' and 'com.easyjob.mappers.BaseMapper' mapperInterface
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'baseMapper'.
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'categoryMapper' and 'com.easyjob.mappers.CategoryMapper' mapperInterface
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'categoryMapper'.
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'examQuestionItemMapper' and 'com.easyjob.mappers.ExamQuestionItemMapper' mapperInterface
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'examQuestionItemMapper'.
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'examQuestionMapper' and 'com.easyjob.mappers.ExamQuestionMapper' mapperInterface
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'examQuestionMapper'.
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'questionInfoMapper' and 'com.easyjob.mappers.QuestionInfoMapper' mapperInterface
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'questionInfoMapper'.
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'shareInfoMapper' and 'com.easyjob.mappers.ShareInfoMapper' mapperInterface
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'shareInfoMapper'.
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'sysAccountMapper' and 'com.easyjob.mappers.SysAccountMapper' mapperInterface
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'sysAccountMapper'.
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'sysMenuMapper' and 'com.easyjob.mappers.SysMenuMapper' mapperInterface
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'sysMenuMapper'.
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'sysRole2MenuMapper' and 'com.easyjob.mappers.SysRole2MenuMapper' mapperInterface
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'sysRole2MenuMapper'.
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'sysRoleMapper' and 'com.easyjob.mappers.SysRoleMapper' mapperInterface
2025-03-21 15:10:30 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'sysRoleMapper'.
2025-03-21 15:10:30 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][multipleStoresDetected][262]-> Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-21 15:10:30 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][132]-> Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-21 15:10:30 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
2025-03-21 15:10:30 [DEBUG][org.springframework.boot.autoconfigure.AutoConfigurationPackages][get][196]-> @EnableAutoConfiguration was declared on a class in the package 'com.easyjob'. Automatic @Repository and @Entity scanning is enabled.
2025-03-21 15:10:30 [DEBUG][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][145]-> Scanning for Redis repositories in packages com.easyjob.
2025-03-21 15:10:30 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][201]-> Finished Spring Data repository scanning in 36 ms. Found 0 Redis repository interfaces.
2025-03-21 15:10:30 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'
2025-03-21 15:10:30 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinderFactory'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.scheduling.annotation.SchedulingConfiguration'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.scheduling.annotation.ProxyAsyncConfiguration'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'persistenceExceptionTranslationPostProcessor'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'persistenceExceptionTranslationPostProcessor' via factory method to bean named 'environment'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'projectingArgumentResolverBeanPostProcessor'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
2025-03-21 15:10:31 [DEBUG][org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory][getAdvice][258]-> Found AspectJ method: public void com.easyjob.aspect.OperationAspect.interceptorDo(org.aspectj.lang.JoinPoint)
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'transactionAttributeSource'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'transactionInterceptor'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'
2025-03-21 15:10:31 [DEBUG][org.springframework.ui.context.support.UiApplicationContextUtils][initThemeSource][85]-> Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@2227a6c1]
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'tomcatServletWebServerFactory'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'websocketServletWebServerCustomizer'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'localeCharsetMappingsCustomizer'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'errorPageCustomizer'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'dispatcherServletRegistration'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'dispatcherServlet'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'multipartConfigElement'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration'
2025-03-21 15:10:31 [DEBUG][org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory][getArchiveFileDocumentRoot][81]-> Code archive: C:\repo\org\springframework\boot\spring-boot\2.7.13\spring-boot-2.7.13.jar
2025-03-21 15:10:31 [DEBUG][org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory][getExplodedWarFileDocumentRoot][125]-> Code archive: C:\repo\org\springframework\boot\spring-boot\2.7.13\spring-boot-2.7.13.jar
2025-03-21 15:10:31 [DEBUG][org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory][logNoDocumentRoots][149]-> None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2025-03-21 15:10:31 [INFO][org.springframework.boot.web.embedded.tomcat.TomcatWebServer][initialize][108]-> Tomcat initialized with port(s): 9091 (http)
2025-03-21 15:10:31 [INFO][org.apache.coyote.http11.Http11NioProtocol][log][173]-> Initializing ProtocolHandler ["http-nio-9091"]
2025-03-21 15:10:31 [INFO][org.apache.catalina.core.StandardService][log][173]-> Starting service [Tomcat]
2025-03-21 15:10:31 [INFO][org.apache.catalina.core.StandardEngine][log][173]-> Starting Servlet engine: [Apache Tomcat/9.0.76]
2025-03-21 15:10:31 [INFO][org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/api]][log][173]-> Initializing Spring embedded WebApplicationContext
2025-03-21 15:10:31 [DEBUG][org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext][prepareWebApplicationContext][286]-> Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2025-03-21 15:10:31 [INFO][org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext][prepareWebApplicationContext][292]-> Root WebApplicationContext: initialization completed in 1633 ms
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sessionRepositoryFilterRegistration'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.session.SessionRepositoryFilterConfiguration'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.session-org.springframework.boot.autoconfigure.session.SessionProperties'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'sessionRepositoryFilterRegistration' via factory method to bean named 'spring.session-org.springframework.boot.autoconfigure.session.SessionProperties'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'sessionRepositoryFilterRegistration' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@147e2ae7'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'requestContextFilter'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'formContentFilter'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'characterEncodingFilter'
2025-03-21 15:10:31 [DEBUG][org.springframework.boot.web.servlet.ServletContextInitializerBeans][logMappings][237]-> Mapping filters: springSessionRepositoryFilter urls=[/*] order=-2147483598, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
2025-03-21 15:10:31 [DEBUG][org.springframework.boot.web.servlet.ServletContextInitializerBeans][logMappings][237]-> Mapping servlets: dispatcherServlet urls=[/]
2025-03-21 15:10:31 [DEBUG][org.springframework.boot.web.servlet.filter.OrderedRequestContextFilter][init][242]-> Filter 'requestContextFilter' configured for use
2025-03-21 15:10:31 [DEBUG][org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean$1][init][242]-> Filter 'springSessionRepositoryFilter' configured for use
2025-03-21 15:10:31 [DEBUG][org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter][init][242]-> Filter 'characterEncodingFilter' configured for use
2025-03-21 15:10:31 [DEBUG][org.springframework.boot.web.servlet.filter.OrderedFormContentFilter][init][242]-> Filter 'formContentFilter' configured for use
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'easyjobAdminApplication'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'initRun'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'dataSource'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dataSource' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
2025-03-21 15:10:31 [DEBUG][com.zaxxer.hikari.HikariConfig][attemptFromContextLoader][971]-> Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader sun.misc.Launcher$AppClassLoader@18b4aac2
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisUtils'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisTemplate'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisConfig'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisConnectionFactory'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration' via constructor to bean named 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties'
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'lettuceClientResources'
2025-03-21 15:10:31 [DEBUG][io.netty.util.internal.logging.InternalLoggerFactory][useSlf4JLoggerFactory][63]-> Using SLF4J as the default logging framework
2025-03-21 15:10:31 [DEBUG][io.lettuce.core.resource.AddressResolverGroupProvider][<clinit>][37]-> Starting without optional netty's non-blocking DNS resolver library
2025-03-21 15:10:31 [DEBUG][io.lettuce.core.resource.DefaultClientResources][<clinit>][122]-> -Dio.netty.eventLoopThreads: 16
2025-03-21 15:10:31 [DEBUG][io.lettuce.core.resource.DefaultEventLoopGroupProvider][createEventLoopGroup][231]-> Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
2025-03-21 15:10:31 [DEBUG][io.netty.util.concurrent.GlobalEventExecutor][<clinit>][53]-> -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-03-21 15:10:31 [DEBUG][io.netty.util.internal.InternalThreadLocalMap][<clinit>][100]-> -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-03-21 15:10:31 [DEBUG][io.netty.util.internal.InternalThreadLocalMap][<clinit>][101]-> -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-03-21 15:10:31 [DEBUG][io.netty.util.ResourceLeakDetector][<clinit>][129]-> -Dio.netty.leakDetection.level: simple
2025-03-21 15:10:31 [DEBUG][io.netty.util.ResourceLeakDetector][<clinit>][130]-> -Dio.netty.leakDetection.targetRecords: 4
2025-03-21 15:10:31 [DEBUG][io.netty.util.ResourceLeakDetectorFactory][newResourceLeakDetector][196]-> Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@cf67838
2025-03-21 15:10:31 [DEBUG][io.netty.util.internal.PlatformDependent0][explicitNoUnsafeCause0][497]-> -Dio.netty.noUnsafe: false
2025-03-21 15:10:31 [DEBUG][io.netty.util.internal.PlatformDependent0][javaVersion0][1001]-> Java version: 8
2025-03-21 15:10:31 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][137]-> sun.misc.Unsafe.theUnsafe: available
2025-03-21 15:10:31 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][161]-> sun.misc.Unsafe.copyMemory: available
2025-03-21 15:10:31 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][193]-> sun.misc.Unsafe.storeFence: available
2025-03-21 15:10:31 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][236]-> java.nio.Buffer.address: available
2025-03-21 15:10:31 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][308]-> direct buffer constructor: available
2025-03-21 15:10:31 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][386]-> java.nio.Bits.unaligned: available, true
2025-03-21 15:10:31 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][460]-> jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2025-03-21 15:10:31 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][483]-> java.nio.DirectByteBuffer.<init>(long, {int,long}): available
2025-03-21 15:10:31 [DEBUG][io.netty.util.internal.PlatformDependent][unsafeUnavailabilityCause0][1159]-> sun.misc.Unsafe: available
2025-03-21 15:10:31 [DEBUG][io.netty.util.internal.PlatformDependent][tmpdir0][1289]-> -Dio.netty.tmpdir: C:\Users\HM\AppData\Local\Temp (java.io.tmpdir)
2025-03-21 15:10:31 [DEBUG][io.netty.util.internal.PlatformDependent][bitMode0][1368]-> -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-03-21 15:10:31 [DEBUG][io.netty.util.internal.PlatformDependent][isWindows0][1119]-> Platform: Windows
2025-03-21 15:10:31 [DEBUG][io.netty.util.internal.PlatformDependent][<clinit>][178]-> -Dio.netty.maxDirectMemory: 3307208704 bytes
2025-03-21 15:10:31 [DEBUG][io.netty.util.internal.PlatformDependent][<clinit>][185]-> -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-03-21 15:10:31 [DEBUG][io.netty.util.internal.CleanerJava6][<clinit>][92]-> java.nio.ByteBuffer.cleaner(): available
2025-03-21 15:10:31 [DEBUG][io.netty.util.internal.PlatformDependent][<clinit>][205]-> -Dio.netty.noPreferDirect: false
2025-03-21 15:10:31 [DEBUG][io.netty.util.internal.PlatformDependent][<clinit>][1010]-> org.jctools-core.MpscChunkedArrayQueue: available
2025-03-21 15:10:31 [DEBUG][reactor.util.Loggers][debug][254]-> Using Slf4j logging framework
2025-03-21 15:10:31 [DEBUG][io.lettuce.core.event.jfr.EventRecorderHolder][<clinit>][55]-> Starting without optional JFR support. JFR unavailable.
2025-03-21 15:10:31 [DEBUG][io.lettuce.core.resource.DefaultClientResources][<init>][227]-> LatencyUtils/HdrUtils are not available, metrics are disabled
2025-03-21 15:10:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'redisConnectionFactory' via factory method to bean named 'lettuceClientResources'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'redisTemplate' via factory method to bean named 'redisConnectionFactory'
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.String as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Number to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Number as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Enum to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Enum as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Boolean to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Boolean as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.Date as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.UUID to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.UUID as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDate as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalTime as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Instant as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZoneId as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Period as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Duration as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class java.lang.String as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Period as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.String as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Number to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Number as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Enum to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Enum as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Boolean to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Boolean as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.Date as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.UUID to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.UUID as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDate as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalTime as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Instant as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZoneId as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Period as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Duration as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class java.lang.String as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Period as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.String as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Number to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Number as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Enum to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Enum as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Boolean to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Boolean as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.Date as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.UUID to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.UUID as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDate as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalTime as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Instant as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZoneId as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Period as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Duration as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class java.lang.String as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Period as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.String as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Number to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Number as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Enum to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Enum as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Boolean to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Boolean as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.Date as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.UUID to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.UUID as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDate as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalTime as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Instant as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZoneId as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Period as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Duration as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class java.lang.String as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Period as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.String as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Number to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Number as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Enum to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Enum as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Boolean to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Boolean as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.Date as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.UUID to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.UUID as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDate as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalTime as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Instant as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZoneId as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Period as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class [B as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Duration as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class java.lang.String as writing converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Period as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'operationAspect'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'AGlobalExceptionHandlerController'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appCarouselController'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appCarouselService'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appCarouselMapper'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sqlSessionFactory'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration'
2025-03-21 15:10:32 [DEBUG][org.springframework.core.LocalVariableTableParameterNameDiscoverer][inspectClass][105]-> Cannot find '.class' file for class [class org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$8027c273] - unable to determine constructor/method parameter names
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' via constructor to bean named 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ea6147e'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'sqlSessionFactory' via factory method to bean named 'dataSource'
2025-03-21 15:10:32 [DEBUG][org.apache.ibatis.logging.LogFactory][setImplementation][135]-> Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2025-03-21 15:10:32 [DEBUG][org.mybatis.spring.SqlSessionFactoryBean][buildSqlSessionFactory][534]-> Property 'mapperLocations' was not specified or no matching resources found
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sqlSessionTemplate'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'sqlSessionTemplate' via factory method to bean named 'sqlSessionFactory'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appFeedbackController'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appFeedbackService'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appFeedbackMapper'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appUpdateController'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appUpdateService'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appConfig'
2025-03-21 15:10:32 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'project.folder' in PropertySource 'environmentProperties' with value of type String
2025-03-21 15:10:32 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'super.admin.phones' in PropertySource 'environmentProperties' with value of type String
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appUpdateMapper'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appUserInfoController'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appUserInfoService'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appUserInfoMapper'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'jwtUtil'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appDeviceService'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appDeviceMapper'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'categoryController'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'categoryService'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'categoryMapper'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'examQuestionController'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'examQuestionService'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'examQuestionMapper'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'examQuestionItemMapper'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'examQuestionItemService'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'fileController'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'indexController'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'statisticsDataService'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'questionInfoMapper'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'shareInfoMapper'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'loginController'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysAccountService'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysAccountMapper'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysMenuService'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysMenuMapper'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'questionInfoController'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'questionInfoService'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'ACommonMapper'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'shareInfoController'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'shareInfoService'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysAccountController'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysMenuController'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysRoleController'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysRoleService'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysRoleMapper'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysRole2MenuMapper'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appExamQuestionService'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appExamQuestionMapper'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appExamService'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appExamMapper'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appUserCollectMapper'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appUserCollectService'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysRole2MenuService'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration$SessionCleanupConfiguration'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'cookieSerializer'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$ServletSessionConfiguration'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'cookieSerializer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sessionRepository'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration$SessionCleanupConfiguration' via constructor to bean named 'org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration$SessionCleanupConfiguration' via constructor to bean named 'sessionRepository'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'springSessionRedisMessageListenerContainer'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'springSessionRedisMessageListenerContainer' via factory method to bean named 'sessionRepository'
2025-03-21 15:10:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'enableRedisKeyspaceNotificationsInitializer'
2025-03-21 15:10:32 [DEBUG][io.lettuce.core.RedisClient][connectStandaloneAsync][273]-> Trying to get a Redis connection for: redis://127.0.0.1/1?timeout=2s
2025-03-21 15:10:32 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][157]-> -Dio.netty.allocator.numHeapArenas: 32
2025-03-21 15:10:32 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][158]-> -Dio.netty.allocator.numDirectArenas: 32
2025-03-21 15:10:32 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][160]-> -Dio.netty.allocator.pageSize: 8192
2025-03-21 15:10:32 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][165]-> -Dio.netty.allocator.maxOrder: 9
2025-03-21 15:10:32 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][169]-> -Dio.netty.allocator.chunkSize: 4194304
2025-03-21 15:10:32 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][170]-> -Dio.netty.allocator.smallCacheSize: 256
2025-03-21 15:10:32 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][171]-> -Dio.netty.allocator.normalCacheSize: 64
2025-03-21 15:10:32 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][172]-> -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-03-21 15:10:32 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][173]-> -Dio.netty.allocator.cacheTrimInterval: 8192
2025-03-21 15:10:32 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][174]-> -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-03-21 15:10:32 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][175]-> -Dio.netty.allocator.useCacheForAllThreads: false
2025-03-21 15:10:32 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][176]-> -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-03-21 15:10:32 [DEBUG][io.netty.buffer.ByteBufUtil][<clinit>][88]-> -Dio.netty.allocator.type: pooled
2025-03-21 15:10:32 [DEBUG][io.netty.buffer.ByteBufUtil][<clinit>][97]-> -Dio.netty.threadLocalDirectBufferSize: 0
2025-03-21 15:10:32 [DEBUG][io.netty.buffer.ByteBufUtil][<clinit>][100]-> -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-03-21 15:10:32 [DEBUG][io.lettuce.core.resource.KqueueProvider][<clinit>][73]-> Starting without optional kqueue library
2025-03-21 15:10:32 [DEBUG][io.lettuce.core.resource.IOUringProvider][<clinit>][75]-> Starting without optional io_uring library
2025-03-21 15:10:32 [DEBUG][io.lettuce.core.resource.EpollProvider][<clinit>][76]-> Starting without optional epoll library
2025-03-21 15:10:32 [DEBUG][io.lettuce.core.resource.DefaultEventLoopGroupProvider][allocate][112]-> Allocating executor io.netty.channel.nio.NioEventLoopGroup
2025-03-21 15:10:32 [DEBUG][io.lettuce.core.resource.DefaultEventLoopGroupProvider][createEventLoopGroup][231]-> Creating executor io.netty.channel.nio.NioEventLoopGroup
2025-03-21 15:10:32 [DEBUG][io.netty.channel.MultithreadEventLoopGroup][<clinit>][44]-> -Dio.netty.eventLoopThreads: 32
2025-03-21 15:10:32 [DEBUG][io.netty.channel.nio.NioEventLoop][<clinit>][110]-> -Dio.netty.noKeySetOptimization: false
2025-03-21 15:10:32 [DEBUG][io.netty.channel.nio.NioEventLoop][<clinit>][111]-> -Dio.netty.selectorAutoRebuildThreshold: 512
2025-03-21 15:10:32 [DEBUG][io.lettuce.core.resource.DefaultEventLoopGroupProvider][addReference][128]-> Adding reference to io.netty.channel.nio.NioEventLoopGroup@fa5f81c, existing ref count 0
2025-03-21 15:10:32 [DEBUG][io.lettuce.core.RedisClient][lambda$getSocketAddressSupplier$14][736]-> Resolved SocketAddress 127.0.0.1:6379 using redis://127.0.0.1/1?timeout=2s
2025-03-21 15:10:32 [DEBUG][io.lettuce.core.AbstractRedisClient][initializeChannelAsync0][401]-> Connecting to Redis at 127.0.0.1:6379
2025-03-21 15:10:32 [DEBUG][io.netty.channel.DefaultChannelId][<clinit>][79]-> -Dio.netty.processId: 11016 (auto-detected)
2025-03-21 15:10:32 [DEBUG][io.netty.util.NetUtil][<clinit>][148]-> -Djava.net.preferIPv4Stack: false
2025-03-21 15:10:32 [DEBUG][io.netty.util.NetUtil][<clinit>][149]-> -Djava.net.preferIPv6Addresses: false
2025-03-21 15:10:33 [DEBUG][io.netty.util.NetUtilInitializations][determineLoopback][145]-> Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-03-21 15:10:33 [DEBUG][io.netty.util.NetUtil][run][206]-> Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-03-21 15:10:33 [DEBUG][io.netty.channel.DefaultChannelId][<clinit>][101]-> -Dio.netty.machineId: 4c:d5:77:ff:fe:e4:dd:97 (auto-detected)
2025-03-21 15:10:33 [DEBUG][io.netty.util.Recycler][<clinit>][96]-> -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-03-21 15:10:33 [DEBUG][io.netty.util.Recycler][<clinit>][97]-> -Dio.netty.recycler.ratio: 8
2025-03-21 15:10:33 [DEBUG][io.netty.util.Recycler][<clinit>][98]-> -Dio.netty.recycler.chunkSize: 32
2025-03-21 15:10:33 [DEBUG][io.netty.util.Recycler][<clinit>][99]-> -Dio.netty.recycler.blocking: false
2025-03-21 15:10:33 [DEBUG][io.netty.util.Recycler][<clinit>][100]-> -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-03-21 15:10:33 [DEBUG][io.netty.buffer.AbstractByteBuf][<clinit>][63]-> -Dio.netty.buffer.checkAccessible: true
2025-03-21 15:10:33 [DEBUG][io.netty.buffer.AbstractByteBuf][<clinit>][64]-> -Dio.netty.buffer.checkBounds: true
2025-03-21 15:10:33 [DEBUG][io.netty.util.ResourceLeakDetectorFactory][newResourceLeakDetector][196]-> Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@65128143
2025-03-21 15:10:33 [DEBUG][io.lettuce.core.AbstractRedisClient][lambda$null$5][439]-> Connecting to Redis at 127.0.0.1:6379: Success
2025-03-21 15:10:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=CONFIG, output=MapOutput [output=AsyncCommand [type=CONFIG, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:10:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=CONFIG, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sessionEventHttpSessionListenerAdapter'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'springSessionRepositoryFilter'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'springSessionRepositoryFilter' via factory method to bean named 'sessionRepository'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'baseMapper'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'taskExecutorBuilder'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'error'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'beanNameViewResolver'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ea6147e'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'conventionErrorViewResolver'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'errorAttributes'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'basicErrorController'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@147e2ae7'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@147e2ae7'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataWebConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.data.web.config.SpringDataWebConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ea6147e'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcContentNegotiationManager'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcConversionService'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcValidator'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'messageConverters'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'stringHttpMessageConverter'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'environment'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'jacksonObjectMapper'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ea6147e'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ea6147e'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'parameterNamesModule'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'jsonComponentModule'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'jsonMixinModule'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ea6147e'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'jacksonGeoModule'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sortResolver'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sortCustomizer'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration' via constructor to bean named 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'pageableResolver'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'pageableCustomizer'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'applicationTaskExecutor'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
2025-03-21 15:10:33 [DEBUG][org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor][initialize][184]-> Initializing ExecutorService 'applicationTaskExecutor'
2025-03-21 15:10:33 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter][initControllerAdviceCache][625]-> ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'welcomePageHandlerMapping'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcResourceUrlProvider'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ea6147e'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'welcomePageNotAcceptableHandlerMapping'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'welcomePageNotAcceptableHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ea6147e'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'welcomePageNotAcceptableHandlerMapping' via factory method to bean named 'mvcConversionService'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'welcomePageNotAcceptableHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'localeResolver'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'themeResolver'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'flashMapManager'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'requestMappingHandlerMapping'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2025-03-21 15:10:33 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.e.c.AppCarouselController:
	{ [/appCarousel/loadDataList]}: loadDataList(AppCarouselQuery)
	{ [/appCarousel/changeSort]}: changeSort(String)
	{ [/appCarousel/saveCarousel]}: saveCarousel(AppCarousel)
	{ [/appCarousel/delCarousel]}: delCarousel(Integer)
2025-03-21 15:10:33 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.e.c.AppFeedbackController:
	{ [/appFeedback/loadFeedback]}: loadFeedback(AppFeedbackQuery)
	{ [/appFeedback/replyFeedback]}: replyFeedback(String,Integer)
	{ [/appFeedback/loadFeedbackReply]}: loadFeedbackReply(Integer)
2025-03-21 15:10:33 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.e.c.AppUpdateController:
	{ [/app/delUpdate]}: delUpdate(Integer)
	{ [/app/loadDataList]}: loadDataList(AppUpdateQuery)
	{ [/app/saveUpdate]}: saveUpdate(Integer,String,String,Integer,MultipartFile)
	{ [/app/postUpdate]}: postUpdate(Integer,Integer,String)
2025-03-21 15:10:33 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.e.c.AppUserInfoController:
	{ [/appUser/updateStatus]}: updateStatus(String,Integer)
	{ [/appUser/loadDeviceList]}: loadDeviceList(AppDeviceQuery)
	{ [/appUser/loadDataList]}: loadDataList(AppUserInfoQuery)
2025-03-21 15:10:33 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.e.c.CategoryController:
	{ [/category/changeSort]}: changeSort(String)
	{ [/category/loadAllCategory4Select]}: loadAllCategory4Select(Integer)
	{ [/category/loadAllCategory]}: loadAllCategory(CategoryQuery)
	{ [/category/delCategory]}: delCategory(Integer)
	{ [/category/saveCategory]}: saveCategory(Category)
2025-03-21 15:10:33 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.e.c.ExamQuestionController:
	{ [/examQuestion/loadDataList]}: loadDataList(ExamQuestionQuery)
	{ [/examQuestion/showExamQuestionDetailNext]}: showExamQuestionDetailNext(ExamQuestionQuery,Integer,Integer)
	{ [/examQuestion/delExamQuestionBatch]}: delExamQuestionBatch(String)
	{ [/examQuestion/cancelPostExamQuestion]}: cancelPostExamQuestion(String)
	{ [/examQuestion/importExamQuestion]}: importExamQuestion(HttpSession,MultipartFile)
	{ [/examQuestion/saveExamQuestion]}: saveExamQuestion(HttpSession,ExamQuestion,String)
	{ [/examQuestion/loadQuestionItem]}: loadQuestionItem(Integer)
	{ [/examQuestion/postExamQuestion]}: postExamQuestion(String)
	{ [/examQuestion/delExamQuestion]}: delExamQuestion(HttpSession,Integer)
2025-03-21 15:10:33 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.e.c.FileController:
	{ [/file/getImage/{imageFolder}/{imageName}]}: getImage(HttpServletResponse,String,String)
	{ [/file/downloadTemplate]}: downloadTemplate(HttpServletResponse,HttpServletRequest,Integer)
	{ [/file/uploadFile]}: uploadFile(MultipartFile,Integer)
2025-03-21 15:10:33 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.e.c.IndexController:
	{ [/index/getContentWeekData]}: getContentWeekData()
	{ [/index/getAppWeekData]}: getAppWeekData()
	{ [/index/getAllData]}: getAllData()
2025-03-21 15:10:33 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.e.c.LoginController:
	{ [/updateMyPwd]}: updateMyPwd(HttpSession,String)
	{ [/logout]}: logout(HttpSession)
	{ [/login]}: login(HttpSession,String,String,String)
	{ [/checkCode]}: checkCode(HttpServletResponse,HttpSession)
2025-03-21 15:10:33 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.e.c.QuestionInfoController:
	{ [/questionInfo/loadDataList]}: loadDataList(QuestionInfoQuery)
	{ [/questionInfo/cancelPostQuestion]}: cancelPostQuestion(String)
	{ [/questionInfo/showQuestionDetailNext]}: showQuestionDetailNext(QuestionInfoQuery,Integer,Integer)
	{ [/questionInfo/importQuestion]}: importQuestion(HttpSession,MultipartFile)
	{ [/questionInfo/delQuestionBatch]}: delQuestionBatch(String)
	{ [/questionInfo/saveQuestionInfo]}: saveQuestionInfo(HttpSession,QuestionInfo)
	{ [/questionInfo/postQuestion]}: postQuestion(String)
	{ [/questionInfo/delQuestion]}: delQuestion(HttpSession,Integer)
2025-03-21 15:10:33 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.e.c.ShareInfoController:
	{ [/shareInfo/loadDataList]}: loadDataList(ShareInfoQuery)
	{ [/shareInfo/cancelPostShare]}: cancelPostShare(String)
	{ [/shareInfo/showShareDetailNext]}: showShareDetailNext(ShareInfoQuery,Integer,Integer)
	{ [/shareInfo/saveShareInfo]}: saveShareInfo(HttpSession,Integer,String,Integer,String,String)
	{ [/shareInfo/delShareBatch]}: delShareBatch(String)
	{ [/shareInfo/postShare]}: postShare(String)
	{ [/shareInfo/delShare]}: delShare(HttpSession,String)
2025-03-21 15:10:33 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.e.c.SysAccountController:
	{ [/settings/updateStatus]}: updateStatus(Integer,Integer)
	{ [/settings/delAccount]}: delAccount(Integer)
	{ [/settings/saveAccount]}: saveAccount(SysAccount)
	{ [/settings/updatePassword]}: updatePassword(Integer,String)
	{ [/settings/loadAccountList]}: loadAccountList(SysAccountQuery)
2025-03-21 15:10:33 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.e.c.SysMenuController:
	{ [/settings/saveMenu]}: saveMenu(SysMenu)
	{ [/settings/menuList]}: menuList()
	{ [/settings/delMenu]}: delMenu(Integer)
2025-03-21 15:10:33 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.e.c.SysRoleController:
	{ [/settings/getRoleByRoleId]}: getRoleByRoleId(Integer)
	{ [/settings/loadRoles]}: loadRoles(SysRoleQuery)
	{ [/settings/saveRole]}: saveRole(SysRole,String,String)
	{ [/settings/loadAllRoles]}: loadAllRoles()
	{ [/settings/saveRoleMenu]}: saveRoleMenu(Integer,String,String)
	{ [/settings/delRole]}: delRole(Integer)
2025-03-21 15:10:33 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-03-21 15:10:33 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][handlerMethodsInitialized][367]-> 69 mappings in 'requestMappingHandlerMapping'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcPatternParser'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcUrlPathHelper'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcPathMatcher'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'viewControllerHandlerMapping'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'beanNameHandlerMapping'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2025-03-21 15:10:33 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlers][86]-> 'beanNameHandlerMapping' {}
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'routerFunctionMapping'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'resourceHandlerMapping'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2025-03-21 15:10:33 [DEBUG][org.springframework.web.servlet.config.annotation.WebMvcConfigurer][addResourceHandlers][335]-> Default resource handling disabled
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'defaultServletHandlerMapping'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'handlerFunctionAdapter'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcUriComponentsContributor'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'handlerExceptionResolver'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
2025-03-21 15:10:33 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver][initExceptionHandlerAdviceCache][307]-> ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcViewResolver'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'viewNameTranslator'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'defaultViewResolver'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'viewResolver'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@147e2ae7'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'viewResolver'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'freeMarkerViewResolver'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerServletWebConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.freemarker-org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerServletWebConfiguration' via constructor to bean named 'spring.freemarker-org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari' via constructor to bean named 'dataSource'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'hikariPoolDataSourceMetadataProvider'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.jmx-org.springframework.boot.autoconfigure.jmx.JmxProperties'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration' via constructor to bean named 'spring.jmx-org.springframework.boot.autoconfigure.jmx.JmxProperties'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mbeanExporter'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'objectNamingStrategy'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mbeanExporter' via factory method to bean named 'objectNamingStrategy'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mbeanExporter' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@147e2ae7'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mbeanServer'
2025-03-21 15:10:33 [DEBUG][org.springframework.jmx.support.JmxUtils][locateMBeanServer][127]-> Found MBeanServer: com.sun.jmx.mbeanserver.JmxMBeanServer@6193b845
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'springApplicationAdminRegistrar'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'springApplicationAdminRegistrar' via factory method to bean named 'environment'
2025-03-21 15:10:33 [DEBUG][org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin][afterPropertiesSet][131]-> Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'applicationAvailability'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'stringRedisTemplate'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'stringRedisTemplate' via factory method to bean named 'redisConnectionFactory'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'lifecycleProcessor'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'lifecycleProcessor' via factory method to bean named 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'reactiveRedisTemplate'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'reactiveRedisTemplate' via factory method to bean named 'redisConnectionFactory'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'reactiveRedisTemplate' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ea6147e'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'reactiveStringRedisTemplate'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'reactiveStringRedisTemplate' via factory method to bean named 'redisConnectionFactory'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'keyValueMappingContext'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisCustomConversions'
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class [B as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.String as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Number to class [B as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Number as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Enum to class [B as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Enum as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Boolean to class [B as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Boolean as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class [B as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.Date as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.UUID to class [B as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.UUID as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class [B as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDate as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class [B as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalTime as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class [B as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Instant as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class [B as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZoneId as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class [B as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Period as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class [B as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Duration as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class java.lang.String as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Period as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisReferenceResolver'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisConverter'
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class [B as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.String as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Number to class [B as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Number as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Enum to class [B as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Enum as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Boolean to class [B as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Boolean as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class [B as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.Date as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.UUID to class [B as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.UUID as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class [B as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDate as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class [B as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalTime as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class [B as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Instant as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class [B as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZoneId as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class [B as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Period as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class [B as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Duration as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class java.lang.String as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Period as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class [B as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.String as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Number to class [B as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Number as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Enum to class [B as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Enum as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Boolean to class [B as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Boolean as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class [B as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.Date as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.UUID to class [B as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.UUID as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class [B as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDate as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class [B as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalTime as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class [B as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Instant as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class [B as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZoneId as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class [B as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Period as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class [B as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Duration as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class java.lang.String as writing converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Period as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisKeyValueAdapter'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisKeyValueTemplate'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.data.web.config.ProjectingArgumentResolverRegistrar'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'freeMarkerConfigurer'
2025-03-21 15:10:33 [DEBUG][org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer][getTemplateLoaderForPath][362]-> File system access not preferred: using SpringTemplateLoader
2025-03-21 15:10:33 [DEBUG][org.springframework.ui.freemarker.SpringTemplateLoader][<init>][62]-> SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ea6147e, started on Fri Mar 21 15:10:30 CST 2025] and template loader path [classpath:/templates/]
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'freeMarkerConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'freeMarkerConfiguration' via factory method to bean named 'freeMarkerConfigurer'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ea6147e'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration' via constructor to bean named 'spring.freemarker-org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties'
2025-03-21 15:10:33 [WARN][org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration][checkTemplateLocationExists][65]-> Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.check-template-location=false)
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'dataSourceScriptDatabaseInitializer'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'dataSource'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'jdbcTemplate'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.netty-org.springframework.boot.autoconfigure.netty.NettyProperties'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration' via constructor to bean named 'spring.netty-org.springframework.boot.autoconfigure.netty.NettyProperties'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$ServletSessionRepositoryValidator'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$ServletSessionRepositoryValidator' via constructor to bean named 'spring.session-org.springframework.boot.autoconfigure.session.SessionProperties'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.session.SessionAutoConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.webflux-org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'scheduledBeanLazyInitializationExcludeFilter'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'taskSchedulerBuilder'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'transactionManager'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'transactionManager' via factory method to bean named 'environment'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'transactionManager' via factory method to bean named 'dataSource'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'transactionTemplate'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
2025-03-21 15:10:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'multipartResolver'
2025-03-21 15:10:33 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][afterSingletonsInstantiated][434]-> Registering beans for JMX exposure on startup
2025-03-21 15:10:33 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeans][541]-> Autodetecting user-defined JMX MBeans
2025-03-21 15:10:33 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect][896]-> Bean with name 'dataSource' has been autodetected for JMX exposure
2025-03-21 15:10:33 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance][669]-> Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2025-03-21 15:10:33 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][start][352]-> Starting beans in phase -2147483647
2025-03-21 15:10:33 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][doStart][184]-> Successfully started bean 'springBootLoggingLifecycle'
2025-03-21 15:10:33 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][start][352]-> Starting beans in phase 2147483646
2025-03-21 15:10:33 [INFO][org.apache.coyote.http11.Http11NioProtocol][log][173]-> Starting ProtocolHandler ["http-nio-9091"]
2025-03-21 15:10:33 [INFO][org.springframework.boot.web.embedded.tomcat.TomcatWebServer][start][220]-> Tomcat started on port(s): 9091 (http) with context path '/api'
2025-03-21 15:10:33 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][doStart][184]-> Successfully started bean 'webServerStartStop'
2025-03-21 15:10:33 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][start][352]-> Starting beans in phase 2147483647
2025-03-21 15:10:33 [DEBUG][io.lettuce.core.RedisClient][lambda$getSocketAddressSupplier$14][736]-> Resolved SocketAddress 127.0.0.1:6379 using redis://127.0.0.1/1?timeout=2s
2025-03-21 15:10:33 [DEBUG][io.lettuce.core.AbstractRedisClient][initializeChannelAsync0][401]-> Connecting to Redis at 127.0.0.1:6379
2025-03-21 15:10:33 [DEBUG][io.lettuce.core.AbstractRedisClient][lambda$null$5][439]-> Connecting to Redis at 127.0.0.1:6379: Success
2025-03-21 15:10:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:10:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:10:33 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][doStart][184]-> Successfully started bean 'springSessionRedisMessageListenerContainer'
2025-03-21 15:10:33 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][doStart][184]-> Successfully started bean 'webServerGracefulShutdown'
2025-03-21 15:10:33 [DEBUG][org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener][logAutoConfigurationReport][126]-> 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   ApplicationAvailabilityAutoConfiguration#applicationAvailability matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.availability.ApplicationAvailability; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnWarDeployment the application is not deployed as a WAR file. (OnWarDeploymentCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   FreeMarkerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'freemarker.template.Configuration', 'org.springframework.ui.freemarker.FreeMarkerConfigurationFactory' (OnClassCondition)

   FreeMarkerServletWebConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   FreeMarkerServletWebConfiguration#freeMarkerConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.freemarker.FreeMarkerConfig; SearchStrategy: all) did not find any beans (OnBeanCondition)

   FreeMarkerServletWebConfiguration#freeMarkerViewResolver matched:
      - @ConditionalOnProperty (spring.freemarker.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (names: freeMarkerViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LettuceConnectionConfiguration matched:
      - @ConditionalOnClass found required class 'io.lettuce.core.RedisClient' (OnClassCondition)
      - @ConditionalOnProperty (spring.redis.client-type=lettuce) matched (OnPropertyCondition)

   LettuceConnectionConfiguration#lettuceClientResources matched:
      - @ConditionalOnMissingBean (types: io.lettuce.core.resource.ClientResources; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LettuceConnectionConfiguration#redisConnectionFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: javax.servlet.MultipartConfigElement,org.springframework.web.multipart.commons.CommonsMultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.ibatis.session.SqlSessionFactory', 'org.mybatis.spring.SqlSessionFactoryBean' (OnClassCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource' (OnBeanCondition)

   MybatisAutoConfiguration#sqlSessionFactory matched:
      - @ConditionalOnMissingBean (types: org.apache.ibatis.session.SqlSessionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisAutoConfiguration#sqlSessionTemplate matched:
      - @ConditionalOnMissingBean (types: org.mybatis.spring.SqlSessionTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NettyAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RedisAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisAutoConfiguration#stringRedisTemplate matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found a single bean 'redisConnectionFactory'; @ConditionalOnMissingBean (types: org.springframework.data.redis.core.StringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisCacheConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)
      - Cache org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration automatic cache type (CacheCondition)

   RedisReactiveAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.redis.connection.ReactiveRedisConnectionFactory', 'org.springframework.data.redis.core.ReactiveRedisTemplate', 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisReactiveAutoConfiguration#reactiveRedisTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: reactiveRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisReactiveAutoConfiguration#reactiveStringRedisTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: reactiveStringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.redis.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (types: org.springframework.data.redis.repository.support.RedisRepositoryFactoryBean; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisSessionConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.redis.core.RedisTemplate', 'org.springframework.session.data.redis.RedisIndexedSessionRepository' (OnClassCondition)
      - Session Condition found spring.session.store-type property REDIS (ServletSessionCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration#restTemplateBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SessionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.session.Session' (OnClassCondition)
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   SessionAutoConfiguration.ServletSessionConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   SessionAutoConfiguration.ServletSessionConfiguration#cookieSerializer matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on SessionAutoConfiguration.DefaultCookieSerializerCondition.CookieHttpSessionIdResolverAvailable found non-matching nested conditions @ConditionalOnBean (types: org.springframework.session.web.http.CookieHttpSessionIdResolver; SearchStrategy: all) did not find any beans of type org.springframework.session.web.http.CookieHttpSessionIdResolver, @ConditionalOnBean (types: org.springframework.session.web.http.CookieHttpSessionIdResolver; SearchStrategy: all) did not find any beans of type org.springframework.session.web.http.CookieHttpSessionIdResolver; NestedCondition on SessionAutoConfiguration.DefaultCookieSerializerCondition.NoComponentsAvailable @ConditionalOnMissingBean (types: org.springframework.session.web.http.HttpSessionIdResolver,org.springframework.session.web.http.CookieSerializer; SearchStrategy: all) did not find any beans (SessionAutoConfiguration.DefaultCookieSerializerCondition)

   SessionRepositoryFilterConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.session.web.http.SessionRepositoryFilter; SearchStrategy: all) found bean 'springSessionRepositoryFilter' (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#scheduledBeanLazyInitializationExcludeFilter matched:
      - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) found bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' (OnBeanCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   EhCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Cache' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedMongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClientSettings' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerNonWebConfiguration:
      Did not match:
         - @ConditionalOnWebApplication found 'session' scope and did not find reactive web application classes (OnWebApplicationCondition)

   FreeMarkerReactiveWebConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   FreeMarkerServletWebConfiguration#resourceUrlEncodingFilter:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.WebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastSessionConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.hazelcast.HazelcastIndexedSessionRepository' (OnClassCondition)

   HibernateJpaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.persistence.EntityManager' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JdbcSessionConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.jdbc.JdbcIndexedSessionRepository' (OnClassCondition)

   JedisConnectionConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.apache.commons.pool2.impl.GenericObjectPool', 'redis.clients.jedis.Jedis' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.Message' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JtaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.Transaction' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mail.test-connection) did not find property 'test-connection' (OnPropertyCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoSessionConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.mongodb.core.MongoOperations' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   MybatisAutoConfiguration.MapperScannerRegistrarNotFoundConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.mybatis.spring.mapper.MapperFactoryBean; SearchStrategy: all) found beans of type 'org.mybatis.spring.mapper.MapperFactoryBean' &ACommonMapper, &appCarouselMapper, &appDeviceMapper, &appExamMapper, &appExamQuestionMapper, &appFeedbackMapper, &appUpdateMapper, &appUserCollectMapper, &appUserInfoMapper, &baseMapper, &categoryMapper, &examQuestionItemMapper, &examQuestionMapper, &questionInfoMapper, &shareInfoMapper, &sysAccountMapper, &sysMenuMapper, &sysRole2MenuMapper, &sysRoleMapper (OnBeanCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NoOpSessionConfiguration:
      Did not match:
         - Session Condition found spring.session.store-type property REDIS (ServletSessionCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RedisAutoConfiguration#redisTemplate:
      Did not match:
         - @ConditionalOnMissingBean (names: redisTemplate; SearchStrategy: all) found beans named redisTemplate (OnBeanCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration.ReactiveSessionConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   SessionAutoConfiguration.ServletSessionConfiguration.RememberMeServicesConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.web.authentication.RememberMeServices' (OnClassCondition)

   SessionAutoConfiguration.ServletSessionConfiguration.ServletSessionRepositoryConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.session.SessionRepository; SearchStrategy: all) found beans of type 'org.springframework.session.SessionRepository' sessionRepository (OnBeanCondition)

   SolrAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.impl.CloudSolrClient' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskScheduler:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.scheduling.annotation.SchedulingConfigurer,org.springframework.scheduling.TaskScheduler,java.util.concurrent.ScheduledExecutorService; SearchStrategy: all) found beans of type 'org.springframework.scheduling.annotation.SchedulingConfigurer' org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration$SessionCleanupConfiguration (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring5.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) found beans of type 'org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration' org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)
         - Ancestor org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   ValidationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.validation.executable.ExecutableValidator' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.client.core.WebServiceTemplate' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.Jetty10WebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.websocket.javax.server.internal.JavaxWebSocketServerContainer', 'org.eclipse.jetty.websocket.server.JettyWebSocketServerContainer' (OnClassCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.TransactionManager' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



2025-03-21 15:10:33 [INFO][org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor][finishRegistration][315]-> No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2025-03-21 15:10:33 [DEBUG][org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver][logKeyFound][115]-> Found key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties' with value of type String
2025-03-21 15:10:33 [INFO][com.easyjob.EasyjobAdminApplication][logStarted][61]-> Started EasyjobAdminApplication in 4.308 seconds (JVM running for 5.124)
2025-03-21 15:10:33 [DEBUG][org.springframework.boot.availability.ApplicationAvailabilityBean][onApplicationEvent][77]-> Application availability state LivenessState changed to CORRECT
2025-03-21 15:10:33 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1103]-> HikariCPDatasource - configuration:
2025-03-21 15:10:33 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> allowPoolSuspension................................false
2025-03-21 15:10:33 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> autoCommit................................true
2025-03-21 15:10:33 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> catalog................................none
2025-03-21 15:10:33 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> connectionInitSql................................none
2025-03-21 15:10:33 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> connectionTestQuery................................"SELECT 1"
2025-03-21 15:10:33 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> connectionTimeout................................30000
2025-03-21 15:10:33 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> dataSource................................none
2025-03-21 15:10:33 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> dataSourceClassName................................none
2025-03-21 15:10:33 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> dataSourceJNDI................................none
2025-03-21 15:10:33 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> dataSourceProperties................................{password=<masked>}
2025-03-21 15:10:33 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> driverClassName................................"com.mysql.cj.jdbc.Driver"
2025-03-21 15:10:33 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> exceptionOverrideClassName................................none
2025-03-21 15:10:33 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> healthCheckProperties................................{}
2025-03-21 15:10:33 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> healthCheckRegistry................................none
2025-03-21 15:10:33 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> idleTimeout................................180000
2025-03-21 15:10:33 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> initializationFailTimeout................................1
2025-03-21 15:10:33 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> isolateInternalQueries................................false
2025-03-21 15:10:33 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> jdbcUrl................................jdbc:mysql://127.0.0.1:3306/easyjob?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf8&autoReconnect=true&allowMultiQueries=true
2025-03-21 15:10:33 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> keepaliveTime................................0
2025-03-21 15:10:33 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> leakDetectionThreshold................................0
2025-03-21 15:10:33 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> maxLifetime................................1800000
2025-03-21 15:10:33 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> maximumPoolSize................................10
2025-03-21 15:10:33 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> metricRegistry................................none
2025-03-21 15:10:33 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> metricsTrackerFactory................................none
2025-03-21 15:10:33 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> minimumIdle................................5
2025-03-21 15:10:33 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> password................................<masked>
2025-03-21 15:10:33 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> poolName................................"HikariCPDatasource"
2025-03-21 15:10:33 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> readOnly................................false
2025-03-21 15:10:33 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> registerMbeans................................false
2025-03-21 15:10:33 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> scheduledExecutor................................none
2025-03-21 15:10:33 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> schema................................none
2025-03-21 15:10:33 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> threadFactory................................internal
2025-03-21 15:10:33 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> transactionIsolation................................default
2025-03-21 15:10:33 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> username................................"root"
2025-03-21 15:10:33 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> validationTimeout................................5000
2025-03-21 15:10:33 [INFO][com.zaxxer.hikari.HikariDataSource][getConnection][110]-> HikariCPDatasource - Starting...
2025-03-21 15:10:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][checkFailFast][565]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@3855d9b2
2025-03-21 15:10:34 [INFO][com.zaxxer.hikari.HikariDataSource][getConnection][123]-> HikariCPDatasource - Start completed.
2025-03-21 15:10:34 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:10:34 [ERROR][com.easyjob.InitRun][run][31]-> 服务启动成功，可以开始愉快的开发了
2025-03-21 15:10:34 [DEBUG][org.springframework.boot.availability.ApplicationAvailabilityBean][onApplicationEvent][77]-> Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2025-03-21 15:10:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=1, active=1, idle=0, waiting=0)
2025-03-21 15:10:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=1, active=1, idle=0, waiting=0)
2025-03-21 15:10:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@610c915f
2025-03-21 15:10:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@15e0c60a
2025-03-21 15:10:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@4421fc55
2025-03-21 15:10:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@2d1d659
2025-03-21 15:10:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@406fc4d5
2025-03-21 15:10:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After adding stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:11:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:11:00 CST 2025
2025-03-21 15:11:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:11:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:11:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:11:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:11:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:11:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:11:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:11:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:12:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:12:00 CST 2025
2025-03-21 15:12:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:12:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:12:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:12:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:12:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:12:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:12:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:12:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:13:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:13:00 CST 2025
2025-03-21 15:13:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:13:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:13:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:13:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:13:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:13:22 [INFO][org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/api]][log][173]-> Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-21 15:13:22 [INFO][org.springframework.web.servlet.DispatcherServlet][initServletBean][525]-> Initializing Servlet 'dispatcherServlet'
2025-03-21 15:13:22 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initMultipartResolver][522]-> Detected StandardServletMultipartResolver
2025-03-21 15:13:22 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initLocaleResolver][546]-> Detected AcceptHeaderLocaleResolver
2025-03-21 15:13:22 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initThemeResolver][571]-> Detected FixedThemeResolver
2025-03-21 15:13:22 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initRequestToViewNameTranslator][721]-> Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@24c685e7
2025-03-21 15:13:22 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initFlashMapManager][785]-> Detected org.springframework.web.servlet.support.SessionFlashMapManager@3d53e6f7
2025-03-21 15:13:22 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initServletBean][542]-> enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-03-21 15:13:22 [INFO][org.springframework.web.servlet.DispatcherServlet][initServletBean][547]-> Completed initialization in 4 ms
2025-03-21 15:13:22 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> GET "/api/checkCode?time=1742541202887", parameters={masked}
2025-03-21 15:13:22 [DEBUG][org.springframework.session.web.http.SessionRepositoryFilter.SESSION_LOGGER][getSession][305]-> No session found by id: Caching result for getSession(false) for this HttpServletRequest.
2025-03-21 15:13:22 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.LoginController#checkCode(HttpServletResponse, HttpSession)
2025-03-21 15:13:23 [DEBUG][org.springframework.session.web.http.SessionRepositoryFilter.SESSION_LOGGER][getSession][305]-> No session found by id: Caching result for getSession(false) for this HttpServletRequest.
2025-03-21 15:13:23 [DEBUG][org.springframework.session.web.http.SessionRepositoryFilter.SESSION_LOGGER][getSession][318]-> A new session was created. To help you troubleshoot where the session was created we provided a StackTrace (this is not an error). You can prevent this from appearing by disabling DEBUG logging for org.springframework.session.web.http.SessionRepositoryFilter.SESSION_LOGGER
java.lang.RuntimeException: For debugging purposes only (not an error)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:320)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:332)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:193)
	at org.springframework.web.servlet.mvc.method.annotation.ServletRequestMethodArgumentResolver.resolveArgument(ServletRequestMethodArgumentResolver.java:139)
	at org.springframework.web.servlet.mvc.method.annotation.ServletRequestMethodArgumentResolver.resolveArgument(ServletRequestMethodArgumentResolver.java:124)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:142)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2025-03-21 15:13:23 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:13:23 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:13:23 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:13:23 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:13:23 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:13:23 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:13:23 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PUBLISH, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:13:23 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 15:13:24 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> GET "/api/checkCode?time=1742541204762", parameters={masked}
2025-03-21 15:13:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:13:24 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.LoginController#checkCode(HttpServletResponse, HttpSession)
2025-03-21 15:13:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:13:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:13:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:13:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:13:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:13:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:13:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:13:24 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 15:13:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:13:25 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> GET "/api/checkCode?time=1742541205257", parameters={masked}
2025-03-21 15:13:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:13:25 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.LoginController#checkCode(HttpServletResponse, HttpSession)
2025-03-21 15:13:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:13:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:13:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:13:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:13:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:13:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:13:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:13:25 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 15:13:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:13:32 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> GET "/api/checkCode?time=1742541212217", parameters={masked}
2025-03-21 15:13:32 [DEBUG][org.springframework.session.web.http.SessionRepositoryFilter.SESSION_LOGGER][getSession][305]-> No session found by id: Caching result for getSession(false) for this HttpServletRequest.
2025-03-21 15:13:32 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.LoginController#checkCode(HttpServletResponse, HttpSession)
2025-03-21 15:13:32 [DEBUG][org.springframework.session.web.http.SessionRepositoryFilter.SESSION_LOGGER][getSession][305]-> No session found by id: Caching result for getSession(false) for this HttpServletRequest.
2025-03-21 15:13:32 [DEBUG][org.springframework.session.web.http.SessionRepositoryFilter.SESSION_LOGGER][getSession][318]-> A new session was created. To help you troubleshoot where the session was created we provided a StackTrace (this is not an error). You can prevent this from appearing by disabling DEBUG logging for org.springframework.session.web.http.SessionRepositoryFilter.SESSION_LOGGER
java.lang.RuntimeException: For debugging purposes only (not an error)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:320)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:332)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:193)
	at org.springframework.web.servlet.mvc.method.annotation.ServletRequestMethodArgumentResolver.resolveArgument(ServletRequestMethodArgumentResolver.java:139)
	at org.springframework.web.servlet.mvc.method.annotation.ServletRequestMethodArgumentResolver.resolveArgument(ServletRequestMethodArgumentResolver.java:124)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:142)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2025-03-21 15:13:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:13:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:13:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:13:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:13:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:13:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:13:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PUBLISH, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:13:32 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 15:13:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:13:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:13:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:14:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:14:00 CST 2025
2025-03-21 15:14:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:14:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:14:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:14:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:14:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:14:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:14:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:14:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:15:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:15:00 CST 2025
2025-03-21 15:15:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:15:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:15:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:15:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:15:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:15:12 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/login", parameters={multipart}
2025-03-21 15:15:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:15:12 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.LoginController#login(HttpSession, String, String, String)
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c4dfade] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1990878238 wrapping com.mysql.cj.jdbc.ConnectionImpl@610c915f] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.SysAccountMapper.selectByPhone][debug][159]-> ==>  Preparing: select user_id ,phone,user_name,password,position, status,roles,create_time from sys_account where phone=? 
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.SysAccountMapper.selectByPhone][debug][159]-> ==> Parameters: 18688886666(String)
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.SysAccountMapper.selectByPhone][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c4dfade]
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4504267f] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1797446079 wrapping com.mysql.cj.jdbc.ConnectionImpl@610c915f] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.SysMenuMapper.selectList][debug][159]-> ==>  Preparing: SELECT menu_id ,menu_name,menu_type,menu_url,p_id, sort,permission_code,icon FROM sys_menu order by sort asc 
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.SysMenuMapper.selectList][debug][159]-> ==> Parameters: 
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.SysMenuMapper.selectList][debug][159]-> <==      Total: 46
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4504267f]
2025-03-21 15:15:12 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 15:15:12 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@71360c16]
2025-03-21 15:15:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:15:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:15:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:15:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:15:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:15:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:15:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:15:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:15:12 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 15:15:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:15:12 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/index/getContentWeekData", parameters={multipart}
2025-03-21 15:15:12 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/index/getAppWeekData", parameters={multipart}
2025-03-21 15:15:12 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/index/getAllData", parameters={multipart}
2025-03-21 15:15:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:15:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:15:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:15:12 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.IndexController#getAllData()
2025-03-21 15:15:12 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.IndexController#getAppWeekData()
2025-03-21 15:15:12 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.IndexController#getContentWeekData()
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3caf7af7] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6695b106] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@336efb15] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1864409028 wrapping com.mysql.cj.jdbc.ConnectionImpl@610c915f] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device 
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@458900811 wrapping com.mysql.cj.jdbc.ConnectionImpl@4421fc55] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@498881292 wrapping com.mysql.cj.jdbc.ConnectionImpl@15e0c60a] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@336efb15]
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5341045a] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@955547465 wrapping com.mysql.cj.jdbc.ConnectionImpl@610c915f] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5341045a]
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cb71db2] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6695b106]
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3caf7af7]
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@215729e6] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38d518fb] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@305597756 wrapping com.mysql.cj.jdbc.ConnectionImpl@15e0c60a] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@758844421 wrapping com.mysql.cj.jdbc.ConnectionImpl@4421fc55] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38d518fb]
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@215729e6]
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33072ab8] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bf25b1] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@730279207 wrapping com.mysql.cj.jdbc.ConnectionImpl@15e0c60a] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1062325393 wrapping com.mysql.cj.jdbc.ConnectionImpl@4421fc55] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33072ab8]
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c5015dd] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1417857813 wrapping com.mysql.cj.jdbc.ConnectionImpl@610c915f] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@101235717 wrapping com.mysql.cj.jdbc.ConnectionImpl@15e0c60a] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info 
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c5015dd]
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@534435d] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1268097176 wrapping com.mysql.cj.jdbc.ConnectionImpl@15e0c60a] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bf25b1]
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cb71db2]
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39e95b8f] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a1423e6] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@534435d]
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1389842865 wrapping com.mysql.cj.jdbc.ConnectionImpl@610c915f] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53c7ba9a] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1090745262 wrapping com.mysql.cj.jdbc.ConnectionImpl@4421fc55] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1486752119 wrapping com.mysql.cj.jdbc.ConnectionImpl@15e0c60a] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-14(String), 2025-03-14(String)
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a1423e6]
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10167fe8] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@331675913 wrapping com.mysql.cj.jdbc.ConnectionImpl@610c915f] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info 
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53c7ba9a]
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a1e940f] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1508633212 wrapping com.mysql.cj.jdbc.ConnectionImpl@15e0c60a] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a1e940f]
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39e95b8f]
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10167fe8]
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5469cf] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7225db81] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56618ae4] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1857815280 wrapping com.mysql.cj.jdbc.ConnectionImpl@15e0c60a] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@543529353 wrapping com.mysql.cj.jdbc.ConnectionImpl@610c915f] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@611310280 wrapping com.mysql.cj.jdbc.ConnectionImpl@4421fc55] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56618ae4]
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5469cf]
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7225db81]
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8df42b8] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c713fb8] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@423af241] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1070086120 wrapping com.mysql.cj.jdbc.ConnectionImpl@15e0c60a] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@505397332 wrapping com.mysql.cj.jdbc.ConnectionImpl@4421fc55] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1387515885 wrapping com.mysql.cj.jdbc.ConnectionImpl@610c915f] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question 
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@423af241]
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c713fb8]
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3de69352] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7713adc5] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@677103189 wrapping com.mysql.cj.jdbc.ConnectionImpl@4421fc55] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1644875872 wrapping com.mysql.cj.jdbc.ConnectionImpl@15e0c60a] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7713adc5]
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3de69352]
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@457cf85c] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bff1573] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@803936435 wrapping com.mysql.cj.jdbc.ConnectionImpl@15e0c60a] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8df42b8]
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1653241693 wrapping com.mysql.cj.jdbc.ConnectionImpl@4421fc55] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6dfa08fe] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-15(String), 2025-03-15(String)
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@524443003 wrapping com.mysql.cj.jdbc.ConnectionImpl@610c915f] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@457cf85c]
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19328d06] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bff1573]
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69bdd531] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1001273444 wrapping com.mysql.cj.jdbc.ConnectionImpl@15e0c60a] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6dfa08fe]
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1957693673 wrapping com.mysql.cj.jdbc.ConnectionImpl@4421fc55] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38d0f3f7] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@89170411 wrapping com.mysql.cj.jdbc.ConnectionImpl@610c915f] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19328d06]
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info 
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@652fddf6] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69bdd531]
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1752704744 wrapping com.mysql.cj.jdbc.ConnectionImpl@15e0c60a] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59fce54e] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1378558576 wrapping com.mysql.cj.jdbc.ConnectionImpl@4421fc55] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@652fddf6]
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52512573] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1225425570 wrapping com.mysql.cj.jdbc.ConnectionImpl@15e0c60a] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59fce54e]
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@737aaf04] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38d0f3f7]
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@98301885 wrapping com.mysql.cj.jdbc.ConnectionImpl@4421fc55] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a5a9d85] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52512573]
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1965719666 wrapping com.mysql.cj.jdbc.ConnectionImpl@610c915f] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 15:15:12 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 15:15:12 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@381f930d]
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@737aaf04]
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a5a9d85]
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51b8b01] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5940dab1] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1206440617 wrapping com.mysql.cj.jdbc.ConnectionImpl@610c915f] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1221644459 wrapping com.mysql.cj.jdbc.ConnectionImpl@4421fc55] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? 
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer)
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-16(String), 2025-03-16(String)
2025-03-21 15:15:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51b8b01]
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a63b71d] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@335113939 wrapping com.mysql.cj.jdbc.ConnectionImpl@4421fc55] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 15:15:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 15:15:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a63b71d]
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5940dab1]
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3248c5b] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a8f5c2f] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1411909757 wrapping com.mysql.cj.jdbc.ConnectionImpl@4421fc55] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@94454244 wrapping com.mysql.cj.jdbc.ConnectionImpl@610c915f] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 15:15:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-20(String), 2025-03-20(String)
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3248c5b]
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44594d14] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a8f5c2f]
2025-03-21 15:15:12 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1664632720 wrapping com.mysql.cj.jdbc.ConnectionImpl@4421fc55] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:15:12 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 15:15:12 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@ce75603]
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44594d14]
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@117ccc] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@789275301 wrapping com.mysql.cj.jdbc.ConnectionImpl@4421fc55] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 15:15:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-17(String), 2025-03-17(String)
2025-03-21 15:15:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@117ccc]
2025-03-21 15:15:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6dfa44be] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@380567102 wrapping com.mysql.cj.jdbc.ConnectionImpl@4421fc55] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 15:15:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 15:15:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6dfa44be]
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@310cec21] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@250380554 wrapping com.mysql.cj.jdbc.ConnectionImpl@4421fc55] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@310cec21]
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28115091] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2116734038 wrapping com.mysql.cj.jdbc.ConnectionImpl@4421fc55] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28115091]
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d0040d2] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1337393211 wrapping com.mysql.cj.jdbc.ConnectionImpl@4421fc55] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-18(String), 2025-03-18(String)
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d0040d2]
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@547211e3] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1281008879 wrapping com.mysql.cj.jdbc.ConnectionImpl@4421fc55] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@547211e3]
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5685e63b] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@712285792 wrapping com.mysql.cj.jdbc.ConnectionImpl@4421fc55] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5685e63b]
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2173928a] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@496072105 wrapping com.mysql.cj.jdbc.ConnectionImpl@4421fc55] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2173928a]
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c134ab] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1484264025 wrapping com.mysql.cj.jdbc.ConnectionImpl@4421fc55] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-19(String), 2025-03-19(String)
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c134ab]
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@231e374f] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@586886123 wrapping com.mysql.cj.jdbc.ConnectionImpl@4421fc55] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@231e374f]
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@644314ac] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@917893924 wrapping com.mysql.cj.jdbc.ConnectionImpl@4421fc55] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@644314ac]
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f686c47] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1139992946 wrapping com.mysql.cj.jdbc.ConnectionImpl@4421fc55] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f686c47]
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46228eab] was not registered for synchronization because synchronization is not active
2025-03-21 15:15:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@987023484 wrapping com.mysql.cj.jdbc.ConnectionImpl@4421fc55] will not be managed by Spring
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-20(String), 2025-03-20(String)
2025-03-21 15:15:12 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 15:15:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46228eab]
2025-03-21 15:15:12 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 15:15:12 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@c6be4c7]
2025-03-21 15:15:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:15:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:15:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:15:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:15:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:15:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:15:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:15:12 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 15:15:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:15:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:15:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:15:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:16:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:16:00 CST 2025
2025-03-21 15:16:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:16:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:16:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:16:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:16:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:16:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:16:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:16:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:17:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:17:00 CST 2025
2025-03-21 15:17:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:17:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:17:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:17:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:17:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:17:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:17:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:17:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:18:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:18:00 CST 2025
2025-03-21 15:18:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:18:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:18:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:18:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:18:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:18:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:18:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:18:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:19:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:19:00 CST 2025
2025-03-21 15:19:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:19:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:19:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:19:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:19:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:19:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:19:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:19:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:20:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:20:00 CST 2025
2025-03-21 15:20:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:20:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:20:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:20:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:20:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:20:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:20:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:20:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:21:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:21:00 CST 2025
2025-03-21 15:21:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:21:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:21:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:21:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:21:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:21:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:21:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:21:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:22:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:22:00 CST 2025
2025-03-21 15:22:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:22:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:22:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:22:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:22:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:22:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:22:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:22:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:23:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:23:00 CST 2025
2025-03-21 15:23:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:23:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:23:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:23:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:23:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:23:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:23:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:23:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:24:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:24:00 CST 2025
2025-03-21 15:24:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:24:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:24:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:24:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:24:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:24:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:24:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:24:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:25:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:25:00 CST 2025
2025-03-21 15:25:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:25:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:25:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:25:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:25:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:25:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:25:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:25:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:26:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:26:00 CST 2025
2025-03-21 15:26:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:26:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:26:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:26:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:26:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:26:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:26:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:26:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:27:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:27:00 CST 2025
2025-03-21 15:27:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:27:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:27:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:27:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:27:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:27:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:27:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:27:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:28:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:28:00 CST 2025
2025-03-21 15:28:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:28:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:28:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:28:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:28:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:28:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:28:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:28:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:29:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:29:00 CST 2025
2025-03-21 15:29:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:29:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:29:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:29:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:29:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:29:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:29:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:29:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:30:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:30:00 CST 2025
2025-03-21 15:30:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:30:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:30:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:30:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:30:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:30:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:30:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:30:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:31:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:31:00 CST 2025
2025-03-21 15:31:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:31:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:31:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:31:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:31:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:31:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:31:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:31:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:32:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:32:00 CST 2025
2025-03-21 15:32:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:32:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:32:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:32:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:32:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:32:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:32:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:32:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:33:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:33:00 CST 2025
2025-03-21 15:33:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:33:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:33:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:33:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:33:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:33:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:33:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:33:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:34:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:34:00 CST 2025
2025-03-21 15:34:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:34:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:34:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:34:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:34:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:34:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:34:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:34:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:35:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:35:00 CST 2025
2025-03-21 15:35:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:35:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:35:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:35:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:35:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:35:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:35:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:35:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:36:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:36:00 CST 2025
2025-03-21 15:36:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:36:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:36:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:36:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:36:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:36:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:36:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:36:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:37:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:37:00 CST 2025
2025-03-21 15:37:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:37:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:37:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:37:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:37:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:37:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:37:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:37:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:38:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:38:00 CST 2025
2025-03-21 15:38:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:38:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:38:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:38:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:38:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:38:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:38:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:38:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:39:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:39:00 CST 2025
2025-03-21 15:39:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:39:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:39:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:39:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:39:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:39:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:39:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:39:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:39:50 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@406fc4d5: (connection has passed maxLifetime)
2025-03-21 15:39:50 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@2f01153
2025-03-21 15:39:57 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@4421fc55: (connection has passed maxLifetime)
2025-03-21 15:39:57 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@30b51382
2025-03-21 15:40:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:40:00 CST 2025
2025-03-21 15:40:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:40:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:40:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:40:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:40:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:40:21 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@15e0c60a: (connection has passed maxLifetime)
2025-03-21 15:40:21 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@5dbe416c
2025-03-21 15:40:32 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2d1d659: (connection has passed maxLifetime)
2025-03-21 15:40:32 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@41e695f6
2025-03-21 15:40:33 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@610c915f: (connection has passed maxLifetime)
2025-03-21 15:40:33 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@db9fcd
2025-03-21 15:40:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:40:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:40:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:41:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:41:00 CST 2025
2025-03-21 15:41:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:41:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:41:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:41:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:41:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:41:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:41:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:41:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:42:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:42:00 CST 2025
2025-03-21 15:42:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:42:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:42:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:42:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:42:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:42:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:42:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:42:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:43:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:43:00 CST 2025
2025-03-21 15:43:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:43:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:43:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:43:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:43:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:43:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:43:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:43:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:44:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:44:00 CST 2025
2025-03-21 15:44:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:44:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:44:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:44:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:44:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:44:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:44:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:44:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:45:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:45:00 CST 2025
2025-03-21 15:45:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:45:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:45:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:45:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:45:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:45:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:45:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:45:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:46:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:46:00 CST 2025
2025-03-21 15:46:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:46:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:46:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:46:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:46:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:46:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:46:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:46:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:47:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:47:00 CST 2025
2025-03-21 15:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:47:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:47:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:47:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:47:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:47:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:47:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:48:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:48:00 CST 2025
2025-03-21 15:48:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:48:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:48:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:48:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:48:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:48:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:48:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:48:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:49:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:49:00 CST 2025
2025-03-21 15:49:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:49:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:49:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:49:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:49:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:49:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:49:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:49:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:50:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:50:00 CST 2025
2025-03-21 15:50:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:50:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:50:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:50:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:50:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:50:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:50:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:50:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:51:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:51:00 CST 2025
2025-03-21 15:51:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:51:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:51:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:51:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:51:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:51:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:51:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:51:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:52:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:52:00 CST 2025
2025-03-21 15:52:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:52:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:52:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:52:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:52:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:52:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:52:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:52:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:53:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:53:00 CST 2025
2025-03-21 15:53:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:53:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:53:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:53:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:53:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:53:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:53:25 [DEBUG][org.springframework.session.data.redis.RedisIndexedSessionRepository][onMessage][552]-> Publishing SessionDestroyedEvent for session 0b01cd5a-8a2e-4529-b6f2-6b92a2ba5df1
2025-03-21 15:53:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:53:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:53:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:54:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:54:00 CST 2025
2025-03-21 15:54:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:54:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:54:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:54:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:54:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:54:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:54:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:54:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:54:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:55:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:55:00 CST 2025
2025-03-21 15:55:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:55:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:55:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:55:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:55:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:55:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:55:12 [DEBUG][org.springframework.session.data.redis.RedisIndexedSessionRepository][onMessage][552]-> Publishing SessionDestroyedEvent for session ed0be1a7-6840-437e-9166-8d41a675355e
2025-03-21 15:55:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:55:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:55:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:56:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:56:00 CST 2025
2025-03-21 15:56:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:56:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:56:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=EXISTS, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:56:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:56:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:56:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:56:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:56:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:56:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:57:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:57:00 CST 2025
2025-03-21 15:57:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:57:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:57:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:57:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:57:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:57:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:57:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:57:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:58:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:58:00 CST 2025
2025-03-21 15:58:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:58:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:58:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:58:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:58:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:58:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:58:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:58:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:59:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 15:59:00 CST 2025
2025-03-21 15:59:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:59:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 15:59:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:59:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:59:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 15:59:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:59:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 15:59:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 16:00:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 16:00:00 CST 2025
2025-03-21 16:00:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:00:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:00:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:00:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:00:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 16:00:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:00:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:00:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 16:01:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 16:01:00 CST 2025
2025-03-21 16:01:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:01:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:01:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:01:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:01:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 16:01:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:01:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:01:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 16:02:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 16:02:00 CST 2025
2025-03-21 16:02:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:02:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:02:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:02:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:02:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 16:02:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:02:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:02:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 16:03:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 16:03:00 CST 2025
2025-03-21 16:03:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:03:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:03:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:03:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:03:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 16:03:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:03:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:03:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 16:04:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 16:04:00 CST 2025
2025-03-21 16:04:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:04:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:04:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:04:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:04:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 16:04:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:04:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:04:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 16:05:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 16:05:00 CST 2025
2025-03-21 16:05:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:05:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:05:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:05:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:05:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 16:05:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:05:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:05:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 16:06:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 16:06:00 CST 2025
2025-03-21 16:06:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:06:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:06:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:06:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:06:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 16:06:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:06:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:06:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 16:07:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 16:07:00 CST 2025
2025-03-21 16:07:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:07:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:07:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:07:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:07:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 16:07:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:07:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:07:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 16:08:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 16:08:00 CST 2025
2025-03-21 16:08:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:08:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:08:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:08:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:08:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 16:08:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:08:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:08:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 16:09:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 16:09:00 CST 2025
2025-03-21 16:09:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:02 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/appUser/loadDeviceList", parameters={multipart}
2025-03-21 16:09:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:02 [DEBUG][org.springframework.session.web.http.SessionRepositoryFilter.SESSION_LOGGER][getSession][305]-> No session found by id: Caching result for getSession(false) for this HttpServletRequest.
2025-03-21 16:09:02 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.AppUserInfoController#loadDeviceList(AppDeviceQuery)
2025-03-21 16:09:02 [DEBUG][org.springframework.session.web.http.SessionRepositoryFilter.SESSION_LOGGER][getSession][305]-> No session found by id: Caching result for getSession(false) for this HttpServletRequest.
2025-03-21 16:09:02 [DEBUG][org.springframework.session.web.http.SessionRepositoryFilter.SESSION_LOGGER][getSession][318]-> A new session was created. To help you troubleshoot where the session was created we provided a StackTrace (this is not an error). You can prevent this from appearing by disabling DEBUG logging for org.springframework.session.web.http.SessionRepositoryFilter.SESSION_LOGGER
java.lang.RuntimeException: For debugging purposes only (not an error)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:320)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:332)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:193)
	at com.easyjob.aspect.OperationAspect.checkLogin(OperationAspect.java:78)
	at com.easyjob.aspect.OperationAspect.interceptorDo(OperationAspect.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:617)
	at org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:44)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.easyjob.controller.AppUserInfoController$$EnhancerBySpringCGLIB$$4e6dfa60.loadDeviceList(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:142)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2025-03-21 16:09:02 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver][doResolveHandlerMethodException][416]-> Using @ExceptionHandler com.easyjob.controller.AGlobalExceptionHandlerController#handleException(Exception, HttpServletRequest)
2025-03-21 16:09:02 [ERROR][com.easyjob.controller.AGlobalExceptionHandlerController][handleException][25]-> 请求错误，请求地址http://localhost:9091/api/appUser/loadDeviceList,错误信息:
com.easyjob.exception.BusinessException: 登录超时
2025-03-21 16:09:02 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 16:09:02 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@bcce126]
2025-03-21 16:09:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PUBLISH, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:02 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver][resolveException][146]-> Resolved [com.easyjob.exception.BusinessException: 登录超时]
2025-03-21 16:09:02 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 16:09:04 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> GET "/api/checkCode?time=1742544544251", parameters={masked}
2025-03-21 16:09:04 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:04 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.LoginController#checkCode(HttpServletResponse, HttpSession)
2025-03-21 16:09:04 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:04 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:04 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:04 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:04 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:04 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:04 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:04 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 16:09:04 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:09:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:09:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 16:09:18 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2f01153: (connection has passed maxLifetime)
2025-03-21 16:09:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@6358c10
2025-03-21 16:09:21 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/login", parameters={multipart}
2025-03-21 16:09:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:21 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.LoginController#login(HttpSession, String, String, String)
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bbc5037] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1593112830 wrapping com.mysql.cj.jdbc.ConnectionImpl@30b51382] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.SysAccountMapper.selectByPhone][debug][159]-> ==>  Preparing: select user_id ,phone,user_name,password,position, status,roles,create_time from sys_account where phone=? 
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.SysAccountMapper.selectByPhone][debug][159]-> ==> Parameters: 18688886666(String)
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.SysAccountMapper.selectByPhone][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bbc5037]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e7ac20e] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@430110473 wrapping com.mysql.cj.jdbc.ConnectionImpl@30b51382] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.SysMenuMapper.selectList][debug][159]-> ==>  Preparing: SELECT menu_id ,menu_name,menu_type,menu_url,p_id, sort,permission_code,icon FROM sys_menu order by sort asc 
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.SysMenuMapper.selectList][debug][159]-> ==> Parameters: 
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.SysMenuMapper.selectList][debug][159]-> <==      Total: 46
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e7ac20e]
2025-03-21 16:09:21 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 16:09:21 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@77881fd9]
2025-03-21 16:09:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:21 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 16:09:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:21 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/index/getContentWeekData", parameters={multipart}
2025-03-21 16:09:21 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/index/getAppWeekData", parameters={multipart}
2025-03-21 16:09:21 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/index/getAllData", parameters={multipart}
2025-03-21 16:09:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:21 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.IndexController#getContentWeekData()
2025-03-21 16:09:21 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.IndexController#getAllData()
2025-03-21 16:09:21 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.IndexController#getAppWeekData()
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32d3791e] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69f288dd] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d6ee90d] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1561897936 wrapping com.mysql.cj.jdbc.ConnectionImpl@30b51382] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device 
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1296618936 wrapping com.mysql.cj.jdbc.ConnectionImpl@41e695f6] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1184055825 wrapping com.mysql.cj.jdbc.ConnectionImpl@5dbe416c] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d6ee90d]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a69d4e7] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@5595174 wrapping com.mysql.cj.jdbc.ConnectionImpl@30b51382] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a69d4e7]
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32d3791e]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7280bee3] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69f288dd]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f23acf7] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@369da76c] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@647664312 wrapping com.mysql.cj.jdbc.ConnectionImpl@30b51382] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info 
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2018260320 wrapping com.mysql.cj.jdbc.ConnectionImpl@41e695f6] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1303055488 wrapping com.mysql.cj.jdbc.ConnectionImpl@5dbe416c] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7280bee3]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4dc0d3d3] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@985664302 wrapping com.mysql.cj.jdbc.ConnectionImpl@30b51382] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4dc0d3d3]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69e9c7fc] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f23acf7]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@125918f1] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@369da76c]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@586993497 wrapping com.mysql.cj.jdbc.ConnectionImpl@30b51382] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info 
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@778d0798] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1087330905 wrapping com.mysql.cj.jdbc.ConnectionImpl@41e695f6] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@753952962 wrapping com.mysql.cj.jdbc.ConnectionImpl@5dbe416c] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@778d0798]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a0a8627] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@363127097 wrapping com.mysql.cj.jdbc.ConnectionImpl@5dbe416c] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a0a8627]
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@560d489e] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69e9c7fc]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3accaa75] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@149477318 wrapping com.mysql.cj.jdbc.ConnectionImpl@5dbe416c] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@125918f1]
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c20151d] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@498949367 wrapping com.mysql.cj.jdbc.ConnectionImpl@30b51382] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1726225656 wrapping com.mysql.cj.jdbc.ConnectionImpl@41e695f6] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-14(String), 2025-03-14(String)
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@560d489e]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69701427] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3accaa75]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@388be1c3] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1434843183 wrapping com.mysql.cj.jdbc.ConnectionImpl@5dbe416c] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1732996005 wrapping com.mysql.cj.jdbc.ConnectionImpl@30b51382] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question 
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69701427]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bfc2b0c] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1917113720 wrapping com.mysql.cj.jdbc.ConnectionImpl@5dbe416c] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c20151d]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9270d4a] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@898857358 wrapping com.mysql.cj.jdbc.ConnectionImpl@41e695f6] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bfc2b0c]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@790b2d9d] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@388be1c3]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@55959035 wrapping com.mysql.cj.jdbc.ConnectionImpl@5dbe416c] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@374eea73] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9270d4a]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33aa756a] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1345093792 wrapping com.mysql.cj.jdbc.ConnectionImpl@30b51382] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@47604488 wrapping com.mysql.cj.jdbc.ConnectionImpl@41e695f6] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@790b2d9d]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@fb04c79] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@374eea73]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a0cdfbd] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33aa756a]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a379629] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@181516797 wrapping com.mysql.cj.jdbc.ConnectionImpl@30b51382] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info 
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1162496994 wrapping com.mysql.cj.jdbc.ConnectionImpl@5dbe416c] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@173457184 wrapping com.mysql.cj.jdbc.ConnectionImpl@41e695f6] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@fb04c79]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a379629]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@592091d1] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e35506c] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2019888477 wrapping com.mysql.cj.jdbc.ConnectionImpl@41e695f6] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-15(String), 2025-03-15(String)
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e35506c]
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1430603346 wrapping com.mysql.cj.jdbc.ConnectionImpl@5dbe416c] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a0cdfbd]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3637e23a] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@646aadda] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@839217824 wrapping com.mysql.cj.jdbc.ConnectionImpl@41e695f6] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1219979229 wrapping com.mysql.cj.jdbc.ConnectionImpl@30b51382] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@592091d1]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32bebcef] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@646aadda]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3637e23a]
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@588444089 wrapping com.mysql.cj.jdbc.ConnectionImpl@5dbe416c] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11b0d12c] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d5693bf] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@545635005 wrapping com.mysql.cj.jdbc.ConnectionImpl@30b51382] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@75073053 wrapping com.mysql.cj.jdbc.ConnectionImpl@41e695f6] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? 
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer)
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32bebcef]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5519f71c] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d5693bf]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2bee11f8] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@640468052 wrapping com.mysql.cj.jdbc.ConnectionImpl@5dbe416c] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@312259665 wrapping com.mysql.cj.jdbc.ConnectionImpl@41e695f6] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5519f71c]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2bee11f8]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44513c16] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32a1776a] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@527144117 wrapping com.mysql.cj.jdbc.ConnectionImpl@41e695f6] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@462107258 wrapping com.mysql.cj.jdbc.ConnectionImpl@5dbe416c] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11b0d12c]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-16(String), 2025-03-16(String)
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d641efe] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2051709903 wrapping com.mysql.cj.jdbc.ConnectionImpl@30b51382] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44513c16]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32a1776a]
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-20(String), 2025-03-20(String)
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25022de5] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e828749] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d641efe]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@327069955 wrapping com.mysql.cj.jdbc.ConnectionImpl@41e695f6] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@480318472 wrapping com.mysql.cj.jdbc.ConnectionImpl@5dbe416c] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 16:09:21 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 16:09:21 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@59816034]
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25022de5]
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e828749]
2025-03-21 16:09:21 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@2f967963]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c847df3] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1719013349 wrapping com.mysql.cj.jdbc.ConnectionImpl@41e695f6] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 16:09:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 16:09:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c847df3]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a505901] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1161088605 wrapping com.mysql.cj.jdbc.ConnectionImpl@41e695f6] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 16:09:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 16:09:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a505901]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 16:09:21 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21db2c91] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1762390522 wrapping com.mysql.cj.jdbc.ConnectionImpl@41e695f6] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-17(String), 2025-03-17(String)
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21db2c91]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@464887ec] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@633130188 wrapping com.mysql.cj.jdbc.ConnectionImpl@41e695f6] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@464887ec]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ed7297a] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1976076096 wrapping com.mysql.cj.jdbc.ConnectionImpl@41e695f6] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ed7297a]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d2344de] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1446594048 wrapping com.mysql.cj.jdbc.ConnectionImpl@41e695f6] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d2344de]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@251b205c] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2015074680 wrapping com.mysql.cj.jdbc.ConnectionImpl@41e695f6] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-18(String), 2025-03-18(String)
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@251b205c]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10a8952b] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@886836767 wrapping com.mysql.cj.jdbc.ConnectionImpl@41e695f6] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10a8952b]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7de30820] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@691460986 wrapping com.mysql.cj.jdbc.ConnectionImpl@41e695f6] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7de30820]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53cca7e] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1618698481 wrapping com.mysql.cj.jdbc.ConnectionImpl@41e695f6] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53cca7e]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76ebd2f7] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@359111022 wrapping com.mysql.cj.jdbc.ConnectionImpl@41e695f6] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-19(String), 2025-03-19(String)
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76ebd2f7]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1dce3572] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@890904662 wrapping com.mysql.cj.jdbc.ConnectionImpl@41e695f6] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1dce3572]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32efe9ed] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1592147815 wrapping com.mysql.cj.jdbc.ConnectionImpl@41e695f6] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32efe9ed]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5df95cbf] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@278161004 wrapping com.mysql.cj.jdbc.ConnectionImpl@41e695f6] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5df95cbf]
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10f0dccb] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@133920462 wrapping com.mysql.cj.jdbc.ConnectionImpl@41e695f6] will not be managed by Spring
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-20(String), 2025-03-20(String)
2025-03-21 16:09:21 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10f0dccb]
2025-03-21 16:09:21 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 16:09:21 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@78b5d956]
2025-03-21 16:09:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:21 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 16:09:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:23 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/appUser/loadDeviceList", parameters={multipart}
2025-03-21 16:09:23 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:23 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.AppUserInfoController#loadDeviceList(AppDeviceQuery)
2025-03-21 16:09:23 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:23 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b4918b0] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:23 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:23 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@112381731 wrapping com.mysql.cj.jdbc.ConnectionImpl@30b51382] will not be managed by Spring
2025-03-21 16:09:23 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device 
2025-03-21 16:09:23 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 16:09:23 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 16:09:23 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b4918b0]
2025-03-21 16:09:23 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:23 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@353c365c] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:23 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:23 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1850448944 wrapping com.mysql.cj.jdbc.ConnectionImpl@30b51382] will not be managed by Spring
2025-03-21 16:09:23 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectList][debug][159]-> ==>  Preparing: SELECT device_id,device_brand,create_time,last_use_time,ip FROM app_device order by create_time desc limit ?,? 
2025-03-21 16:09:23 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectList][debug][159]-> ==> Parameters: 0(Integer), 15(Integer)
2025-03-21 16:09:23 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectList][debug][159]-> <==      Total: 3
2025-03-21 16:09:23 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@353c365c]
2025-03-21 16:09:23 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 16:09:23 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@65589335]
2025-03-21 16:09:23 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:23 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:23 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:23 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:23 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:23 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:23 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:23 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 16:09:23 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:32 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@30b51382: (connection has passed maxLifetime)
2025-03-21 16:09:32 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@79fcb69d
2025-03-21 16:09:33 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/appCarousel/loadDataList", parameters={multipart}
2025-03-21 16:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:33 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.AppCarouselController#loadDataList(AppCarouselQuery)
2025-03-21 16:09:33 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 16:09:33 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7714edc9] was not registered for synchronization because synchronization is not active
2025-03-21 16:09:33 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 16:09:33 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@275413243 wrapping com.mysql.cj.jdbc.ConnectionImpl@5dbe416c] will not be managed by Spring
2025-03-21 16:09:33 [DEBUG][com.easyjob.mappers.AppCarouselMapper.selectList][debug][159]-> ==>  Preparing: SELECT carousel_id,img_path,object_type,object_id,outer_link, sort FROM app_carousel order by sort asc 
2025-03-21 16:09:33 [DEBUG][com.easyjob.mappers.AppCarouselMapper.selectList][debug][159]-> ==> Parameters: 
2025-03-21 16:09:33 [DEBUG][com.easyjob.mappers.AppCarouselMapper.selectList][debug][159]-> <==      Total: 4
2025-03-21 16:09:33 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7714edc9]
2025-03-21 16:09:33 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 16:09:33 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@282ba9b9]
2025-03-21 16:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:33 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 16:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:33 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> GET "/api/file/getImage/202309/TRMK7Y7URTPrJPW2rrKqmlu3Dpo0IU.jpg", parameters={}
2025-03-21 16:09:33 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> GET "/api/file/getImage/202309/JAu3kwLqpB2viRFrOZ8mJnMvg2yCs7.jpg", parameters={}
2025-03-21 16:09:33 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> GET "/api/file/getImage/202309/Q9jCE4By6GJmssMxQIKS7l9ihbgJSj.jpg", parameters={}
2025-03-21 16:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:33 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> GET "/api/file/getImage/202309/AyNtnobWMx8MfyzHLF0KCid8XZB3YB.jpg", parameters={}
2025-03-21 16:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:33 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.FileController#getImage(HttpServletResponse, String, String)
2025-03-21 16:09:33 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.FileController#getImage(HttpServletResponse, String, String)
2025-03-21 16:09:33 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.FileController#getImage(HttpServletResponse, String, String)
2025-03-21 16:09:33 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.FileController#getImage(HttpServletResponse, String, String)
2025-03-21 16:09:33 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 16:09:33 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 16:09:33 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 16:09:33 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 16:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:09:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:09:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:09:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 16:09:49 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@5dbe416c: (connection has passed maxLifetime)
2025-03-21 16:09:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@2ca8af4c
2025-03-21 16:10:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 16:10:00 CST 2025
2025-03-21 16:10:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:10:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:10:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:10:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:10:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 16:10:07 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@41e695f6: (connection has passed maxLifetime)
2025-03-21 16:10:07 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@410af0d9
2025-03-21 16:10:25 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@db9fcd: (connection has passed maxLifetime)
2025-03-21 16:10:25 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@453bf5f7
2025-03-21 16:10:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:10:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:10:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 16:11:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 16:11:00 CST 2025
2025-03-21 16:11:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:11:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:11:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:11:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:11:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 16:11:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:11:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:11:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 16:12:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 16:12:00 CST 2025
2025-03-21 16:12:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:12:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:12:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:12:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:12:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 16:12:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:12:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:12:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 16:13:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 16:13:00 CST 2025
2025-03-21 16:13:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:13:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:13:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:13:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:13:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 16:13:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:13:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:13:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 16:14:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 16:14:00 CST 2025
2025-03-21 16:14:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:14:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:14:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:14:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:14:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 16:14:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:14:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:14:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 16:15:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 16:15:00 CST 2025
2025-03-21 16:15:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:15:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:15:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:15:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:15:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 16:15:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:15:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:15:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 16:16:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 16:16:00 CST 2025
2025-03-21 16:16:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:16:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:16:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:16:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:16:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 16:16:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:16:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:16:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 16:17:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 16:17:00 CST 2025
2025-03-21 16:17:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:17:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 16:17:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:17:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:17:04 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 16:17:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:17:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 16:17:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 17:40:45 [INFO][com.easyjob.EasyjobAdminApplication][logStarting][55]-> Starting EasyjobAdminApplication using Java 1.8.0_351 on DESKTOP-KCPGUDB with PID 1808 (C:\easyjob\easyjob-java\easyjob-admin\target\classes started by HM in C:\easyjob\easyjob-java)
2025-03-21 17:40:45 [DEBUG][com.easyjob.EasyjobAdminApplication][logStarting][56]-> Running with Spring Boot v2.7.13, Spring v5.3.28
2025-03-21 17:40:45 [INFO][com.easyjob.EasyjobAdminApplication][logStartupProfileInfo][631]-> No active profile set, falling back to 1 default profile: "default"
2025-03-21 17:40:45 [DEBUG][org.springframework.boot.SpringApplication][load][664]-> Loading source class com.easyjob.EasyjobAdminApplication
2025-03-21 17:40:45 [DEBUG][org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext][prepareRefresh][629]-> Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ea6147e
2025-03-21 17:40:45 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2025-03-21 17:40:45 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
2025-03-21 17:40:45 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\InitRun.class]
2025-03-21 17:40:45 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\aspect\OperationAspect.class]
2025-03-21 17:40:45 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\controller\AGlobalExceptionHandlerController.class]
2025-03-21 17:40:45 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\controller\AppCarouselController.class]
2025-03-21 17:40:45 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\controller\AppFeedbackController.class]
2025-03-21 17:40:45 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\controller\AppUpdateController.class]
2025-03-21 17:40:45 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\controller\AppUserInfoController.class]
2025-03-21 17:40:45 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\controller\CategoryController.class]
2025-03-21 17:40:45 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\controller\ExamQuestionController.class]
2025-03-21 17:40:45 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\controller\FileController.class]
2025-03-21 17:40:45 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\controller\IndexController.class]
2025-03-21 17:40:45 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\controller\LoginController.class]
2025-03-21 17:40:45 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\controller\QuestionInfoController.class]
2025-03-21 17:40:45 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\controller\ShareInfoController.class]
2025-03-21 17:40:45 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\controller\SysAccountController.class]
2025-03-21 17:40:45 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\controller\SysMenuController.class]
2025-03-21 17:40:45 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-admin\target\classes\com\easyjob\controller\SysRoleController.class]
2025-03-21 17:40:45 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\component\RedisConfig.class]
2025-03-21 17:40:45 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\component\RedisUtils.class]
2025-03-21 17:40:45 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\entity\config\AppConfig.class]
2025-03-21 17:40:45 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\AppCarouselServiceImpl.class]
2025-03-21 17:40:45 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\AppDeviceServiceImpl.class]
2025-03-21 17:40:45 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\AppExamQuestionServiceImpl.class]
2025-03-21 17:40:45 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\AppExamServiceImpl.class]
2025-03-21 17:40:45 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\AppFeedbackServiceImpl.class]
2025-03-21 17:40:45 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\AppUpdateServiceImpl.class]
2025-03-21 17:40:45 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\AppUserCollectServiceImpl.class]
2025-03-21 17:40:45 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\AppUserInfoServiceImpl.class]
2025-03-21 17:40:45 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\CategoryServiceImpl.class]
2025-03-21 17:40:45 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\ExamQuestionItemServiceImpl.class]
2025-03-21 17:40:45 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\ExamQuestionServiceImpl.class]
2025-03-21 17:40:45 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\QuestionInfoServiceImpl.class]
2025-03-21 17:40:45 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\ShareInfoServiceImpl.class]
2025-03-21 17:40:45 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\StatisticsDataServiceImpl.class]
2025-03-21 17:40:45 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\SysAccountServiceImpl.class]
2025-03-21 17:40:45 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\SysMenuServiceImpl.class]
2025-03-21 17:40:45 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\SysRole2MenuServiceImpl.class]
2025-03-21 17:40:45 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\service\impl\SysRoleServiceImpl.class]
2025-03-21 17:40:45 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\utils\JWTUtil.class]
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\ACommonMapper.class]
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\AppCarouselMapper.class]
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\AppDeviceMapper.class]
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\AppExamMapper.class]
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\AppExamQuestionMapper.class]
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\AppFeedbackMapper.class]
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\AppUpdateMapper.class]
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\AppUserCollectMapper.class]
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\AppUserInfoMapper.class]
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\BaseMapper.class]
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\CategoryMapper.class]
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\ExamQuestionItemMapper.class]
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\ExamQuestionMapper.class]
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\QuestionInfoMapper.class]
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\ShareInfoMapper.class]
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\SysAccountMapper.class]
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\SysMenuMapper.class]
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\SysRole2MenuMapper.class]
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [C:\easyjob\easyjob-java\easyjob-common\target\classes\com\easyjob\mappers\SysRoleMapper.class]
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'ACommonMapper' and 'com.easyjob.mappers.ACommonMapper' mapperInterface
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'ACommonMapper'.
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'appCarouselMapper' and 'com.easyjob.mappers.AppCarouselMapper' mapperInterface
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'appCarouselMapper'.
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'appDeviceMapper' and 'com.easyjob.mappers.AppDeviceMapper' mapperInterface
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'appDeviceMapper'.
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'appExamMapper' and 'com.easyjob.mappers.AppExamMapper' mapperInterface
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'appExamMapper'.
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'appExamQuestionMapper' and 'com.easyjob.mappers.AppExamQuestionMapper' mapperInterface
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'appExamQuestionMapper'.
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'appFeedbackMapper' and 'com.easyjob.mappers.AppFeedbackMapper' mapperInterface
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'appFeedbackMapper'.
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'appUpdateMapper' and 'com.easyjob.mappers.AppUpdateMapper' mapperInterface
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'appUpdateMapper'.
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'appUserCollectMapper' and 'com.easyjob.mappers.AppUserCollectMapper' mapperInterface
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'appUserCollectMapper'.
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'appUserInfoMapper' and 'com.easyjob.mappers.AppUserInfoMapper' mapperInterface
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'appUserInfoMapper'.
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'baseMapper' and 'com.easyjob.mappers.BaseMapper' mapperInterface
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'baseMapper'.
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'categoryMapper' and 'com.easyjob.mappers.CategoryMapper' mapperInterface
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'categoryMapper'.
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'examQuestionItemMapper' and 'com.easyjob.mappers.ExamQuestionItemMapper' mapperInterface
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'examQuestionItemMapper'.
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'examQuestionMapper' and 'com.easyjob.mappers.ExamQuestionMapper' mapperInterface
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'examQuestionMapper'.
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'questionInfoMapper' and 'com.easyjob.mappers.QuestionInfoMapper' mapperInterface
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'questionInfoMapper'.
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'shareInfoMapper' and 'com.easyjob.mappers.ShareInfoMapper' mapperInterface
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'shareInfoMapper'.
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'sysAccountMapper' and 'com.easyjob.mappers.SysAccountMapper' mapperInterface
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'sysAccountMapper'.
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'sysMenuMapper' and 'com.easyjob.mappers.SysMenuMapper' mapperInterface
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'sysMenuMapper'.
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'sysRole2MenuMapper' and 'com.easyjob.mappers.SysRole2MenuMapper' mapperInterface
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'sysRole2MenuMapper'.
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'sysRoleMapper' and 'com.easyjob.mappers.SysRoleMapper' mapperInterface
2025-03-21 17:40:45 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'sysRoleMapper'.
2025-03-21 17:40:45 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][multipleStoresDetected][262]-> Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-21 17:40:45 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][132]-> Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-21 17:40:45 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
2025-03-21 17:40:45 [DEBUG][org.springframework.boot.autoconfigure.AutoConfigurationPackages][get][196]-> @EnableAutoConfiguration was declared on a class in the package 'com.easyjob'. Automatic @Repository and @Entity scanning is enabled.
2025-03-21 17:40:45 [DEBUG][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][145]-> Scanning for Redis repositories in packages com.easyjob.
2025-03-21 17:40:45 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][201]-> Finished Spring Data repository scanning in 34 ms. Found 0 Redis repository interfaces.
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinderFactory'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.scheduling.annotation.SchedulingConfiguration'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.scheduling.annotation.ProxyAsyncConfiguration'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'persistenceExceptionTranslationPostProcessor'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'persistenceExceptionTranslationPostProcessor' via factory method to bean named 'environment'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'projectingArgumentResolverBeanPostProcessor'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
2025-03-21 17:40:46 [DEBUG][org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory][getAdvice][258]-> Found AspectJ method: public void com.easyjob.aspect.OperationAspect.interceptorDo(org.aspectj.lang.JoinPoint)
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'transactionAttributeSource'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'transactionInterceptor'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'
2025-03-21 17:40:46 [DEBUG][org.springframework.ui.context.support.UiApplicationContextUtils][initThemeSource][85]-> Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@2227a6c1]
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'tomcatServletWebServerFactory'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'websocketServletWebServerCustomizer'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'localeCharsetMappingsCustomizer'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'errorPageCustomizer'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'dispatcherServletRegistration'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'dispatcherServlet'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'multipartConfigElement'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration'
2025-03-21 17:40:46 [DEBUG][org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory][getArchiveFileDocumentRoot][81]-> Code archive: C:\repo\org\springframework\boot\spring-boot\2.7.13\spring-boot-2.7.13.jar
2025-03-21 17:40:46 [DEBUG][org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory][getExplodedWarFileDocumentRoot][125]-> Code archive: C:\repo\org\springframework\boot\spring-boot\2.7.13\spring-boot-2.7.13.jar
2025-03-21 17:40:46 [DEBUG][org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory][logNoDocumentRoots][149]-> None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2025-03-21 17:40:46 [INFO][org.springframework.boot.web.embedded.tomcat.TomcatWebServer][initialize][108]-> Tomcat initialized with port(s): 9091 (http)
2025-03-21 17:40:46 [INFO][org.apache.coyote.http11.Http11NioProtocol][log][173]-> Initializing ProtocolHandler ["http-nio-9091"]
2025-03-21 17:40:46 [INFO][org.apache.catalina.core.StandardService][log][173]-> Starting service [Tomcat]
2025-03-21 17:40:46 [INFO][org.apache.catalina.core.StandardEngine][log][173]-> Starting Servlet engine: [Apache Tomcat/9.0.76]
2025-03-21 17:40:46 [INFO][org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/api]][log][173]-> Initializing Spring embedded WebApplicationContext
2025-03-21 17:40:46 [DEBUG][org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext][prepareWebApplicationContext][286]-> Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2025-03-21 17:40:46 [INFO][org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext][prepareWebApplicationContext][292]-> Root WebApplicationContext: initialization completed in 1459 ms
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sessionRepositoryFilterRegistration'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.session.SessionRepositoryFilterConfiguration'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.session-org.springframework.boot.autoconfigure.session.SessionProperties'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'sessionRepositoryFilterRegistration' via factory method to bean named 'spring.session-org.springframework.boot.autoconfigure.session.SessionProperties'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'sessionRepositoryFilterRegistration' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@147e2ae7'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'requestContextFilter'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'formContentFilter'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'characterEncodingFilter'
2025-03-21 17:40:46 [DEBUG][org.springframework.boot.web.servlet.ServletContextInitializerBeans][logMappings][237]-> Mapping filters: springSessionRepositoryFilter urls=[/*] order=-2147483598, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
2025-03-21 17:40:46 [DEBUG][org.springframework.boot.web.servlet.ServletContextInitializerBeans][logMappings][237]-> Mapping servlets: dispatcherServlet urls=[/]
2025-03-21 17:40:46 [DEBUG][org.springframework.boot.web.servlet.filter.OrderedRequestContextFilter][init][242]-> Filter 'requestContextFilter' configured for use
2025-03-21 17:40:46 [DEBUG][org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean$1][init][242]-> Filter 'springSessionRepositoryFilter' configured for use
2025-03-21 17:40:46 [DEBUG][org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter][init][242]-> Filter 'characterEncodingFilter' configured for use
2025-03-21 17:40:46 [DEBUG][org.springframework.boot.web.servlet.filter.OrderedFormContentFilter][init][242]-> Filter 'formContentFilter' configured for use
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'easyjobAdminApplication'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'initRun'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'dataSource'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dataSource' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
2025-03-21 17:40:46 [DEBUG][com.zaxxer.hikari.HikariConfig][attemptFromContextLoader][971]-> Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader sun.misc.Launcher$AppClassLoader@18b4aac2
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisUtils'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisTemplate'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisConfig'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisConnectionFactory'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration' via constructor to bean named 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'lettuceClientResources'
2025-03-21 17:40:46 [DEBUG][io.netty.util.internal.logging.InternalLoggerFactory][useSlf4JLoggerFactory][63]-> Using SLF4J as the default logging framework
2025-03-21 17:40:46 [DEBUG][io.lettuce.core.resource.AddressResolverGroupProvider][<clinit>][37]-> Starting without optional netty's non-blocking DNS resolver library
2025-03-21 17:40:46 [DEBUG][io.lettuce.core.resource.DefaultClientResources][<clinit>][122]-> -Dio.netty.eventLoopThreads: 16
2025-03-21 17:40:46 [DEBUG][io.lettuce.core.resource.DefaultEventLoopGroupProvider][createEventLoopGroup][231]-> Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
2025-03-21 17:40:46 [DEBUG][io.netty.util.concurrent.GlobalEventExecutor][<clinit>][53]-> -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2025-03-21 17:40:46 [DEBUG][io.netty.util.internal.InternalThreadLocalMap][<clinit>][100]-> -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2025-03-21 17:40:46 [DEBUG][io.netty.util.internal.InternalThreadLocalMap][<clinit>][101]-> -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2025-03-21 17:40:46 [DEBUG][io.netty.util.ResourceLeakDetector][<clinit>][129]-> -Dio.netty.leakDetection.level: simple
2025-03-21 17:40:46 [DEBUG][io.netty.util.ResourceLeakDetector][<clinit>][130]-> -Dio.netty.leakDetection.targetRecords: 4
2025-03-21 17:40:46 [DEBUG][io.netty.util.ResourceLeakDetectorFactory][newResourceLeakDetector][196]-> Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@cf67838
2025-03-21 17:40:46 [DEBUG][io.netty.util.internal.PlatformDependent0][explicitNoUnsafeCause0][497]-> -Dio.netty.noUnsafe: false
2025-03-21 17:40:46 [DEBUG][io.netty.util.internal.PlatformDependent0][javaVersion0][1001]-> Java version: 8
2025-03-21 17:40:46 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][137]-> sun.misc.Unsafe.theUnsafe: available
2025-03-21 17:40:46 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][161]-> sun.misc.Unsafe.copyMemory: available
2025-03-21 17:40:46 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][193]-> sun.misc.Unsafe.storeFence: available
2025-03-21 17:40:46 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][236]-> java.nio.Buffer.address: available
2025-03-21 17:40:46 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][308]-> direct buffer constructor: available
2025-03-21 17:40:46 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][386]-> java.nio.Bits.unaligned: available, true
2025-03-21 17:40:46 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][460]-> jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2025-03-21 17:40:46 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][483]-> java.nio.DirectByteBuffer.<init>(long, {int,long}): available
2025-03-21 17:40:46 [DEBUG][io.netty.util.internal.PlatformDependent][unsafeUnavailabilityCause0][1159]-> sun.misc.Unsafe: available
2025-03-21 17:40:46 [DEBUG][io.netty.util.internal.PlatformDependent][tmpdir0][1289]-> -Dio.netty.tmpdir: C:\Users\HM\AppData\Local\Temp (java.io.tmpdir)
2025-03-21 17:40:46 [DEBUG][io.netty.util.internal.PlatformDependent][bitMode0][1368]-> -Dio.netty.bitMode: 64 (sun.arch.data.model)
2025-03-21 17:40:46 [DEBUG][io.netty.util.internal.PlatformDependent][isWindows0][1119]-> Platform: Windows
2025-03-21 17:40:46 [DEBUG][io.netty.util.internal.PlatformDependent][<clinit>][178]-> -Dio.netty.maxDirectMemory: 3307208704 bytes
2025-03-21 17:40:46 [DEBUG][io.netty.util.internal.PlatformDependent][<clinit>][185]-> -Dio.netty.uninitializedArrayAllocationThreshold: -1
2025-03-21 17:40:46 [DEBUG][io.netty.util.internal.CleanerJava6][<clinit>][92]-> java.nio.ByteBuffer.cleaner(): available
2025-03-21 17:40:46 [DEBUG][io.netty.util.internal.PlatformDependent][<clinit>][205]-> -Dio.netty.noPreferDirect: false
2025-03-21 17:40:46 [DEBUG][io.netty.util.internal.PlatformDependent][<clinit>][1010]-> org.jctools-core.MpscChunkedArrayQueue: available
2025-03-21 17:40:46 [DEBUG][reactor.util.Loggers][debug][254]-> Using Slf4j logging framework
2025-03-21 17:40:46 [DEBUG][io.lettuce.core.event.jfr.EventRecorderHolder][<clinit>][55]-> Starting without optional JFR support. JFR unavailable.
2025-03-21 17:40:46 [DEBUG][io.lettuce.core.resource.DefaultClientResources][<init>][227]-> LatencyUtils/HdrUtils are not available, metrics are disabled
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'redisConnectionFactory' via factory method to bean named 'lettuceClientResources'
2025-03-21 17:40:46 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'redisTemplate' via factory method to bean named 'redisConnectionFactory'
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class [B as writing converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.String as reading converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Number to class [B as writing converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Number as reading converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Enum to class [B as writing converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Enum as reading converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Boolean to class [B as writing converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Boolean as reading converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class [B as writing converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.Date as reading converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.UUID to class [B as writing converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.UUID as reading converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class [B as writing converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDate as reading converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class [B as writing converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalTime as reading converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class [B as writing converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Instant as reading converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class [B as writing converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZoneId as reading converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class [B as writing converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Period as reading converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class [B as writing converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Duration as reading converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class java.lang.String as writing converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Period as reading converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class [B as writing converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.String as reading converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Number to class [B as writing converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Number as reading converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Enum to class [B as writing converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Enum as reading converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Boolean to class [B as writing converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Boolean as reading converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class [B as writing converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.Date as reading converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.UUID to class [B as writing converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.UUID as reading converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class [B as writing converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDate as reading converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class [B as writing converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalTime as reading converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class [B as writing converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Instant as reading converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class [B as writing converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZoneId as reading converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class [B as writing converter
2025-03-21 17:40:46 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Period as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class [B as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Duration as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class java.lang.String as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Period as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class [B as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.String as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Number to class [B as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Number as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Enum to class [B as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Enum as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Boolean to class [B as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Boolean as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class [B as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.Date as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.UUID to class [B as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.UUID as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class [B as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDate as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class [B as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalTime as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class [B as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Instant as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class [B as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZoneId as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class [B as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Period as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class [B as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Duration as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class java.lang.String as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Period as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class [B as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.String as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Number to class [B as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Number as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Enum to class [B as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Enum as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Boolean to class [B as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Boolean as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class [B as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.Date as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.UUID to class [B as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.UUID as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class [B as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDate as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class [B as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalTime as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class [B as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Instant as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class [B as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZoneId as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class [B as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Period as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class [B as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Duration as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class java.lang.String as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Period as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class [B as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.String as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Number to class [B as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Number as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Enum to class [B as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Enum as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Boolean to class [B as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Boolean as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class [B as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.Date as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.UUID to class [B as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.UUID as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class [B as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDate as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class [B as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalTime as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class [B as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Instant as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class [B as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZoneId as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class [B as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Period as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class [B as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Duration as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class java.lang.String as writing converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Period as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'operationAspect'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'AGlobalExceptionHandlerController'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appCarouselController'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appCarouselService'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appCarouselMapper'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sqlSessionFactory'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration'
2025-03-21 17:40:47 [DEBUG][org.springframework.core.LocalVariableTableParameterNameDiscoverer][inspectClass][105]-> Cannot find '.class' file for class [class org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$8027c273] - unable to determine constructor/method parameter names
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' via constructor to bean named 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ea6147e'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'sqlSessionFactory' via factory method to bean named 'dataSource'
2025-03-21 17:40:47 [DEBUG][org.apache.ibatis.logging.LogFactory][setImplementation][135]-> Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2025-03-21 17:40:47 [DEBUG][org.mybatis.spring.SqlSessionFactoryBean][buildSqlSessionFactory][534]-> Property 'mapperLocations' was not specified or no matching resources found
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sqlSessionTemplate'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'sqlSessionTemplate' via factory method to bean named 'sqlSessionFactory'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appFeedbackController'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appFeedbackService'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appFeedbackMapper'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appUpdateController'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appUpdateService'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appConfig'
2025-03-21 17:40:47 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'project.folder' in PropertySource 'environmentProperties' with value of type String
2025-03-21 17:40:47 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'super.admin.phones' in PropertySource 'environmentProperties' with value of type String
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appUpdateMapper'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appUserInfoController'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appUserInfoService'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appUserInfoMapper'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'jwtUtil'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appDeviceService'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appDeviceMapper'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'categoryController'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'categoryService'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'categoryMapper'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'examQuestionController'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'examQuestionService'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'examQuestionMapper'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'examQuestionItemMapper'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'examQuestionItemService'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'fileController'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'indexController'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'statisticsDataService'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'questionInfoMapper'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'shareInfoMapper'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'loginController'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysAccountService'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysAccountMapper'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysMenuService'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysMenuMapper'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'questionInfoController'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'questionInfoService'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'ACommonMapper'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'shareInfoController'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'shareInfoService'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysAccountController'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysMenuController'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysRoleController'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysRoleService'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysRoleMapper'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysRole2MenuMapper'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appExamQuestionService'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appExamQuestionMapper'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appExamService'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appExamMapper'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appUserCollectMapper'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appUserCollectService'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysRole2MenuService'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration$SessionCleanupConfiguration'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'cookieSerializer'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$ServletSessionConfiguration'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'cookieSerializer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sessionRepository'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration$SessionCleanupConfiguration' via constructor to bean named 'org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration$SessionCleanupConfiguration' via constructor to bean named 'sessionRepository'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'springSessionRedisMessageListenerContainer'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'springSessionRedisMessageListenerContainer' via factory method to bean named 'sessionRepository'
2025-03-21 17:40:47 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'enableRedisKeyspaceNotificationsInitializer'
2025-03-21 17:40:47 [DEBUG][io.lettuce.core.RedisClient][connectStandaloneAsync][273]-> Trying to get a Redis connection for: redis://127.0.0.1/1?timeout=2s
2025-03-21 17:40:47 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][157]-> -Dio.netty.allocator.numHeapArenas: 32
2025-03-21 17:40:47 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][158]-> -Dio.netty.allocator.numDirectArenas: 32
2025-03-21 17:40:47 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][160]-> -Dio.netty.allocator.pageSize: 8192
2025-03-21 17:40:47 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][165]-> -Dio.netty.allocator.maxOrder: 9
2025-03-21 17:40:47 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][169]-> -Dio.netty.allocator.chunkSize: 4194304
2025-03-21 17:40:47 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][170]-> -Dio.netty.allocator.smallCacheSize: 256
2025-03-21 17:40:47 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][171]-> -Dio.netty.allocator.normalCacheSize: 64
2025-03-21 17:40:47 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][172]-> -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2025-03-21 17:40:47 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][173]-> -Dio.netty.allocator.cacheTrimInterval: 8192
2025-03-21 17:40:47 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][174]-> -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2025-03-21 17:40:47 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][175]-> -Dio.netty.allocator.useCacheForAllThreads: false
2025-03-21 17:40:47 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][176]-> -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2025-03-21 17:40:47 [DEBUG][io.netty.buffer.ByteBufUtil][<clinit>][88]-> -Dio.netty.allocator.type: pooled
2025-03-21 17:40:47 [DEBUG][io.netty.buffer.ByteBufUtil][<clinit>][97]-> -Dio.netty.threadLocalDirectBufferSize: 0
2025-03-21 17:40:47 [DEBUG][io.netty.buffer.ByteBufUtil][<clinit>][100]-> -Dio.netty.maxThreadLocalCharBufferSize: 16384
2025-03-21 17:40:47 [DEBUG][io.lettuce.core.resource.KqueueProvider][<clinit>][73]-> Starting without optional kqueue library
2025-03-21 17:40:47 [DEBUG][io.lettuce.core.resource.IOUringProvider][<clinit>][75]-> Starting without optional io_uring library
2025-03-21 17:40:47 [DEBUG][io.lettuce.core.resource.EpollProvider][<clinit>][76]-> Starting without optional epoll library
2025-03-21 17:40:47 [DEBUG][io.lettuce.core.resource.DefaultEventLoopGroupProvider][allocate][112]-> Allocating executor io.netty.channel.nio.NioEventLoopGroup
2025-03-21 17:40:47 [DEBUG][io.lettuce.core.resource.DefaultEventLoopGroupProvider][createEventLoopGroup][231]-> Creating executor io.netty.channel.nio.NioEventLoopGroup
2025-03-21 17:40:47 [DEBUG][io.netty.channel.MultithreadEventLoopGroup][<clinit>][44]-> -Dio.netty.eventLoopThreads: 32
2025-03-21 17:40:47 [DEBUG][io.netty.channel.nio.NioEventLoop][<clinit>][110]-> -Dio.netty.noKeySetOptimization: false
2025-03-21 17:40:47 [DEBUG][io.netty.channel.nio.NioEventLoop][<clinit>][111]-> -Dio.netty.selectorAutoRebuildThreshold: 512
2025-03-21 17:40:47 [DEBUG][io.lettuce.core.resource.DefaultEventLoopGroupProvider][addReference][128]-> Adding reference to io.netty.channel.nio.NioEventLoopGroup@fa5f81c, existing ref count 0
2025-03-21 17:40:47 [DEBUG][io.lettuce.core.RedisClient][lambda$getSocketAddressSupplier$14][736]-> Resolved SocketAddress 127.0.0.1:6379 using redis://127.0.0.1/1?timeout=2s
2025-03-21 17:40:47 [DEBUG][io.lettuce.core.AbstractRedisClient][initializeChannelAsync0][401]-> Connecting to Redis at 127.0.0.1:6379
2025-03-21 17:40:47 [DEBUG][io.netty.channel.DefaultChannelId][<clinit>][79]-> -Dio.netty.processId: 1808 (auto-detected)
2025-03-21 17:40:47 [DEBUG][io.netty.util.NetUtil][<clinit>][148]-> -Djava.net.preferIPv4Stack: false
2025-03-21 17:40:47 [DEBUG][io.netty.util.NetUtil][<clinit>][149]-> -Djava.net.preferIPv6Addresses: false
2025-03-21 17:40:48 [DEBUG][io.netty.util.NetUtilInitializations][determineLoopback][145]-> Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2025-03-21 17:40:48 [DEBUG][io.netty.util.NetUtil][run][206]-> Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2025-03-21 17:40:48 [DEBUG][io.netty.channel.DefaultChannelId][<clinit>][101]-> -Dio.netty.machineId: 4c:d5:77:ff:fe:e4:dd:97 (auto-detected)
2025-03-21 17:40:48 [DEBUG][io.netty.util.Recycler][<clinit>][96]-> -Dio.netty.recycler.maxCapacityPerThread: 4096
2025-03-21 17:40:48 [DEBUG][io.netty.util.Recycler][<clinit>][97]-> -Dio.netty.recycler.ratio: 8
2025-03-21 17:40:48 [DEBUG][io.netty.util.Recycler][<clinit>][98]-> -Dio.netty.recycler.chunkSize: 32
2025-03-21 17:40:48 [DEBUG][io.netty.util.Recycler][<clinit>][99]-> -Dio.netty.recycler.blocking: false
2025-03-21 17:40:48 [DEBUG][io.netty.util.Recycler][<clinit>][100]-> -Dio.netty.recycler.batchFastThreadLocalOnly: true
2025-03-21 17:40:48 [DEBUG][io.netty.buffer.AbstractByteBuf][<clinit>][63]-> -Dio.netty.buffer.checkAccessible: true
2025-03-21 17:40:48 [DEBUG][io.netty.buffer.AbstractByteBuf][<clinit>][64]-> -Dio.netty.buffer.checkBounds: true
2025-03-21 17:40:48 [DEBUG][io.netty.util.ResourceLeakDetectorFactory][newResourceLeakDetector][196]-> Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@2e26222e
2025-03-21 17:40:48 [DEBUG][io.lettuce.core.AbstractRedisClient][lambda$null$5][439]-> Connecting to Redis at 127.0.0.1:6379: Success
2025-03-21 17:40:48 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=CONFIG, output=MapOutput [output=AsyncCommand [type=CONFIG, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sessionEventHttpSessionListenerAdapter'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'springSessionRepositoryFilter'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'springSessionRepositoryFilter' via factory method to bean named 'sessionRepository'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'baseMapper'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'taskExecutorBuilder'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'error'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'beanNameViewResolver'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ea6147e'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'conventionErrorViewResolver'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'errorAttributes'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'basicErrorController'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@147e2ae7'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@147e2ae7'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataWebConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.data.web.config.SpringDataWebConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ea6147e'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcContentNegotiationManager'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcConversionService'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcValidator'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'messageConverters'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'stringHttpMessageConverter'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'environment'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'jacksonObjectMapper'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ea6147e'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ea6147e'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'parameterNamesModule'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'jsonComponentModule'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'jsonMixinModule'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ea6147e'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'jacksonGeoModule'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sortResolver'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sortCustomizer'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration' via constructor to bean named 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'pageableResolver'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'pageableCustomizer'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'applicationTaskExecutor'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
2025-03-21 17:40:48 [DEBUG][org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor][initialize][184]-> Initializing ExecutorService 'applicationTaskExecutor'
2025-03-21 17:40:48 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter][initControllerAdviceCache][625]-> ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'welcomePageHandlerMapping'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcResourceUrlProvider'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ea6147e'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'welcomePageNotAcceptableHandlerMapping'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'welcomePageNotAcceptableHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ea6147e'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'welcomePageNotAcceptableHandlerMapping' via factory method to bean named 'mvcConversionService'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'welcomePageNotAcceptableHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'localeResolver'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'themeResolver'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'flashMapManager'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'requestMappingHandlerMapping'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2025-03-21 17:40:48 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.e.c.AppCarouselController:
	{ [/appCarousel/loadDataList]}: loadDataList(AppCarouselQuery)
	{ [/appCarousel/saveCarousel]}: saveCarousel(AppCarousel)
	{ [/appCarousel/changeSort]}: changeSort(String)
	{ [/appCarousel/delCarousel]}: delCarousel(Integer)
2025-03-21 17:40:48 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.e.c.AppFeedbackController:
	{ [/appFeedback/replyFeedback]}: replyFeedback(String,Integer)
	{ [/appFeedback/loadFeedback]}: loadFeedback(AppFeedbackQuery)
	{ [/appFeedback/loadFeedbackReply]}: loadFeedbackReply(Integer)
2025-03-21 17:40:48 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.e.c.AppUpdateController:
	{ [/app/loadDataList]}: loadDataList(AppUpdateQuery)
	{ [/app/postUpdate]}: postUpdate(Integer,Integer,String)
	{ [/app/saveUpdate]}: saveUpdate(Integer,String,String,Integer,MultipartFile)
	{ [/app/delUpdate]}: delUpdate(Integer)
2025-03-21 17:40:48 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.e.c.AppUserInfoController:
	{ [/appUser/updateStatus]}: updateStatus(String,Integer)
	{ [/appUser/loadDataList]}: loadDataList(AppUserInfoQuery)
	{ [/appUser/loadDeviceList]}: loadDeviceList(AppDeviceQuery)
2025-03-21 17:40:48 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.e.c.CategoryController:
	{ [/category/saveCategory]}: saveCategory(Category)
	{ [/category/changeSort]}: changeSort(String)
	{ [/category/loadAllCategory]}: loadAllCategory(CategoryQuery)
	{ [/category/delCategory]}: delCategory(Integer)
	{ [/category/loadAllCategory4Select]}: loadAllCategory4Select(Integer)
2025-03-21 17:40:48 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.e.c.ExamQuestionController:
	{ [/examQuestion/loadDataList]}: loadDataList(ExamQuestionQuery)
	{ [/examQuestion/saveExamQuestion]}: saveExamQuestion(HttpSession,ExamQuestion,String)
	{ [/examQuestion/loadQuestionItem]}: loadQuestionItem(Integer)
	{ [/examQuestion/postExamQuestion]}: postExamQuestion(String)
	{ [/examQuestion/delExamQuestion]}: delExamQuestion(HttpSession,Integer)
	{ [/examQuestion/delExamQuestionBatch]}: delExamQuestionBatch(String)
	{ [/examQuestion/cancelPostExamQuestion]}: cancelPostExamQuestion(String)
	{ [/examQuestion/showExamQuestionDetailNext]}: showExamQuestionDetailNext(ExamQuestionQuery,Integer,Integer)
	{ [/examQuestion/importExamQuestion]}: importExamQuestion(HttpSession,MultipartFile)
2025-03-21 17:40:48 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.e.c.FileController:
	{ [/file/downloadTemplate]}: downloadTemplate(HttpServletResponse,HttpServletRequest,Integer)
	{ [/file/uploadFile]}: uploadFile(MultipartFile,Integer)
	{ [/file/getImage/{imageFolder}/{imageName}]}: getImage(HttpServletResponse,String,String)
2025-03-21 17:40:48 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.e.c.IndexController:
	{ [/index/getAllData]}: getAllData()
	{ [/index/getAppWeekData]}: getAppWeekData()
	{ [/index/getContentWeekData]}: getContentWeekData()
2025-03-21 17:40:48 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.e.c.LoginController:
	{ [/logout]}: logout(HttpSession)
	{ [/checkCode]}: checkCode(HttpServletResponse,HttpSession)
	{ [/login]}: login(HttpSession,String,String,String)
	{ [/updateMyPwd]}: updateMyPwd(HttpSession,String)
2025-03-21 17:40:48 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.e.c.QuestionInfoController:
	{ [/questionInfo/loadDataList]}: loadDataList(QuestionInfoQuery)
	{ [/questionInfo/delQuestion]}: delQuestion(HttpSession,Integer)
	{ [/questionInfo/delQuestionBatch]}: delQuestionBatch(String)
	{ [/questionInfo/postQuestion]}: postQuestion(String)
	{ [/questionInfo/importQuestion]}: importQuestion(HttpSession,MultipartFile)
	{ [/questionInfo/saveQuestionInfo]}: saveQuestionInfo(HttpSession,QuestionInfo)
	{ [/questionInfo/cancelPostQuestion]}: cancelPostQuestion(String)
	{ [/questionInfo/showQuestionDetailNext]}: showQuestionDetailNext(QuestionInfoQuery,Integer,Integer)
2025-03-21 17:40:48 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.e.c.ShareInfoController:
	{ [/shareInfo/loadDataList]}: loadDataList(ShareInfoQuery)
	{ [/shareInfo/saveShareInfo]}: saveShareInfo(HttpSession,Integer,String,Integer,String,String)
	{ [/shareInfo/cancelPostShare]}: cancelPostShare(String)
	{ [/shareInfo/delShareBatch]}: delShareBatch(String)
	{ [/shareInfo/postShare]}: postShare(String)
	{ [/shareInfo/delShare]}: delShare(HttpSession,String)
	{ [/shareInfo/showShareDetailNext]}: showShareDetailNext(ShareInfoQuery,Integer,Integer)
2025-03-21 17:40:48 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.e.c.SysAccountController:
	{ [/settings/updateStatus]}: updateStatus(Integer,Integer)
	{ [/settings/saveAccount]}: saveAccount(SysAccount)
	{ [/settings/loadAccountList]}: loadAccountList(SysAccountQuery)
	{ [/settings/updatePassword]}: updatePassword(Integer,String)
	{ [/settings/delAccount]}: delAccount(Integer)
2025-03-21 17:40:48 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.e.c.SysMenuController:
	{ [/settings/delMenu]}: delMenu(Integer)
	{ [/settings/saveMenu]}: saveMenu(SysMenu)
	{ [/settings/menuList]}: menuList()
2025-03-21 17:40:48 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.e.c.SysRoleController:
	{ [/settings/delRole]}: delRole(Integer)
	{ [/settings/saveRole]}: saveRole(SysRole,String,String)
	{ [/settings/loadAllRoles]}: loadAllRoles()
	{ [/settings/saveRoleMenu]}: saveRoleMenu(Integer,String,String)
	{ [/settings/getRoleByRoleId]}: getRoleByRoleId(Integer)
	{ [/settings/loadRoles]}: loadRoles(SysRoleQuery)
2025-03-21 17:40:48 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-03-21 17:40:48 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][handlerMethodsInitialized][367]-> 69 mappings in 'requestMappingHandlerMapping'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcPatternParser'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcUrlPathHelper'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcPathMatcher'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'viewControllerHandlerMapping'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'beanNameHandlerMapping'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2025-03-21 17:40:48 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlers][86]-> 'beanNameHandlerMapping' {}
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'routerFunctionMapping'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'resourceHandlerMapping'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2025-03-21 17:40:48 [DEBUG][org.springframework.web.servlet.config.annotation.WebMvcConfigurer][addResourceHandlers][335]-> Default resource handling disabled
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'defaultServletHandlerMapping'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'handlerFunctionAdapter'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcUriComponentsContributor'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'handlerExceptionResolver'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
2025-03-21 17:40:48 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver][initExceptionHandlerAdviceCache][307]-> ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcViewResolver'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'viewNameTranslator'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'defaultViewResolver'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'viewResolver'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@147e2ae7'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'viewResolver'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'freeMarkerViewResolver'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerServletWebConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.freemarker-org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerServletWebConfiguration' via constructor to bean named 'spring.freemarker-org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari' via constructor to bean named 'dataSource'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'hikariPoolDataSourceMetadataProvider'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.jmx-org.springframework.boot.autoconfigure.jmx.JmxProperties'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration' via constructor to bean named 'spring.jmx-org.springframework.boot.autoconfigure.jmx.JmxProperties'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mbeanExporter'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'objectNamingStrategy'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mbeanExporter' via factory method to bean named 'objectNamingStrategy'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mbeanExporter' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@147e2ae7'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mbeanServer'
2025-03-21 17:40:48 [DEBUG][org.springframework.jmx.support.JmxUtils][locateMBeanServer][127]-> Found MBeanServer: com.sun.jmx.mbeanserver.JmxMBeanServer@6193b845
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'springApplicationAdminRegistrar'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'springApplicationAdminRegistrar' via factory method to bean named 'environment'
2025-03-21 17:40:48 [DEBUG][org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin][afterPropertiesSet][131]-> Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'applicationAvailability'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'stringRedisTemplate'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'stringRedisTemplate' via factory method to bean named 'redisConnectionFactory'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'lifecycleProcessor'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'lifecycleProcessor' via factory method to bean named 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'reactiveRedisTemplate'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'reactiveRedisTemplate' via factory method to bean named 'redisConnectionFactory'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'reactiveRedisTemplate' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ea6147e'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'reactiveStringRedisTemplate'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'reactiveStringRedisTemplate' via factory method to bean named 'redisConnectionFactory'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'keyValueMappingContext'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisCustomConversions'
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class [B as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.String as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Number to class [B as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Number as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Enum to class [B as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Enum as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Boolean to class [B as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Boolean as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class [B as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.Date as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.UUID to class [B as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.UUID as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class [B as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDate as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class [B as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalTime as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class [B as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Instant as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class [B as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZoneId as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class [B as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Period as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class [B as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Duration as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class java.lang.String as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Period as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisReferenceResolver'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisConverter'
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class [B as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.String as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Number to class [B as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Number as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Enum to class [B as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Enum as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Boolean to class [B as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Boolean as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class [B as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.Date as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.UUID to class [B as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.UUID as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class [B as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDate as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class [B as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalTime as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class [B as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Instant as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class [B as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZoneId as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class [B as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Period as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class [B as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Duration as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class java.lang.String as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Period as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class [B as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.String as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Number to class [B as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Number as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Enum to class [B as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Enum as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Boolean to class [B as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Boolean as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class [B as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.Date as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.UUID to class [B as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.UUID as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class [B as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDate as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class [B as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalTime as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class [B as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Instant as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class [B as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZoneId as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class [B as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Period as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class [B as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Duration as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class java.lang.String as writing converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Period as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisKeyValueAdapter'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisKeyValueTemplate'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.data.web.config.ProjectingArgumentResolverRegistrar'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'freeMarkerConfigurer'
2025-03-21 17:40:48 [DEBUG][org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer][getTemplateLoaderForPath][362]-> File system access not preferred: using SpringTemplateLoader
2025-03-21 17:40:48 [DEBUG][org.springframework.ui.freemarker.SpringTemplateLoader][<init>][62]-> SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ea6147e, started on Fri Mar 21 17:40:45 CST 2025] and template loader path [classpath:/templates/]
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'freeMarkerConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'freeMarkerConfiguration' via factory method to bean named 'freeMarkerConfigurer'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ea6147e'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration' via constructor to bean named 'spring.freemarker-org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties'
2025-03-21 17:40:48 [WARN][org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration][checkTemplateLocationExists][65]-> Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.check-template-location=false)
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'dataSourceScriptDatabaseInitializer'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'dataSource'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'jdbcTemplate'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.netty-org.springframework.boot.autoconfigure.netty.NettyProperties'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration' via constructor to bean named 'spring.netty-org.springframework.boot.autoconfigure.netty.NettyProperties'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$ServletSessionRepositoryValidator'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$ServletSessionRepositoryValidator' via constructor to bean named 'spring.session-org.springframework.boot.autoconfigure.session.SessionProperties'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.session.SessionAutoConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.webflux-org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'scheduledBeanLazyInitializationExcludeFilter'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'taskSchedulerBuilder'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'transactionManager'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'transactionManager' via factory method to bean named 'environment'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'transactionManager' via factory method to bean named 'dataSource'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'transactionTemplate'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
2025-03-21 17:40:48 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'multipartResolver'
2025-03-21 17:40:48 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][afterSingletonsInstantiated][434]-> Registering beans for JMX exposure on startup
2025-03-21 17:40:48 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeans][541]-> Autodetecting user-defined JMX MBeans
2025-03-21 17:40:48 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect][896]-> Bean with name 'dataSource' has been autodetected for JMX exposure
2025-03-21 17:40:48 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance][669]-> Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2025-03-21 17:40:48 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][start][352]-> Starting beans in phase -2147483647
2025-03-21 17:40:48 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][doStart][184]-> Successfully started bean 'springBootLoggingLifecycle'
2025-03-21 17:40:48 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][start][352]-> Starting beans in phase 2147483646
2025-03-21 17:40:48 [INFO][org.apache.coyote.http11.Http11NioProtocol][log][173]-> Starting ProtocolHandler ["http-nio-9091"]
2025-03-21 17:40:48 [INFO][org.springframework.boot.web.embedded.tomcat.TomcatWebServer][start][220]-> Tomcat started on port(s): 9091 (http) with context path '/api'
2025-03-21 17:40:48 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][doStart][184]-> Successfully started bean 'webServerStartStop'
2025-03-21 17:40:48 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][start][352]-> Starting beans in phase 2147483647
2025-03-21 17:40:48 [DEBUG][io.lettuce.core.RedisClient][lambda$getSocketAddressSupplier$14][736]-> Resolved SocketAddress 127.0.0.1:6379 using redis://127.0.0.1/1?timeout=2s
2025-03-21 17:40:48 [DEBUG][io.lettuce.core.AbstractRedisClient][initializeChannelAsync0][401]-> Connecting to Redis at 127.0.0.1:6379
2025-03-21 17:40:48 [DEBUG][io.lettuce.core.AbstractRedisClient][lambda$null$5][439]-> Connecting to Redis at 127.0.0.1:6379: Success
2025-03-21 17:40:48 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:40:48 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:40:48 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][doStart][184]-> Successfully started bean 'springSessionRedisMessageListenerContainer'
2025-03-21 17:40:48 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][doStart][184]-> Successfully started bean 'webServerGracefulShutdown'
2025-03-21 17:40:48 [DEBUG][org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener][logAutoConfigurationReport][126]-> 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   ApplicationAvailabilityAutoConfiguration#applicationAvailability matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.availability.ApplicationAvailability; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnWarDeployment the application is not deployed as a WAR file. (OnWarDeploymentCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   FreeMarkerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'freemarker.template.Configuration', 'org.springframework.ui.freemarker.FreeMarkerConfigurationFactory' (OnClassCondition)

   FreeMarkerServletWebConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   FreeMarkerServletWebConfiguration#freeMarkerConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.freemarker.FreeMarkerConfig; SearchStrategy: all) did not find any beans (OnBeanCondition)

   FreeMarkerServletWebConfiguration#freeMarkerViewResolver matched:
      - @ConditionalOnProperty (spring.freemarker.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (names: freeMarkerViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LettuceConnectionConfiguration matched:
      - @ConditionalOnClass found required class 'io.lettuce.core.RedisClient' (OnClassCondition)
      - @ConditionalOnProperty (spring.redis.client-type=lettuce) matched (OnPropertyCondition)

   LettuceConnectionConfiguration#lettuceClientResources matched:
      - @ConditionalOnMissingBean (types: io.lettuce.core.resource.ClientResources; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LettuceConnectionConfiguration#redisConnectionFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: javax.servlet.MultipartConfigElement,org.springframework.web.multipart.commons.CommonsMultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.ibatis.session.SqlSessionFactory', 'org.mybatis.spring.SqlSessionFactoryBean' (OnClassCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource' (OnBeanCondition)

   MybatisAutoConfiguration#sqlSessionFactory matched:
      - @ConditionalOnMissingBean (types: org.apache.ibatis.session.SqlSessionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisAutoConfiguration#sqlSessionTemplate matched:
      - @ConditionalOnMissingBean (types: org.mybatis.spring.SqlSessionTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NettyAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RedisAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisAutoConfiguration#stringRedisTemplate matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found a single bean 'redisConnectionFactory'; @ConditionalOnMissingBean (types: org.springframework.data.redis.core.StringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisCacheConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)
      - Cache org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration automatic cache type (CacheCondition)

   RedisReactiveAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.redis.connection.ReactiveRedisConnectionFactory', 'org.springframework.data.redis.core.ReactiveRedisTemplate', 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisReactiveAutoConfiguration#reactiveRedisTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: reactiveRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisReactiveAutoConfiguration#reactiveStringRedisTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: reactiveStringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.redis.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (types: org.springframework.data.redis.repository.support.RedisRepositoryFactoryBean; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisSessionConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.redis.core.RedisTemplate', 'org.springframework.session.data.redis.RedisIndexedSessionRepository' (OnClassCondition)
      - Session Condition found spring.session.store-type property REDIS (ServletSessionCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration#restTemplateBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SessionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.session.Session' (OnClassCondition)
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   SessionAutoConfiguration.ServletSessionConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   SessionAutoConfiguration.ServletSessionConfiguration#cookieSerializer matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on SessionAutoConfiguration.DefaultCookieSerializerCondition.CookieHttpSessionIdResolverAvailable found non-matching nested conditions @ConditionalOnBean (types: org.springframework.session.web.http.CookieHttpSessionIdResolver; SearchStrategy: all) did not find any beans of type org.springframework.session.web.http.CookieHttpSessionIdResolver, @ConditionalOnBean (types: org.springframework.session.web.http.CookieHttpSessionIdResolver; SearchStrategy: all) did not find any beans of type org.springframework.session.web.http.CookieHttpSessionIdResolver; NestedCondition on SessionAutoConfiguration.DefaultCookieSerializerCondition.NoComponentsAvailable @ConditionalOnMissingBean (types: org.springframework.session.web.http.HttpSessionIdResolver,org.springframework.session.web.http.CookieSerializer; SearchStrategy: all) did not find any beans (SessionAutoConfiguration.DefaultCookieSerializerCondition)

   SessionRepositoryFilterConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.session.web.http.SessionRepositoryFilter; SearchStrategy: all) found bean 'springSessionRepositoryFilter' (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#scheduledBeanLazyInitializationExcludeFilter matched:
      - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) found bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' (OnBeanCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   EhCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Cache' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedMongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClientSettings' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerNonWebConfiguration:
      Did not match:
         - @ConditionalOnWebApplication found 'session' scope and did not find reactive web application classes (OnWebApplicationCondition)

   FreeMarkerReactiveWebConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   FreeMarkerServletWebConfiguration#resourceUrlEncodingFilter:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.WebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastSessionConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.hazelcast.HazelcastIndexedSessionRepository' (OnClassCondition)

   HibernateJpaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.persistence.EntityManager' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JdbcSessionConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.jdbc.JdbcIndexedSessionRepository' (OnClassCondition)

   JedisConnectionConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.apache.commons.pool2.impl.GenericObjectPool', 'redis.clients.jedis.Jedis' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.Message' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JtaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.Transaction' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mail.test-connection) did not find property 'test-connection' (OnPropertyCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoSessionConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.mongodb.core.MongoOperations' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   MybatisAutoConfiguration.MapperScannerRegistrarNotFoundConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.mybatis.spring.mapper.MapperFactoryBean; SearchStrategy: all) found beans of type 'org.mybatis.spring.mapper.MapperFactoryBean' &ACommonMapper, &appCarouselMapper, &appDeviceMapper, &appExamMapper, &appExamQuestionMapper, &appFeedbackMapper, &appUpdateMapper, &appUserCollectMapper, &appUserInfoMapper, &baseMapper, &categoryMapper, &examQuestionItemMapper, &examQuestionMapper, &questionInfoMapper, &shareInfoMapper, &sysAccountMapper, &sysMenuMapper, &sysRole2MenuMapper, &sysRoleMapper (OnBeanCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NoOpSessionConfiguration:
      Did not match:
         - Session Condition found spring.session.store-type property REDIS (ServletSessionCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RedisAutoConfiguration#redisTemplate:
      Did not match:
         - @ConditionalOnMissingBean (names: redisTemplate; SearchStrategy: all) found beans named redisTemplate (OnBeanCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration.ReactiveSessionConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   SessionAutoConfiguration.ServletSessionConfiguration.RememberMeServicesConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.web.authentication.RememberMeServices' (OnClassCondition)

   SessionAutoConfiguration.ServletSessionConfiguration.ServletSessionRepositoryConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.session.SessionRepository; SearchStrategy: all) found beans of type 'org.springframework.session.SessionRepository' sessionRepository (OnBeanCondition)

   SolrAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.impl.CloudSolrClient' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskScheduler:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.scheduling.annotation.SchedulingConfigurer,org.springframework.scheduling.TaskScheduler,java.util.concurrent.ScheduledExecutorService; SearchStrategy: all) found beans of type 'org.springframework.scheduling.annotation.SchedulingConfigurer' org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration$SessionCleanupConfiguration (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring5.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) found beans of type 'org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration' org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)
         - Ancestor org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   ValidationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.validation.executable.ExecutableValidator' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.client.core.WebServiceTemplate' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.Jetty10WebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.websocket.javax.server.internal.JavaxWebSocketServerContainer', 'org.eclipse.jetty.websocket.server.JettyWebSocketServerContainer' (OnClassCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.TransactionManager' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



2025-03-21 17:40:48 [INFO][org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor][finishRegistration][315]-> No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2025-03-21 17:40:48 [DEBUG][org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver][logKeyFound][115]-> Found key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties' with value of type String
2025-03-21 17:40:48 [INFO][com.easyjob.EasyjobAdminApplication][logStarted][61]-> Started EasyjobAdminApplication in 4.063 seconds (JVM running for 4.887)
2025-03-21 17:40:48 [DEBUG][org.springframework.boot.availability.ApplicationAvailabilityBean][onApplicationEvent][77]-> Application availability state LivenessState changed to CORRECT
2025-03-21 17:40:48 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1103]-> HikariCPDatasource - configuration:
2025-03-21 17:40:48 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> allowPoolSuspension................................false
2025-03-21 17:40:48 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> autoCommit................................true
2025-03-21 17:40:48 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> catalog................................none
2025-03-21 17:40:48 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> connectionInitSql................................none
2025-03-21 17:40:48 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> connectionTestQuery................................"SELECT 1"
2025-03-21 17:40:48 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> connectionTimeout................................30000
2025-03-21 17:40:48 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> dataSource................................none
2025-03-21 17:40:48 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> dataSourceClassName................................none
2025-03-21 17:40:48 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> dataSourceJNDI................................none
2025-03-21 17:40:48 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> dataSourceProperties................................{password=<masked>}
2025-03-21 17:40:48 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> driverClassName................................"com.mysql.cj.jdbc.Driver"
2025-03-21 17:40:48 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> exceptionOverrideClassName................................none
2025-03-21 17:40:48 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> healthCheckProperties................................{}
2025-03-21 17:40:48 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> healthCheckRegistry................................none
2025-03-21 17:40:48 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> idleTimeout................................180000
2025-03-21 17:40:48 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> initializationFailTimeout................................1
2025-03-21 17:40:48 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> isolateInternalQueries................................false
2025-03-21 17:40:48 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> jdbcUrl................................jdbc:mysql://127.0.0.1:3306/easyjob?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf8&autoReconnect=true&allowMultiQueries=true
2025-03-21 17:40:48 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> keepaliveTime................................0
2025-03-21 17:40:48 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> leakDetectionThreshold................................0
2025-03-21 17:40:48 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> maxLifetime................................1800000
2025-03-21 17:40:48 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> maximumPoolSize................................10
2025-03-21 17:40:48 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> metricRegistry................................none
2025-03-21 17:40:48 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> metricsTrackerFactory................................none
2025-03-21 17:40:48 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> minimumIdle................................5
2025-03-21 17:40:48 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> password................................<masked>
2025-03-21 17:40:48 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> poolName................................"HikariCPDatasource"
2025-03-21 17:40:48 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> readOnly................................false
2025-03-21 17:40:48 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> registerMbeans................................false
2025-03-21 17:40:48 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> scheduledExecutor................................none
2025-03-21 17:40:48 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> schema................................none
2025-03-21 17:40:48 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> threadFactory................................internal
2025-03-21 17:40:48 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> transactionIsolation................................default
2025-03-21 17:40:48 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> username................................"root"
2025-03-21 17:40:48 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> validationTimeout................................5000
2025-03-21 17:40:48 [INFO][com.zaxxer.hikari.HikariDataSource][getConnection][110]-> HikariCPDatasource - Starting...
2025-03-21 17:40:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][checkFailFast][565]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@71369e1a
2025-03-21 17:40:49 [INFO][com.zaxxer.hikari.HikariDataSource][getConnection][123]-> HikariCPDatasource - Start completed.
2025-03-21 17:40:49 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:40:49 [ERROR][com.easyjob.InitRun][run][31]-> 服务启动成功，可以开始愉快的开发了
2025-03-21 17:40:49 [DEBUG][org.springframework.boot.availability.ApplicationAvailabilityBean][onApplicationEvent][77]-> Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2025-03-21 17:40:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=1, active=1, idle=0, waiting=0)
2025-03-21 17:40:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=1, active=1, idle=0, waiting=0)
2025-03-21 17:40:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@221038a
2025-03-21 17:40:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d
2025-03-21 17:40:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@270c62e5
2025-03-21 17:40:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@50c3f163
2025-03-21 17:40:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@23423940
2025-03-21 17:40:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After adding stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 17:41:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 17:41:00 CST 2025
2025-03-21 17:41:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:41:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:41:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 17:41:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 17:41:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 17:41:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 17:41:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 17:41:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 17:42:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 17:42:00 CST 2025
2025-03-21 17:42:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:42:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:42:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 17:42:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 17:42:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 17:42:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 17:42:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 17:42:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 17:43:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 17:43:00 CST 2025
2025-03-21 17:43:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:43:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:43:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 17:43:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 17:43:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 17:43:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 17:43:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 17:43:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 17:44:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 17:44:00 CST 2025
2025-03-21 17:44:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:44:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:44:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 17:44:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 17:44:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 17:44:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 17:44:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 17:44:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 17:45:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 17:45:00 CST 2025
2025-03-21 17:45:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:45:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:45:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 17:45:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 17:45:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 17:45:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 17:45:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 17:45:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 17:46:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 17:46:00 CST 2025
2025-03-21 17:46:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:46:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:46:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 17:46:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 17:46:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 17:46:19 [INFO][org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/api]][log][173]-> Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-21 17:46:19 [INFO][org.springframework.web.servlet.DispatcherServlet][initServletBean][525]-> Initializing Servlet 'dispatcherServlet'
2025-03-21 17:46:19 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initMultipartResolver][522]-> Detected StandardServletMultipartResolver
2025-03-21 17:46:19 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initLocaleResolver][546]-> Detected AcceptHeaderLocaleResolver
2025-03-21 17:46:19 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initThemeResolver][571]-> Detected FixedThemeResolver
2025-03-21 17:46:19 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initRequestToViewNameTranslator][721]-> Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@160b4809
2025-03-21 17:46:19 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initFlashMapManager][785]-> Detected org.springframework.web.servlet.support.SessionFlashMapManager@5a0e0886
2025-03-21 17:46:19 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initServletBean][542]-> enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-03-21 17:46:19 [INFO][org.springframework.web.servlet.DispatcherServlet][initServletBean][547]-> Completed initialization in 2 ms
2025-03-21 17:46:19 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> GET "/api/checkCode?time=1742550379842", parameters={masked}
2025-03-21 17:46:19 [DEBUG][org.springframework.session.web.http.SessionRepositoryFilter.SESSION_LOGGER][getSession][305]-> No session found by id: Caching result for getSession(false) for this HttpServletRequest.
2025-03-21 17:46:19 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.LoginController#checkCode(HttpServletResponse, HttpSession)
2025-03-21 17:46:19 [DEBUG][org.springframework.session.web.http.SessionRepositoryFilter.SESSION_LOGGER][getSession][305]-> No session found by id: Caching result for getSession(false) for this HttpServletRequest.
2025-03-21 17:46:19 [DEBUG][org.springframework.session.web.http.SessionRepositoryFilter.SESSION_LOGGER][getSession][318]-> A new session was created. To help you troubleshoot where the session was created we provided a StackTrace (this is not an error). You can prevent this from appearing by disabling DEBUG logging for org.springframework.session.web.http.SessionRepositoryFilter.SESSION_LOGGER
java.lang.RuntimeException: For debugging purposes only (not an error)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:320)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:332)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:193)
	at org.springframework.web.servlet.mvc.method.annotation.ServletRequestMethodArgumentResolver.resolveArgument(ServletRequestMethodArgumentResolver.java:139)
	at org.springframework.web.servlet.mvc.method.annotation.ServletRequestMethodArgumentResolver.resolveArgument(ServletRequestMethodArgumentResolver.java:124)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:142)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2025-03-21 17:46:20 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:46:20 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:46:20 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:46:20 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:46:20 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:46:20 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:46:20 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PUBLISH, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:46:20 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:46:44 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/login", parameters={multipart}
2025-03-21 17:46:44 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:46:44 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.LoginController#login(HttpSession, String, String, String)
2025-03-21 17:46:45 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:46:45 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65f5fb71] was not registered for synchronization because synchronization is not active
2025-03-21 17:46:45 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:46:45 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@872053055 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:46:45 [DEBUG][com.easyjob.mappers.SysAccountMapper.selectByPhone][debug][159]-> ==>  Preparing: select user_id ,phone,user_name,password,position, status,roles,create_time from sys_account where phone=? 
2025-03-21 17:46:45 [DEBUG][com.easyjob.mappers.SysAccountMapper.selectByPhone][debug][159]-> ==> Parameters: 18688886666(String)
2025-03-21 17:46:45 [DEBUG][com.easyjob.mappers.SysAccountMapper.selectByPhone][debug][159]-> <==      Total: 1
2025-03-21 17:46:45 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65f5fb71]
2025-03-21 17:46:45 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver][doResolveHandlerMethodException][416]-> Using @ExceptionHandler com.easyjob.controller.AGlobalExceptionHandlerController#handleException(Exception, HttpServletRequest)
2025-03-21 17:46:45 [ERROR][com.easyjob.controller.AGlobalExceptionHandlerController][handleException][25]-> 请求错误，请求地址http://localhost:9091/api/login,错误信息:
com.easyjob.exception.BusinessException: 账号或者密码错误
2025-03-21 17:46:45 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:46:45 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@3cdfec2]
2025-03-21 17:46:45 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:46:45 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:46:45 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:46:45 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:46:45 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:46:45 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:46:45 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:46:45 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver][resolveException][146]-> Resolved [com.easyjob.exception.BusinessException: 账号或者密码错误]
2025-03-21 17:46:45 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:46:45 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:46:45 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> GET "/api/checkCode?time=1742550405104", parameters={masked}
2025-03-21 17:46:45 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:46:45 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.LoginController#checkCode(HttpServletResponse, HttpSession)
2025-03-21 17:46:45 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:46:45 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:46:45 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:46:45 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:46:45 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:46:45 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:46:45 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:46:45 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:46:45 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:46:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 17:46:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 17:46:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 17:46:59 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/login", parameters={multipart}
2025-03-21 17:46:59 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:46:59 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.LoginController#login(HttpSession, String, String, String)
2025-03-21 17:46:59 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:46:59 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70bf1c0d] was not registered for synchronization because synchronization is not active
2025-03-21 17:46:59 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2051503997 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.SysAccountMapper.selectByPhone][debug][159]-> ==>  Preparing: select user_id ,phone,user_name,password,position, status,roles,create_time from sys_account where phone=? 
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.SysAccountMapper.selectByPhone][debug][159]-> ==> Parameters: 18688886666(String)
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.SysAccountMapper.selectByPhone][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70bf1c0d]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@eb07be4] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 17:47:00 CST 2025
2025-03-21 17:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1433549263 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.SysMenuMapper.selectList][debug][159]-> ==>  Preparing: SELECT menu_id ,menu_name,menu_type,menu_url,p_id, sort,permission_code,icon FROM sys_menu order by sort asc 
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.SysMenuMapper.selectList][debug][159]-> ==> Parameters: 
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.SysMenuMapper.selectList][debug][159]-> <==      Total: 46
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@eb07be4]
2025-03-21 17:47:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:47:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@2e61a394]
2025-03-21 17:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:00 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:00 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/index/getAllData", parameters={multipart}
2025-03-21 17:47:00 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/index/getAppWeekData", parameters={multipart}
2025-03-21 17:47:00 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/index/getContentWeekData", parameters={multipart}
2025-03-21 17:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.IndexController#getAllData()
2025-03-21 17:47:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.IndexController#getContentWeekData()
2025-03-21 17:47:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.IndexController#getAppWeekData()
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f798451] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3793eef0] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28a0ad09] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1182474677 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1073502575 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3793eef0]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c1c0df9] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1968938827 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device 
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f798451]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b899abf] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@43517101 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28a0ad09]
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d12cada] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@162683005 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d12cada]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dc9a900] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@531851617 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@370599545 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info 
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c1c0df9]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@aa8fda3] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dc9a900]
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@117171813 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cc9f709] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1015599161 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cc9f709]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b899abf]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42f54d3d] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ddc706] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@939938882 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info 
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@aa8fda3]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28e51b9d] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1701686983 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1706239507 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28e51b9d]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59a6e3da] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42f54d3d]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@135219390 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e01bb33] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1817935779 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ddc706]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25540a58] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e01bb33]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59a6e3da]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48479c9] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24e84092] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1496003423 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@776657308 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question 
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-14(String), 2025-03-14(String)
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@858938298 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24e84092]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@678f1ac] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@254128700 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25540a58]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@678f1ac]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48479c9]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7607a9ab] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38c9e72b] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24054676] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@57161998 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2038268943 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1938058233 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38c9e72b]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24054676]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7607a9ab]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78a08a68] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b4f2d45] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1db4af6e] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1989694972 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1556637624 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1454704514 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info 
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1db4af6e]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b4f2d45]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4981c8a1] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5da84f23] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1700742183 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@469164497 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5da84f23]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4981c8a1]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ecb5677] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4bbd83bc] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78a08a68]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b15a297] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1904598490 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@205430442 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@119182423 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-15(String), 2025-03-15(String)
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ecb5677]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4bbd83bc]
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33a14a7a] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b15a297]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4112b318] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52119b14] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1721067749 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@80124635 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@276301646 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? 
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer)
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4112b318]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33a14a7a]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ec84ab4] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40e33362] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@974564870 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@934561656 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40e33362]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ec84ab4]
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52119b14]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d40aae1] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a8870aa] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c78c4ce] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1991838885 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1928278894 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2082861163 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c78c4ce]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a8870aa]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d40aae1]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d45b5a6] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:47:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:47:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@47b80012]
2025-03-21 17:47:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@7dacf505]
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1146178545 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-16(String), 2025-03-16(String)
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d45b5a6]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e783f27] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2135990146 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 17:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e783f27]
2025-03-21 17:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c562ede] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@52995956 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 17:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c562ede]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4bb66cc4] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@106662834 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:47:00 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4bb66cc4]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44d5ac73] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1721836103 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-17(String), 2025-03-17(String)
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44d5ac73]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bbc0f5d] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1859585643 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bbc0f5d]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f1c5cbc] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@344028389 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f1c5cbc]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e738a38] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@858250486 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e738a38]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70933824] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1924353604 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-18(String), 2025-03-18(String)
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70933824]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26b804b4] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@657124485 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26b804b4]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49c3f2b3] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1819873711 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49c3f2b3]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53da9468] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1471062372 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53da9468]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a74a3] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@40949303 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-19(String), 2025-03-19(String)
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a74a3]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17d8c20] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1385254848 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17d8c20]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4928819f] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@609814550 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4928819f]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d1d03e6] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@11820963 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d1d03e6]
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6546d1bd] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@10611904 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:00 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6546d1bd]
2025-03-21 17:47:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:47:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@41986144]
2025-03-21 17:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:00 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:02 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/category/loadAllCategory", parameters={multipart}
2025-03-21 17:47:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:02 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.CategoryController#loadAllCategory(CategoryQuery)
2025-03-21 17:47:02 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:02 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10194b69] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:02 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:02 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@315313935 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:02 [DEBUG][com.easyjob.mappers.CategoryMapper.selectList][debug][159]-> ==>  Preparing: SELECT category_id ,category_name,sort,icon_path,bg_color, type FROM category order by sort asc 
2025-03-21 17:47:02 [DEBUG][com.easyjob.mappers.CategoryMapper.selectList][debug][159]-> ==> Parameters: 
2025-03-21 17:47:02 [DEBUG][com.easyjob.mappers.CategoryMapper.selectList][debug][159]-> <==      Total: 9
2025-03-21 17:47:02 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10194b69]
2025-03-21 17:47:02 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:47:02 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@607a1447]
2025-03-21 17:47:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:02 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:47:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:09 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/index/getAllData", parameters={multipart}
2025-03-21 17:47:09 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/index/getContentWeekData", parameters={multipart}
2025-03-21 17:47:09 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/index/getAppWeekData", parameters={multipart}
2025-03-21 17:47:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:09 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.IndexController#getAppWeekData()
2025-03-21 17:47:09 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.IndexController#getAllData()
2025-03-21 17:47:09 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.IndexController#getContentWeekData()
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f4018c7] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58fb0d3b] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@719cf262] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@632845239 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2070190354 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@66720764 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f4018c7]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f135394] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1360055346 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f135394]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@95162b] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58fb0d3b]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@719cf262]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1431267934 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info 
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d5384c7] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28fff256] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@261273442 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1862590412 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@95162b]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c5705e0] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@81488399 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c5705e0]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62a5e811] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1984534944 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d5384c7]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28fff256]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62a5e811]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f6420f2] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e49f755] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4472746a] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@786494053 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@166974344 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@165345685 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e49f755]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4472746a]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4be578db] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72cb2321] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@634243126 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1510460845 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4be578db]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72cb2321]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c4dc4fe] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f5901e1] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f6420f2]
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1015962636 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49eef15f] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1143010560 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@930298656 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-14(String), 2025-03-14(String)
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c4dc4fe]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f5901e1]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c1c3df9] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@586f84ae] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2141114443 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1589935792 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c1c3df9]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@586f84ae]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c9cbded] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b4bd554] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49eef15f]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1096983154 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@790985319 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6416b09c] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1523368264 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b4bd554]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c9cbded]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37e67211] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dc15b2a] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6416b09c]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1657987276 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@614198442 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2610d3fe] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer)
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2010318320 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37e67211]
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dc15b2a]
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@476b55dc] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f77c69b] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1125765594 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2610d3fe]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d8f5ea7] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1562443211 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@476b55dc]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1806078017 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 17:47:09 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:47:09 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@5239be41]
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d8f5ea7]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f77c69b]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33fd02cb] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e3ceebc] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@880806005 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-15(String), 2025-03-15(String)
2025-03-21 17:47:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33fd02cb]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4071fc0c] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@465651091 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1334328580 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 17:47:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4071fc0c]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e3ceebc]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cfd3fa5] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6243a56e] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@756921526 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1592054486 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cfd3fa5]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6243a56e]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2260cc2c] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a556c8] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1576498651 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@109361063 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a556c8]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2260cc2c]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a676c4d] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d546364] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@333278943 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@158452558 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-16(String), 2025-03-16(String)
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a676c4d]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d546364]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bfcd3e8] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c344042] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@989386206 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@49630691 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c344042]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bfcd3e8]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bf9fd7b] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@4c365eab]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@895588374 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 17:47:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bf9fd7b]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@562bec73] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@49140200 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 17:47:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@562bec73]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c29b5d8] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@896044634 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-17(String), 2025-03-17(String)
2025-03-21 17:47:09 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:47:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c29b5d8]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48c6c129] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1792201373 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48c6c129]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@634212fa] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1945388187 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@634212fa]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@378d0f91] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1759889033 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@378d0f91]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1214bbe8] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1459893729 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-18(String), 2025-03-18(String)
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1214bbe8]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@537da2d8] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@631254635 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@537da2d8]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42a92fac] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2096901699 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42a92fac]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19eb2821] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@305443071 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19eb2821]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b0e3a65] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1273278725 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-19(String), 2025-03-19(String)
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b0e3a65]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b2647f4] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@830570983 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b2647f4]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2183b446] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1491295845 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2183b446]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@210555ec] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@496559118 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@210555ec]
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39ed112a] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@852269518 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:09 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39ed112a]
2025-03-21 17:47:09 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:47:09 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@63621847]
2025-03-21 17:47:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:09 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:47:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:14 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/category/loadAllCategory", parameters={multipart}
2025-03-21 17:47:14 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:14 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.CategoryController#loadAllCategory(CategoryQuery)
2025-03-21 17:47:14 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:14 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7fcec10e] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:14 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:14 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1009415987 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:14 [DEBUG][com.easyjob.mappers.CategoryMapper.selectList][debug][159]-> ==>  Preparing: SELECT category_id ,category_name,sort,icon_path,bg_color, type FROM category order by sort asc 
2025-03-21 17:47:14 [DEBUG][com.easyjob.mappers.CategoryMapper.selectList][debug][159]-> ==> Parameters: 
2025-03-21 17:47:14 [DEBUG][com.easyjob.mappers.CategoryMapper.selectList][debug][159]-> <==      Total: 9
2025-03-21 17:47:14 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7fcec10e]
2025-03-21 17:47:14 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:47:14 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@48416a2b]
2025-03-21 17:47:14 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:14 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:14 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:14 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:14 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:14 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:14 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:14 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:47:14 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 17:47:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 17:47:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 17:47:21 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/appUser/loadDeviceList", parameters={multipart}
2025-03-21 17:47:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:21 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.AppUserInfoController#loadDeviceList(AppDeviceQuery)
2025-03-21 17:47:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29f0add8] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1528942762 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:21 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device 
2025-03-21 17:47:21 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:47:21 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29f0add8]
2025-03-21 17:47:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2dbe7091] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2135725952 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:21 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectList][debug][159]-> ==>  Preparing: SELECT device_id,device_brand,create_time,last_use_time,ip FROM app_device order by create_time desc limit ?,? 
2025-03-21 17:47:21 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectList][debug][159]-> ==> Parameters: 0(Integer), 15(Integer)
2025-03-21 17:47:21 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectList][debug][159]-> <==      Total: 3
2025-03-21 17:47:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2dbe7091]
2025-03-21 17:47:21 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:47:21 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@44d9e6e9]
2025-03-21 17:47:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:21 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:47:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:21 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/category/loadAllCategory", parameters={multipart}
2025-03-21 17:47:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:21 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.CategoryController#loadAllCategory(CategoryQuery)
2025-03-21 17:47:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72929255] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@376790539 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:21 [DEBUG][com.easyjob.mappers.CategoryMapper.selectList][debug][159]-> ==>  Preparing: SELECT category_id ,category_name,sort,icon_path,bg_color, type FROM category order by sort asc 
2025-03-21 17:47:21 [DEBUG][com.easyjob.mappers.CategoryMapper.selectList][debug][159]-> ==> Parameters: 
2025-03-21 17:47:21 [DEBUG][com.easyjob.mappers.CategoryMapper.selectList][debug][159]-> <==      Total: 9
2025-03-21 17:47:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72929255]
2025-03-21 17:47:21 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:47:21 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@6631e1ac]
2025-03-21 17:47:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:21 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:47:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:24 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/appUser/loadDeviceList", parameters={multipart}
2025-03-21 17:47:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:24 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.AppUserInfoController#loadDeviceList(AppDeviceQuery)
2025-03-21 17:47:24 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:24 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14be786e] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:24 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:24 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1935326494 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:24 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device 
2025-03-21 17:47:24 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:47:24 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:24 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14be786e]
2025-03-21 17:47:24 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:24 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@726a5869] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:24 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:24 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1845837412 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:24 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectList][debug][159]-> ==>  Preparing: SELECT device_id,device_brand,create_time,last_use_time,ip FROM app_device order by create_time desc limit ?,? 
2025-03-21 17:47:24 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectList][debug][159]-> ==> Parameters: 0(Integer), 15(Integer)
2025-03-21 17:47:24 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectList][debug][159]-> <==      Total: 3
2025-03-21 17:47:24 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@726a5869]
2025-03-21 17:47:24 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:47:24 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@5c08ef63]
2025-03-21 17:47:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:24 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:47:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:25 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/category/loadAllCategory", parameters={multipart}
2025-03-21 17:47:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:25 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.CategoryController#loadAllCategory(CategoryQuery)
2025-03-21 17:47:25 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:25 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@175da575] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:25 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:25 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2092632467 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:25 [DEBUG][com.easyjob.mappers.CategoryMapper.selectList][debug][159]-> ==>  Preparing: SELECT category_id ,category_name,sort,icon_path,bg_color, type FROM category order by sort asc 
2025-03-21 17:47:25 [DEBUG][com.easyjob.mappers.CategoryMapper.selectList][debug][159]-> ==> Parameters: 
2025-03-21 17:47:25 [DEBUG][com.easyjob.mappers.CategoryMapper.selectList][debug][159]-> <==      Total: 9
2025-03-21 17:47:25 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@175da575]
2025-03-21 17:47:25 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:47:25 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@3f46368]
2025-03-21 17:47:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:25 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:47:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:26 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/index/getAllData", parameters={multipart}
2025-03-21 17:47:26 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/index/getAppWeekData", parameters={multipart}
2025-03-21 17:47:26 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/index/getContentWeekData", parameters={multipart}
2025-03-21 17:47:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:26 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.IndexController#getAllData()
2025-03-21 17:47:26 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.IndexController#getAppWeekData()
2025-03-21 17:47:26 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.IndexController#getContentWeekData()
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20dfe301] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a870ede] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d12c99d] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@458467471 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1550693466 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1022127050 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20dfe301]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d12c99d]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a870ede]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f612abf] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@164cd19] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70e4d053] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@950168156 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@3259803 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@914137006 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@164cd19]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f612abf]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70e4d053]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@715fecd7] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ccff1ab] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2885c4af] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@386729105 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@254728355 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1518329385 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ccff1ab]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2885c4af]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@715fecd7]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@526a98b2] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c3f5acf] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53d6623c] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@559639037 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@974737755 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1566639557 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-14(String), 2025-03-14(String)
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@526a98b2]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53d6623c]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c3f5acf]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d8b50d8] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68e91363] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32892713] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1303118039 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1858124228 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1948711599 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32892713]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68e91363]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d8b50d8]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c3d3baf] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a7ad4b1] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c58fe3] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1735865988 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@975748758 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1883177555 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a7ad4b1]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c3d3baf]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c58fe3]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@340d20e6] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@fdedb00] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76f9443d] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2060155159 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2023667082 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1575511958 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76f9443d]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@fdedb00]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@340d20e6]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48994eb6] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ad55972] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3fbc0f36] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1962746676 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1126863859 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1651184183 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-15(String), 2025-03-15(String)
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48994eb6]
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ad55972]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3fbc0f36]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@519efa85] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7351de9e] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c5c98e] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1399911166 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1667176271 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1558164351 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@519efa85]
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7351de9e]
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d9a3872] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c5c98e]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@541fb05a] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f4a19ce] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1006019478 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@700920169 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@49163280 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d9a3872]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@541fb05a]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f4a19ce]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d378b6c] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a4e4b41] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b73bebf] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@564295440 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1169535407 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@38225643 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer)
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d378b6c]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a4e4b41]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b73bebf]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ace33ac] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ca2e6fe] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d2e8db7] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@75409512 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@997439858 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1528709355 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-16(String), 2025-03-16(String)
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ca2e6fe]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ace33ac]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d2e8db7]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ec9e202] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a99c44f] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@12d3c3f3]
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1166504499 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@868464542 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 17:47:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ec9e202]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a99c44f]
2025-03-21 17:47:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ab70a5a] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@485c13eb] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2076128508 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@738397459 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 17:47:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@485c13eb]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ab70a5a]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c0d435c] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:47:26 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@5a65b0d]
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2130338141 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:26 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 17:47:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c0d435c]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47360723] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1101507386 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-17(String), 2025-03-17(String)
2025-03-21 17:47:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47360723]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15f6c01d] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1653527199 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15f6c01d]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@241afe9e] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@122631208 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@241afe9e]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6fedf5b0] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@477108445 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6fedf5b0]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79994b83] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2044293493 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-18(String), 2025-03-18(String)
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79994b83]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37d352b] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@806073236 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37d352b]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ea73e27] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@337221813 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ea73e27]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2222fd42] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1706273063 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2222fd42]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c405e85] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1774022818 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-19(String), 2025-03-19(String)
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c405e85]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16c712e9] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1210962626 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16c712e9]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23f01a7a] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@227415223 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23f01a7a]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5dea4dca] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2120921031 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5dea4dca]
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33ff082c] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1014273924 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:26 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33ff082c]
2025-03-21 17:47:26 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:47:26 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@752d3a0d]
2025-03-21 17:47:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:26 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:47:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:27 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/category/loadAllCategory", parameters={multipart}
2025-03-21 17:47:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:27 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.CategoryController#loadAllCategory(CategoryQuery)
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e57faff] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@825023195 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.CategoryMapper.selectList][debug][159]-> ==>  Preparing: SELECT category_id ,category_name,sort,icon_path,bg_color, type FROM category order by sort asc 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.CategoryMapper.selectList][debug][159]-> ==> Parameters: 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.CategoryMapper.selectList][debug][159]-> <==      Total: 9
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e57faff]
2025-03-21 17:47:27 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:47:27 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@238ca9ee]
2025-03-21 17:47:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:27 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:47:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:27 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/index/getAppWeekData", parameters={multipart}
2025-03-21 17:47:27 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/index/getAllData", parameters={multipart}
2025-03-21 17:47:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:27 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.IndexController#getAppWeekData()
2025-03-21 17:47:27 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.IndexController#getAllData()
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1addf17] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4007bd89] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/index/getContentWeekData", parameters={multipart}
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@357495171 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1129193683 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 17:47:27 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.IndexController#getContentWeekData()
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1addf17]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4007bd89]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7bc91817] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b1fc65f] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59f7d4dc] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@686205588 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1756084579 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1223378390 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7bc91817]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59f7d4dc]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b1fc65f]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@172518b9] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2785b616] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28dd07f] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@606057450 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1206240079 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1085527822 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@172518b9]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28dd07f]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2785b616]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@412bac65] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@779d3ad8] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24158844] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1215802001 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2129957929 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2107770683 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@779d3ad8]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@412bac65]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24158844]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@561f1a44] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1edb944b] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53f082a4] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1221239205 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@42949489 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1529833270 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-14(String), 2025-03-14(String)
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53f082a4]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1edb944b]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@561f1a44]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d1deb] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10a2ab23] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b742a4d] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1472154348 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@353880669 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1377377456 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b742a4d]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d1deb]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10a2ab23]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ad175be] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@127a7486] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@747d78b8] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2054209895 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1357711595 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1904426663 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ad175be]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@747d78b8]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@127a7486]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d5c6b8f] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f9c1f24] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c0841a2] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@764921569 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1587672556 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1920689700 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d5c6b8f]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f9c1f24]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c0841a2]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5bc473b5] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67c8ae1] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e3dfd74] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@9878592 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1430944593 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2036781109 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-15(String), 2025-03-15(String)
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5bc473b5]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e3dfd74]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67c8ae1]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4eb8098d] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56504af8] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@406877ed] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@907645492 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@882501969 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@33547465 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4eb8098d]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56504af8]
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77d9973] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@406877ed]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19c9a1cd] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9b5b6ca] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@159845488 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? 
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1293565830 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@182550286 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer)
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77d9973]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c8fc332] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19c9a1cd]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9b5b6ca]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46f7af54] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@315db7d9] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1473405905 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@316975502 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@368727262 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c8fc332]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46f7af54]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@315db7d9]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2caeedb1] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50396e78] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@3816c5d6]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1473804927 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@201779417 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-16(String), 2025-03-16(String)
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2caeedb1]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50396e78]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c379b1a] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4dfaa970] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1194278472 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1454064665 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 17:47:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4dfaa970]
2025-03-21 17:47:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c379b1a]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ba1f56c] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:47:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:27 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@4ee7bea5]
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@737034313 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:27 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 17:47:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ba1f56c]
2025-03-21 17:47:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@439111cc] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1193248327 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 17:47:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@439111cc]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64ed22c4] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@792281316 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-17(String), 2025-03-17(String)
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64ed22c4]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@599ffbc8] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1416169789 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@599ffbc8]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5bc055fe] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2099754229 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5bc055fe]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42635067] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@466977392 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42635067]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6160cb1e] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@962092861 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-18(String), 2025-03-18(String)
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6160cb1e]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d207247] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@452951750 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d207247]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23ad01ff] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1566698887 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23ad01ff]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@763e38d2] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1029143827 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@763e38d2]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1efd9210] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@419611061 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-19(String), 2025-03-19(String)
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1efd9210]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@350eee95] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1200723766 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@350eee95]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b2a88e9] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1225958751 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b2a88e9]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45ef5313] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@442361479 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45ef5313]
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49dcb1b6] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1981023317 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:27 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49dcb1b6]
2025-03-21 17:47:27 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:47:27 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@93d6281]
2025-03-21 17:47:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:27 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:47:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:28 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> GET "/api/checkCode?time=1742550448153", parameters={masked}
2025-03-21 17:47:28 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:28 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.LoginController#checkCode(HttpServletResponse, HttpSession)
2025-03-21 17:47:28 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:28 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:28 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:28 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:28 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:28 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:28 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:28 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:47:28 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:30 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> GET "/api/checkCode?time=1742550450123", parameters={masked}
2025-03-21 17:47:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:30 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.LoginController#checkCode(HttpServletResponse, HttpSession)
2025-03-21 17:47:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:30 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:47:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:30 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/index/getAllData", parameters={multipart}
2025-03-21 17:47:30 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/index/getAppWeekData", parameters={multipart}
2025-03-21 17:47:30 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/index/getContentWeekData", parameters={multipart}
2025-03-21 17:47:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:30 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.IndexController#getAllData()
2025-03-21 17:47:30 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.IndexController#getContentWeekData()
2025-03-21 17:47:30 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.IndexController#getAppWeekData()
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2bd308d1] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70db370b] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70528394] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@580736196 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@345615515 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@24224400 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device 
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70528394]
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2bd308d1]
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70db370b]
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a1480b2] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a619a85] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74e6de81] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1416375032 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@778656236 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1872314532 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a619a85]
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74e6de81]
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a1480b2]
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48cd88bf] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58ad3992] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f3b63e4] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@247367313 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@452847312 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1369729441 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info 
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f3b63e4]
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48cd88bf]
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58ad3992]
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@356e7e6] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@737cacc1] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c000b74] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@133595179 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1473268321 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1842403535 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-14(String), 2025-03-14(String)
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@737cacc1]
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@356e7e6]
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c000b74]
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@149ba512] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ff24d4] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@776bfe04] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@43452900 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1534641396 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1136025304 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info 
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@776bfe04]
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ff24d4]
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@149ba512]
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d42eaf6] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b46a747] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c6ab68d] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1165075076 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@898645799 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@635560319 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d42eaf6]
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b46a747]
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c6ab68d]
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@579b4b38] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23f25a7a] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@562e3c53] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@770973287 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2144937669 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1298181596 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question 
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@579b4b38]
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@562e3c53]
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23f25a7a]
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@520d170c] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52ad662e] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41574cf7] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1975915660 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1606567166 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1883766573 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-15(String), 2025-03-15(String)
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41574cf7]
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@520d170c]
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52ad662e]
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d7cca45] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@785dcfd5] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2acae825] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1112674981 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@641140201 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@334456644 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info 
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2acae825]
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@785dcfd5]
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d7cca45]
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ce7230b] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ab4bae4] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ed1264b] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1735582768 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@149184803 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@390265943 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ce7230b]
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ab4bae4]
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ed1264b]
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78bc238] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a3ccef9] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@212e2051] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@285167612 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1152692228 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@630209216 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? 
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer)
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78bc238]
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a3ccef9]
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@212e2051]
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d735fe3] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@212e48f7] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68d46b53] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@770249005 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@942203568 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@875612791 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-16(String), 2025-03-16(String)
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d735fe3]
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@212e48f7]
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68d46b53]
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@511c8c67] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b5b1dc1] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:30 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:47:30 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@2acbc8f8]
2025-03-21 17:47:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1545650958 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@442100708 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@511c8c67]
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b5b1dc1]
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@565c06b6] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@673ff000] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1662441390 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@351882291 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 17:47:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@673ff000]
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@565c06b6]
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@edd7f19] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:30 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:47:30 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@2ec6d0ec]
2025-03-21 17:47:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@948085186 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 17:47:30 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:47:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@edd7f19]
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73904b89] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@374396757 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-17(String), 2025-03-17(String)
2025-03-21 17:47:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73904b89]
2025-03-21 17:47:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3353b73b] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1114537691 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 17:47:30 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:47:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3353b73b]
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6696479a] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1221778972 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6696479a]
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c87eceb] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1484374134 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:30 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 17:47:31 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:31 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c87eceb]
2025-03-21 17:47:31 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:31 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@201346c1] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:31 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:31 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@322967196 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:31 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:31 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-18(String), 2025-03-18(String)
2025-03-21 17:47:31 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:31 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@201346c1]
2025-03-21 17:47:31 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:31 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2dbbbe13] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:31 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:31 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@388284459 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:31 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:31 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 17:47:31 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:31 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2dbbbe13]
2025-03-21 17:47:31 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:31 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61fd1541] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:31 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:31 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@298218571 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:31 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:31 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 17:47:31 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:31 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61fd1541]
2025-03-21 17:47:31 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:31 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a0e6197] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:31 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:31 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@869285002 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:31 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:31 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 17:47:31 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:31 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a0e6197]
2025-03-21 17:47:31 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:31 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27ac37ae] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:31 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:31 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1852307477 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:31 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:31 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-19(String), 2025-03-19(String)
2025-03-21 17:47:31 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:31 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27ac37ae]
2025-03-21 17:47:31 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:31 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e417efe] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:31 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:31 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@949364703 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:31 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:31 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:31 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:31 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e417efe]
2025-03-21 17:47:31 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:31 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@383907ce] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:31 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:31 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1308244153 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:31 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:31 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:31 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:31 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@383907ce]
2025-03-21 17:47:31 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:31 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2be89582] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:31 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:31 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1528819782 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:31 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:31 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:31 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:31 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2be89582]
2025-03-21 17:47:31 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:31 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@594931eb] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:31 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:31 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@920845253 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:31 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:31 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:31 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:31 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@594931eb]
2025-03-21 17:47:31 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:47:31 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@34e2f9fc]
2025-03-21 17:47:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:31 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:47:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:32 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> GET "/api/checkCode?time=1742550452669", parameters={masked}
2025-03-21 17:47:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:32 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.LoginController#checkCode(HttpServletResponse, HttpSession)
2025-03-21 17:47:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:32 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:47:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:43 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/login", parameters={multipart}
2025-03-21 17:47:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.LoginController#login(HttpSession, String, String, String)
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a3d95e2] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1923556648 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.SysAccountMapper.selectByPhone][debug][159]-> ==>  Preparing: select user_id ,phone,user_name,password,position, status,roles,create_time from sys_account where phone=? 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.SysAccountMapper.selectByPhone][debug][159]-> ==> Parameters: 18688886666(String)
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.SysAccountMapper.selectByPhone][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a3d95e2]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c11ff83] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1813810226 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.SysMenuMapper.selectList][debug][159]-> ==>  Preparing: SELECT menu_id ,menu_name,menu_type,menu_url,p_id, sort,permission_code,icon FROM sys_menu order by sort asc 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.SysMenuMapper.selectList][debug][159]-> ==> Parameters: 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.SysMenuMapper.selectList][debug][159]-> <==      Total: 46
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c11ff83]
2025-03-21 17:47:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:47:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@329459d8]
2025-03-21 17:47:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:43 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:47:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:43 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/index/getAppWeekData", parameters={multipart}
2025-03-21 17:47:43 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/index/getAllData", parameters={multipart}
2025-03-21 17:47:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:43 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/index/getContentWeekData", parameters={multipart}
2025-03-21 17:47:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.IndexController#getContentWeekData()
2025-03-21 17:47:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.IndexController#getAppWeekData()
2025-03-21 17:47:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.IndexController#getAllData()
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6eabc9c0] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45e58c65] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@574bcd7c] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1941419055 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1810216776 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1899759782 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@574bcd7c]
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6eabc9c0]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45e58c65]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34fbbc82] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57625c33] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@eb56693] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@596128940 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1037219660 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1088968767 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34fbbc82]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57625c33]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28b3fb2d] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@399c4980] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@eb56693]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64aa04b5] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2086279492 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1095064853 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1091462989 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@399c4980]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28b3fb2d]
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@772e361f] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@497f6f41] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@749052211 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2116198352 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64aa04b5]
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-14(String), 2025-03-14(String)
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@127992da] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@772e361f]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@497f6f41]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@641905548 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35c0a629] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53f2c034] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@861462592 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1631959148 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@127992da]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78ba6203] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35c0a629]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53f2c034]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a4adf78] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3863bd69] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@646697100 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1242288118 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2111121713 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78ba6203]
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3863bd69]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a4adf78]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25f24314] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21c01eb8] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27d0fc99] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@242452435 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@74282780 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@189613572 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25f24314]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21c01eb8]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27d0fc99]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5589d02a] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a310eba] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a7dced2] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1649726316 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1000732314 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@711581488 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-15(String), 2025-03-15(String)
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5589d02a]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a310eba]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a7dced2]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2791efeb] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e100ea5] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ecaeef9] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1015182259 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1011253507 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1520811180 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ecaeef9]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2791efeb]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e100ea5]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54c1aeda] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b493b7b] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16e2bc1] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2080898334 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@849193933 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@790984815 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54c1aeda]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16e2bc1]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b493b7b]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63c9aab4] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@121cedc3] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@708aec0c] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1644860293 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1658645602 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@975667049 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer)
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@708aec0c]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@121cedc3]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63c9aab4]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2927ecc7] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@126122ff] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5cb71ba2] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@250257251 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1012114957 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@699434754 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-16(String), 2025-03-16(String)
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2927ecc7]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5cb71ba2]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@126122ff]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a10eedb] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1871fd3c] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@31ab938c]
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@60576279 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1579059248 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 17:47:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1871fd3c]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a10eedb]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6dc931b7] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9c6143a] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2059839791 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@874333679 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 17:47:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6dc931b7]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9c6143a]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e5db78f] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@311ff343] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1790796666 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@138495646 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:43 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:47:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@311ff343]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e5db78f]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8b92c71] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@64938be6]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1181897678 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-17(String), 2025-03-17(String)
2025-03-21 17:47:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8b92c71]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78d61784] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@961377867 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 17:47:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78d61784]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@559bfd1] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1299968713 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@559bfd1]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f976eb0] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@393803172 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f976eb0]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2baf04a9] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1336483202 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-18(String), 2025-03-18(String)
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2baf04a9]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2712e1ab] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1951085484 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2712e1ab]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cfa53e9] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1020650596 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cfa53e9]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29b2e5ab] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2005503599 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29b2e5ab]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6105ecc] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@951155736 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-19(String), 2025-03-19(String)
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6105ecc]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20c4885] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@107909174 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20c4885]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35c0e8b6] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1441318635 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35c0e8b6]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71456474] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1139976114 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71456474]
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5fde08fd] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@90354102 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:47:43 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5fde08fd]
2025-03-21 17:47:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:47:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@7417be6f]
2025-03-21 17:47:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:43 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:47:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:47 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/category/loadAllCategory", parameters={multipart}
2025-03-21 17:47:47 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.CategoryController#loadAllCategory(CategoryQuery)
2025-03-21 17:47:47 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:47 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@796c9aad] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:47 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:47 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1979636630 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:47 [DEBUG][com.easyjob.mappers.CategoryMapper.selectList][debug][159]-> ==>  Preparing: SELECT category_id ,category_name,sort,icon_path,bg_color, type FROM category order by sort asc 
2025-03-21 17:47:47 [DEBUG][com.easyjob.mappers.CategoryMapper.selectList][debug][159]-> ==> Parameters: 
2025-03-21 17:47:47 [DEBUG][com.easyjob.mappers.CategoryMapper.selectList][debug][159]-> <==      Total: 9
2025-03-21 17:47:47 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@796c9aad]
2025-03-21 17:47:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:47:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@7b51b44]
2025-03-21 17:47:47 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:47 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:47 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:47 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:47 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:47 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:47 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:47 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:47:47 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 17:47:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 17:47:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 17:47:51 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/questionInfo/loadDataList", parameters={multipart}
2025-03-21 17:47:51 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/category/loadAllCategory4Select", parameters={multipart}
2025-03-21 17:47:51 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:51 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:51 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.QuestionInfoController#loadDataList(QuestionInfoQuery)
2025-03-21 17:47:51 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.CategoryController#loadAllCategory4Select(Integer)
2025-03-21 17:47:51 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:51 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7173f096] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:51 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:51 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a162c2d] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:51 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:51 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:51 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@331550525 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:47:51 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2003682037 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:51 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info 
2025-03-21 17:47:51 [DEBUG][com.easyjob.mappers.CategoryMapper.selectList][debug][159]-> ==>  Preparing: SELECT category_id ,category_name,sort,icon_path,bg_color, type FROM category WHERE type in(?,?) order by sort asc 
2025-03-21 17:47:51 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:47:51 [DEBUG][com.easyjob.mappers.CategoryMapper.selectList][debug][159]-> ==> Parameters: 0(Integer), 2(Integer)
2025-03-21 17:47:51 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:47:51 [DEBUG][com.easyjob.mappers.CategoryMapper.selectList][debug][159]-> <==      Total: 9
2025-03-21 17:47:51 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a162c2d]
2025-03-21 17:47:51 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7173f096]
2025-03-21 17:47:51 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:51 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:47:51 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47cc3156] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:51 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@94f6e76]
2025-03-21 17:47:51 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:51 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:51 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@40187617 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:47:51 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectList][debug][159]-> ==>  Preparing: SELECT question_id ,title,category_id,category_name,difficulty_level,create_time,status,create_user_id, create_user_name,read_count,collect_count,post_user_type ,question,answer_analysis FROM question_info order by question_id desc limit ?,? 
2025-03-21 17:47:51 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectList][debug][159]-> ==> Parameters: 0(Integer), 15(Integer)
2025-03-21 17:47:51 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:51 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:51 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:51 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:51 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:51 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:51 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:47:51 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:51 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectList][debug][159]-> <==      Total: 15
2025-03-21 17:47:51 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47cc3156]
2025-03-21 17:47:51 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:47:51 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@500a6f3b]
2025-03-21 17:47:51 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:51 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:51 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:51 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:51 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:51 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:51 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:51 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:47:51 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:53 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/category/loadAllCategory", parameters={multipart}
2025-03-21 17:47:53 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:53 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.CategoryController#loadAllCategory(CategoryQuery)
2025-03-21 17:47:53 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:47:53 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60dd4dfb] was not registered for synchronization because synchronization is not active
2025-03-21 17:47:53 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:47:53 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@203870099 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:47:53 [DEBUG][com.easyjob.mappers.CategoryMapper.selectList][debug][159]-> ==>  Preparing: SELECT category_id ,category_name,sort,icon_path,bg_color, type FROM category order by sort asc 
2025-03-21 17:47:53 [DEBUG][com.easyjob.mappers.CategoryMapper.selectList][debug][159]-> ==> Parameters: 
2025-03-21 17:47:53 [DEBUG][com.easyjob.mappers.CategoryMapper.selectList][debug][159]-> <==      Total: 9
2025-03-21 17:47:53 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60dd4dfb]
2025-03-21 17:47:53 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:47:53 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@5b5af1e9]
2025-03-21 17:47:53 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:53 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:53 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:53 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:53 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:53 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:53 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:47:53 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:47:53 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 17:48:00 CST 2025
2025-03-21 17:48:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:01 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/category/loadAllCategory4Select", parameters={multipart}
2025-03-21 17:48:01 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/questionInfo/loadDataList", parameters={multipart}
2025-03-21 17:48:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:01 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.QuestionInfoController#loadDataList(QuestionInfoQuery)
2025-03-21 17:48:01 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:48:01 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@774afa97] was not registered for synchronization because synchronization is not active
2025-03-21 17:48:01 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.CategoryController#loadAllCategory4Select(Integer)
2025-03-21 17:48:01 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:48:01 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:48:01 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@693781b2] was not registered for synchronization because synchronization is not active
2025-03-21 17:48:01 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@471416845 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:48:01 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info 
2025-03-21 17:48:01 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:48:01 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:48:01 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@666385295 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:48:01 [DEBUG][com.easyjob.mappers.CategoryMapper.selectList][debug][159]-> ==>  Preparing: SELECT category_id ,category_name,sort,icon_path,bg_color, type FROM category WHERE type in(?,?) order by sort asc 
2025-03-21 17:48:01 [DEBUG][com.easyjob.mappers.CategoryMapper.selectList][debug][159]-> ==> Parameters: 0(Integer), 2(Integer)
2025-03-21 17:48:01 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:48:01 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@774afa97]
2025-03-21 17:48:01 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:48:01 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61fb3e3c] was not registered for synchronization because synchronization is not active
2025-03-21 17:48:01 [DEBUG][com.easyjob.mappers.CategoryMapper.selectList][debug][159]-> <==      Total: 9
2025-03-21 17:48:01 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@693781b2]
2025-03-21 17:48:01 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:48:01 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1312331631 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:48:01 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:48:01 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectList][debug][159]-> ==>  Preparing: SELECT question_id ,title,category_id,category_name,difficulty_level,create_time,status,create_user_id, create_user_name,read_count,collect_count,post_user_type ,question,answer_analysis FROM question_info order by question_id desc limit ?,? 
2025-03-21 17:48:01 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@7509e5eb]
2025-03-21 17:48:01 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectList][debug][159]-> ==> Parameters: 0(Integer), 15(Integer)
2025-03-21 17:48:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:01 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:48:01 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectList][debug][159]-> <==      Total: 15
2025-03-21 17:48:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:01 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61fb3e3c]
2025-03-21 17:48:01 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:48:01 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@25fec1d0]
2025-03-21 17:48:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:01 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:48:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:01 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/examQuestion/loadDataList", parameters={multipart}
2025-03-21 17:48:01 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/category/loadAllCategory4Select", parameters={multipart}
2025-03-21 17:48:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:01 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.ExamQuestionController#loadDataList(ExamQuestionQuery)
2025-03-21 17:48:01 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.CategoryController#loadAllCategory4Select(Integer)
2025-03-21 17:48:01 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:48:01 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@647a0c49] was not registered for synchronization because synchronization is not active
2025-03-21 17:48:01 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:48:01 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1272272355 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:48:01 [DEBUG][com.easyjob.mappers.CategoryMapper.selectList][debug][159]-> ==>  Preparing: SELECT category_id ,category_name,sort,icon_path,bg_color, type FROM category WHERE type in(?,?) order by sort asc 
2025-03-21 17:48:01 [DEBUG][com.easyjob.mappers.CategoryMapper.selectList][debug][159]-> ==> Parameters: 1(Integer), 2(Integer)
2025-03-21 17:48:01 [DEBUG][com.easyjob.mappers.CategoryMapper.selectList][debug][159]-> <==      Total: 9
2025-03-21 17:48:01 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@647a0c49]
2025-03-21 17:48:01 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:48:01 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@58b894eb]
2025-03-21 17:48:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:01 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:48:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:01 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:48:01 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7dd6ae4a] was not registered for synchronization because synchronization is not active
2025-03-21 17:48:01 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:48:01 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2064328556 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:48:01 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question 
2025-03-21 17:48:01 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:48:01 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:48:01 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7dd6ae4a]
2025-03-21 17:48:01 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:48:01 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40d9f643] was not registered for synchronization because synchronization is not active
2025-03-21 17:48:01 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:48:01 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@973835930 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:48:01 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectList][debug][159]-> ==>  Preparing: SELECT question_id ,title,category_id,category_name,difficulty_level, question_type,question,create_time, status,create_user_id,create_user_name,post_user_type ,question_answer,answer_analysis FROM exam_question order by question_id desc limit ?,? 
2025-03-21 17:48:01 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectList][debug][159]-> ==> Parameters: 0(Integer), 15(Integer)
2025-03-21 17:48:01 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectList][debug][159]-> <==      Total: 15
2025-03-21 17:48:01 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40d9f643]
2025-03-21 17:48:01 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:48:01 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@3de68227]
2025-03-21 17:48:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:01 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:48:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 17:48:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 17:48:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 17:48:24 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/shareInfo/loadDataList", parameters={multipart}
2025-03-21 17:48:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:24 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.ShareInfoController#loadDataList(ShareInfoQuery)
2025-03-21 17:48:24 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:48:24 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@727589b7] was not registered for synchronization because synchronization is not active
2025-03-21 17:48:24 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:48:24 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1258445771 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:48:24 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info 
2025-03-21 17:48:24 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:48:24 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:48:24 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@727589b7]
2025-03-21 17:48:24 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:48:24 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10dd01b7] was not registered for synchronization because synchronization is not active
2025-03-21 17:48:24 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:48:24 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@340276430 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:48:24 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectList][debug][159]-> ==>  Preparing: SELECT share_id ,title,cover_type,cover_path, create_time,status,create_user_id,create_user_name,read_count, collect_count,post_user_type ,content FROM share_info order by share_id desc limit ?,? 
2025-03-21 17:48:24 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectList][debug][159]-> ==> Parameters: 0(Integer), 15(Integer)
2025-03-21 17:48:24 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectList][debug][159]-> <==      Total: 3
2025-03-21 17:48:24 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10dd01b7]
2025-03-21 17:48:24 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:48:24 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@5bef65e1]
2025-03-21 17:48:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:24 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:48:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:26 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/appUser/loadDeviceList", parameters={multipart}
2025-03-21 17:48:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:26 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.AppUserInfoController#loadDeviceList(AppDeviceQuery)
2025-03-21 17:48:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:48:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b4d1993] was not registered for synchronization because synchronization is not active
2025-03-21 17:48:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:48:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1685274394 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:48:26 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device 
2025-03-21 17:48:26 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:48:26 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:48:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b4d1993]
2025-03-21 17:48:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:48:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4429cf9a] was not registered for synchronization because synchronization is not active
2025-03-21 17:48:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:48:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@802057467 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:48:26 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectList][debug][159]-> ==>  Preparing: SELECT device_id,device_brand,create_time,last_use_time,ip FROM app_device order by create_time desc limit ?,? 
2025-03-21 17:48:26 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectList][debug][159]-> ==> Parameters: 0(Integer), 15(Integer)
2025-03-21 17:48:26 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectList][debug][159]-> <==      Total: 3
2025-03-21 17:48:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4429cf9a]
2025-03-21 17:48:26 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:48:26 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@2bd1d482]
2025-03-21 17:48:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:26 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:48:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:29 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/appUser/loadDataList", parameters={multipart}
2025-03-21 17:48:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:29 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.AppUserInfoController#loadDataList(AppUserInfoQuery)
2025-03-21 17:48:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:48:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3199bea0] was not registered for synchronization because synchronization is not active
2025-03-21 17:48:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:48:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@955490111 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:48:29 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info 
2025-03-21 17:48:29 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:48:29 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:48:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3199bea0]
2025-03-21 17:48:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:48:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15230f44] was not registered for synchronization because synchronization is not active
2025-03-21 17:48:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:48:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1879505105 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:48:29 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectList][debug][159]-> ==>  Preparing: SELECT user_id,email,nick_name,avatar,password, sex,join_time,last_login_time,last_use_device_id,last_use_device_brand, last_login_ip,status FROM app_user_info order by join_time desc limit ?,? 
2025-03-21 17:48:29 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectList][debug][159]-> ==> Parameters: 0(Integer), 15(Integer)
2025-03-21 17:48:29 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectList][debug][159]-> <==      Total: 0
2025-03-21 17:48:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15230f44]
2025-03-21 17:48:29 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:48:29 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@693cd620]
2025-03-21 17:48:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:29 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:48:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:31 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/appCarousel/loadDataList", parameters={multipart}
2025-03-21 17:48:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:31 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.AppCarouselController#loadDataList(AppCarouselQuery)
2025-03-21 17:48:31 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:48:31 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@643199c1] was not registered for synchronization because synchronization is not active
2025-03-21 17:48:31 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:48:31 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1694753309 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:48:31 [DEBUG][com.easyjob.mappers.AppCarouselMapper.selectList][debug][159]-> ==>  Preparing: SELECT carousel_id,img_path,object_type,object_id,outer_link, sort FROM app_carousel order by sort asc 
2025-03-21 17:48:31 [DEBUG][com.easyjob.mappers.AppCarouselMapper.selectList][debug][159]-> ==> Parameters: 
2025-03-21 17:48:31 [DEBUG][com.easyjob.mappers.AppCarouselMapper.selectList][debug][159]-> <==      Total: 4
2025-03-21 17:48:31 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@643199c1]
2025-03-21 17:48:31 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:48:31 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@60cbea99]
2025-03-21 17:48:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:31 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:48:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:33 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/appFeedback/loadFeedback", parameters={multipart}
2025-03-21 17:48:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:33 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.AppFeedbackController#loadFeedback(AppFeedbackQuery)
2025-03-21 17:48:33 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:48:33 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ac41bff] was not registered for synchronization because synchronization is not active
2025-03-21 17:48:33 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:48:33 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@792110290 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:48:33 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? 
2025-03-21 17:48:33 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer)
2025-03-21 17:48:33 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:48:33 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ac41bff]
2025-03-21 17:48:33 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:48:33 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@390b2af4] was not registered for synchronization because synchronization is not active
2025-03-21 17:48:33 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:48:33 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@595663155 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:48:33 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectList][debug][159]-> ==>  Preparing: SELECT feedback_id,user_id,nick_name,content,create_time, p_feedback_id,status,send_type,client_last_send_time FROM app_feedback WHERE p_feedback_id = ? order by feedback_id desc limit ?,? 
2025-03-21 17:48:33 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectList][debug][159]-> ==> Parameters: 0(Integer), 0(Integer), 15(Integer)
2025-03-21 17:48:33 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectList][debug][159]-> <==      Total: 0
2025-03-21 17:48:33 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@390b2af4]
2025-03-21 17:48:33 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:48:33 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@1645b7e3]
2025-03-21 17:48:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:33 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:48:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:33 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/app/loadDataList", parameters={multipart}
2025-03-21 17:48:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:33 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.AppUpdateController#loadDataList(AppUpdateQuery)
2025-03-21 17:48:33 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:48:33 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72cf0895] was not registered for synchronization because synchronization is not active
2025-03-21 17:48:33 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:48:33 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1224249016 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:48:33 [DEBUG][com.easyjob.mappers.AppUpdateMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_update 
2025-03-21 17:48:33 [DEBUG][com.easyjob.mappers.AppUpdateMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:48:33 [DEBUG][com.easyjob.mappers.AppUpdateMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:48:33 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72cf0895]
2025-03-21 17:48:33 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:48:33 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ffaa169] was not registered for synchronization because synchronization is not active
2025-03-21 17:48:33 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:48:33 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@725279535 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:48:33 [DEBUG][com.easyjob.mappers.AppUpdateMapper.selectList][debug][159]-> ==>  Preparing: SELECT id ,version,update_desc,update_type,create_time, status,grayscale_device FROM app_update order by id desc limit ?,? 
2025-03-21 17:48:33 [DEBUG][com.easyjob.mappers.AppUpdateMapper.selectList][debug][159]-> ==> Parameters: 0(Integer), 15(Integer)
2025-03-21 17:48:33 [DEBUG][com.easyjob.mappers.AppUpdateMapper.selectList][debug][159]-> <==      Total: 0
2025-03-21 17:48:33 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ffaa169]
2025-03-21 17:48:33 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:48:33 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@7ece9fa8]
2025-03-21 17:48:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:33 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:48:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:35 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/settings/menuList", parameters={multipart}
2025-03-21 17:48:35 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:35 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.SysMenuController#menuList()
2025-03-21 17:48:35 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:48:35 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43322ef2] was not registered for synchronization because synchronization is not active
2025-03-21 17:48:35 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:48:35 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@888167072 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:48:35 [DEBUG][com.easyjob.mappers.SysMenuMapper.selectList][debug][159]-> ==>  Preparing: SELECT menu_id ,menu_name,menu_type,menu_url,p_id, sort,permission_code,icon FROM sys_menu order by sort asc 
2025-03-21 17:48:35 [DEBUG][com.easyjob.mappers.SysMenuMapper.selectList][debug][159]-> ==> Parameters: 
2025-03-21 17:48:35 [DEBUG][com.easyjob.mappers.SysMenuMapper.selectList][debug][159]-> <==      Total: 46
2025-03-21 17:48:35 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43322ef2]
2025-03-21 17:48:35 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:48:35 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@6a116851]
2025-03-21 17:48:35 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:35 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:35 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:35 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:35 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:35 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:35 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:35 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:48:35 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:43 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/settings/menuList", parameters={multipart}
2025-03-21 17:48:43 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/settings/loadRoles", parameters={multipart}
2025-03-21 17:48:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.SysMenuController#menuList()
2025-03-21 17:48:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.SysRoleController#loadRoles(SysRoleQuery)
2025-03-21 17:48:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:48:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ba73598] was not registered for synchronization because synchronization is not active
2025-03-21 17:48:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:48:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1803962835 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:48:43 [DEBUG][com.easyjob.mappers.SysMenuMapper.selectList][debug][159]-> ==>  Preparing: SELECT menu_id ,menu_name,menu_type,menu_url,p_id, sort,permission_code,icon FROM sys_menu order by sort asc 
2025-03-21 17:48:43 [DEBUG][com.easyjob.mappers.SysMenuMapper.selectList][debug][159]-> ==> Parameters: 
2025-03-21 17:48:43 [DEBUG][com.easyjob.mappers.SysMenuMapper.selectList][debug][159]-> <==      Total: 46
2025-03-21 17:48:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ba73598]
2025-03-21 17:48:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:48:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@5525d32]
2025-03-21 17:48:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:48:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fd868d8] was not registered for synchronization because synchronization is not active
2025-03-21 17:48:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:48:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@665395263 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:48:43 [DEBUG][com.easyjob.mappers.SysRoleMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM sys_role 
2025-03-21 17:48:43 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:48:43 [DEBUG][com.easyjob.mappers.SysRoleMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:48:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:43 [DEBUG][com.easyjob.mappers.SysRoleMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:48:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fd868d8]
2025-03-21 17:48:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:48:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25b2111b] was not registered for synchronization because synchronization is not active
2025-03-21 17:48:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:48:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1182920583 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:48:43 [DEBUG][com.easyjob.mappers.SysRoleMapper.selectList][debug][159]-> ==>  Preparing: SELECT role_id,role_name,role_desc,create_time,last_update_time FROM sys_role order by create_time desc limit ?,? 
2025-03-21 17:48:43 [DEBUG][com.easyjob.mappers.SysRoleMapper.selectList][debug][159]-> ==> Parameters: 0(Integer), 15(Integer)
2025-03-21 17:48:43 [DEBUG][com.easyjob.mappers.SysRoleMapper.selectList][debug][159]-> <==      Total: 2
2025-03-21 17:48:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25b2111b]
2025-03-21 17:48:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:48:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@500da06d]
2025-03-21 17:48:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:43 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:48:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:43 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/settings/getRoleByRoleId", parameters={multipart}
2025-03-21 17:48:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.SysRoleController#getRoleByRoleId(Integer)
2025-03-21 17:48:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:48:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a5cf046] was not registered for synchronization because synchronization is not active
2025-03-21 17:48:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:48:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@687723163 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:48:43 [DEBUG][com.easyjob.mappers.SysRoleMapper.selectByRoleId][debug][159]-> ==>  Preparing: select role_id,role_name,role_desc,create_time,last_update_time from sys_role where role_id=? 
2025-03-21 17:48:43 [DEBUG][com.easyjob.mappers.SysRoleMapper.selectByRoleId][debug][159]-> ==> Parameters: 1001(Integer)
2025-03-21 17:48:43 [DEBUG][com.easyjob.mappers.SysRoleMapper.selectByRoleId][debug][159]-> <==      Total: 1
2025-03-21 17:48:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a5cf046]
2025-03-21 17:48:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:48:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@330fd8c1] was not registered for synchronization because synchronization is not active
2025-03-21 17:48:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:48:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1581039654 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:48:43 [DEBUG][com.easyjob.mappers.SysRole2MenuMapper.selectMenuIdsByRoleIds][debug][159]-> ==>  Preparing: select menu_id from sys_role_2_menu where role_id in( ? ) and check_type = 1 
2025-03-21 17:48:43 [DEBUG][com.easyjob.mappers.SysRole2MenuMapper.selectMenuIdsByRoleIds][debug][159]-> ==> Parameters: 1001(String)
2025-03-21 17:48:43 [DEBUG][com.easyjob.mappers.SysRole2MenuMapper.selectMenuIdsByRoleIds][debug][159]-> <==      Total: 9
2025-03-21 17:48:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@330fd8c1]
2025-03-21 17:48:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:48:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@46669fc0]
2025-03-21 17:48:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:43 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:48:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:48:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 17:48:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 17:48:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 17:49:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Fri Mar 21 17:49:00 CST 2025
2025-03-21 17:49:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:08 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/settings/saveRoleMenu", parameters={multipart}
2025-03-21 17:49:08 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:08 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.SysRoleController#saveRoleMenu(Integer, String, String)
2025-03-21 17:49:08 [DEBUG][org.springframework.jdbc.support.JdbcTransactionManager][getTransaction][370]-> Creating new transaction with name [com.easyjob.service.impl.SysRoleServiceImpl.saveRoleMenu]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-java.lang.Exception
2025-03-21 17:49:08 [DEBUG][org.springframework.jdbc.support.JdbcTransactionManager][doBegin][271]-> Acquired Connection [HikariProxyConnection@831561508 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] for JDBC transaction
2025-03-21 17:49:08 [DEBUG][org.springframework.jdbc.support.JdbcTransactionManager][doBegin][289]-> Switching JDBC Connection [HikariProxyConnection@831561508 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] to manual commit
2025-03-21 17:49:08 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:08 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][128]-> Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2be973e9]
2025-03-21 17:49:08 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@831561508 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will be managed by Spring
2025-03-21 17:49:08 [DEBUG][com.easyjob.mappers.SysRole2MenuMapper.deleteByParam][debug][159]-> ==>  Preparing: delete from sys_role_2_menu WHERE role_id = ? 
2025-03-21 17:49:08 [DEBUG][com.easyjob.mappers.SysRole2MenuMapper.deleteByParam][debug][159]-> ==> Parameters: 1001(Integer)
2025-03-21 17:49:08 [DEBUG][com.easyjob.mappers.SysRole2MenuMapper.deleteByParam][debug][159]-> <==    Updates: 15
2025-03-21 17:49:08 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][186]-> Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2be973e9]
2025-03-21 17:49:08 [DEBUG][org.mybatis.spring.SqlSessionUtils][sessionHolder][163]-> Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2be973e9] from current transaction
2025-03-21 17:49:08 [DEBUG][com.easyjob.mappers.SysRole2MenuMapper.insertBatch][debug][159]-> ==>  Preparing: INSERT INTO sys_role_2_menu( role_id, menu_id, check_type )values
2025-03-21 17:49:08 [DEBUG][com.easyjob.mappers.SysRole2MenuMapper.insertBatch][debug][159]-> ==> Parameters: 1001(Integer), 0(Integer), 1(Integer), 1001(Integer), 1000(Integer), 1(Integer), 1001(Integer), 1023(Integer), 1(Integer), 1001(Integer), 1001(Integer), 1(Integer), 1001(Integer), 1002(Integer), 1(Integer), 1001(Integer), 1054(Integer), 1(Integer), 1001(Integer), 1006(Integer), 1(Integer), 1001(Integer), 1024(Integer), 1(Integer), 1001(Integer), 1004(Integer), 1(Integer), 1001(Integer), 1007(Integer), 1(Integer), 1001(Integer), 1027(Integer), 1(Integer), 1001(Integer), 1025(Integer), 1(Integer), 1001(Integer), 1026(Integer), 1(Integer), 1001(Integer), 1041(Integer), 1(Integer), 1001(Integer), 1008(Integer), 1(Integer), 1001(Integer), 1029(Integer), 1(Integer), 1001(Integer), 1032(Integer), 1(Integer), 1001(Integer), 1030(Integer), 1(Integer), 1001(Integer), 1031(Integer), 1(Integer), 1001(Integer), 1042(Integer), 1(Integer), 1001(Integer), 1009(Integer), 1(Integer), 1001(Integer), 1034(Integer), 1(Integer), 1001(Integer), 1036(Integer), 1(Integer), 1001(Integer), 1035(Integer), 1(Integer), 1001(Integer), 1043(Integer), 1(Integer), 1001(Integer), 1012(Integer), 1(Integer), 1001(Integer), 1053(Integer), 1(Integer), 1001(Integer), 1011(Integer), 1(Integer), 1001(Integer), 1048(Integer), 1(Integer), 1001(Integer), 1049(Integer), 1(Integer), 1001(Integer), 1050(Integer), 1(Integer), 1001(Integer), 1051(Integer), 1(Integer), 1001(Integer), 1052(Integer), 1(Integer), 1001(Integer), 1013(Integer), 1(Integer), 1001(Integer), 1045(Integer), 1(Integer), 1001(Integer), 1046(Integer), 1(Integer), 1001(Integer), 1014(Integer), 1(Integer), 1001(Integer), 1015(Integer), 1(Integer), 1001(Integer), 1018(Integer), 1(Integer), 1001(Integer), 1016(Integer), 1(Integer), 1001(Integer), 1020(Integer), 1(Integer), 1001(Integer), 1037(Integer), 1(Integer), 1001(Integer), 1017(Integer), 1(Integer), 1001(Integer), 1022(Integer), 1(Integer), 1001(Integer), 1038(Integer), 1(Integer), 1001(Integer), 1039(Integer), 1(Integer), 1001(Integer), 1040(Integer), 1(Integer)
2025-03-21 17:49:08 [DEBUG][com.easyjob.mappers.SysRole2MenuMapper.insertBatch][debug][159]-> <==    Updates: 47
2025-03-21 17:49:08 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][186]-> Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2be973e9]
2025-03-21 17:49:08 [DEBUG][org.mybatis.spring.SqlSessionUtils][beforeCommit][284]-> Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2be973e9]
2025-03-21 17:49:08 [DEBUG][org.mybatis.spring.SqlSessionUtils][beforeCompletion][310]-> Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2be973e9]
2025-03-21 17:49:08 [DEBUG][org.mybatis.spring.SqlSessionUtils][beforeCompletion][315]-> Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2be973e9]
2025-03-21 17:49:08 [DEBUG][org.springframework.jdbc.support.JdbcTransactionManager][processCommit][740]-> Initiating transaction commit
2025-03-21 17:49:08 [DEBUG][org.springframework.jdbc.support.JdbcTransactionManager][doCommit][334]-> Committing JDBC transaction on Connection [HikariProxyConnection@831561508 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a]
2025-03-21 17:49:08 [DEBUG][org.springframework.jdbc.support.JdbcTransactionManager][doCleanupAfterCompletion][393]-> Releasing JDBC Connection [HikariProxyConnection@831561508 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] after transaction
2025-03-21 17:49:08 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:49:08 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@41c3fa7]
2025-03-21 17:49:08 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:08 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:08 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:08 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:08 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:08 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:08 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:08 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:08 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:49:08 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:10 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/index/getAllData", parameters={multipart}
2025-03-21 17:49:10 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/index/getContentWeekData", parameters={multipart}
2025-03-21 17:49:10 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/index/getAppWeekData", parameters={multipart}
2025-03-21 17:49:10 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:10 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:10 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:10 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.IndexController#getContentWeekData()
2025-03-21 17:49:10 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.IndexController#getAllData()
2025-03-21 17:49:10 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.IndexController#getAppWeekData()
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a6e434f] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@642b8a1d] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5830b07e] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1042587240 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1962502639 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1450550146 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a6e434f]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5830b07e]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e318c76] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@642b8a1d]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@696eaaa1] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c5953e3] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1985416624 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@252818208 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@872073042 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@696eaaa1]
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e318c76]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c5953e3]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6565c17] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24117b2d] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e7420b6] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@443663838 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@911282661 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1754571984 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24117b2d]
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6565c17]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e7420b6]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44d519a0] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@683a2ac5] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@589e496] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1806879236 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1547199793 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1779897601 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-14(String), 2025-03-14(String)
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@683a2ac5]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@589e496]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44d519a0]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f27eba5] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@232bdb9b] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a2af36] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@913474694 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1766602300 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1817624219 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@232bdb9b]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f27eba5]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a2af36]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58dfa5ec] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@797d561a] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@555aae28] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1228402771 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@634739311 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1075081386 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@555aae28]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@797d561a]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58dfa5ec]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2181d075] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a7e4843] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4525fac4] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@845127641 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1059814949 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1158555558 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2181d075]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4525fac4]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a7e4843]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3776e64e] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42151303] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e85cf2b] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@671883871 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@408656557 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1985061096 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-15(String), 2025-03-15(String)
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3776e64e]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42151303]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e85cf2b]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@702bc04b] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e41fe15] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30835bb4] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1894718614 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@883323861 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@5187096 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e41fe15]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@702bc04b]
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30835bb4]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39a151ee] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@419d1a47] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10f4d89e] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1749131673 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1872405415 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@973107151 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@419d1a47]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39a151ee]
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10f4d89e]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78559887] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ff1ac25] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c0bc350] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1370745576 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@745316372 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? 
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@437116519 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer)
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78559887]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ff1ac25]
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c0bc350]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44f3ca84] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@545bbd69] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57b3c49f] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1180279619 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@272032573 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@634424442 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-16(String), 2025-03-16(String)
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@545bbd69]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44f3ca84]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57b3c49f]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42e931b4] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27c133d0] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:49:10 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@62de40d3]
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@403989639 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1847561355 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:10 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42e931b4]
2025-03-21 17:49:10 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27c133d0]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@440d45e] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ad0b756] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@263135731 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1679901295 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 17:49:10 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@440d45e]
2025-03-21 17:49:10 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ad0b756]
2025-03-21 17:49:10 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52929f1d] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@69780031]
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@498591774 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:10 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 17:49:10 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:10 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52929f1d]
2025-03-21 17:49:10 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@429fe975] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@78900300 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:10 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-17(String), 2025-03-17(String)
2025-03-21 17:49:10 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:10 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@429fe975]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@abe68f6] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@928513173 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@abe68f6]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3af3a903] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1140039539 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3af3a903]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@aa99655] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@758488498 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@aa99655]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a24d7e0] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1014627791 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-18(String), 2025-03-18(String)
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a24d7e0]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b9ff6ac] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@123253224 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b9ff6ac]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48df35e6] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1817280711 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48df35e6]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f73733e] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@246546739 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f73733e]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65106705] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1096684058 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-19(String), 2025-03-19(String)
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65106705]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e4365d1] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2014122323 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e4365d1]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4fcbd4df] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1243827482 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4fcbd4df]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38b651a] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@309798040 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38b651a]
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a74f2f2] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1653601043 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:49:10 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a74f2f2]
2025-03-21 17:49:10 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:49:10 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@6c3c4739]
2025-03-21 17:49:10 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:10 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:10 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:10 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:10 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:10 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:10 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:10 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:49:10 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:11 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/category/loadAllCategory", parameters={multipart}
2025-03-21 17:49:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:11 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.CategoryController#loadAllCategory(CategoryQuery)
2025-03-21 17:49:11 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:11 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a62de87] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:11 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:11 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1334820590 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:49:11 [DEBUG][com.easyjob.mappers.CategoryMapper.selectList][debug][159]-> ==>  Preparing: SELECT category_id ,category_name,sort,icon_path,bg_color, type FROM category order by sort asc 
2025-03-21 17:49:11 [DEBUG][com.easyjob.mappers.CategoryMapper.selectList][debug][159]-> ==> Parameters: 
2025-03-21 17:49:11 [DEBUG][com.easyjob.mappers.CategoryMapper.selectList][debug][159]-> <==      Total: 9
2025-03-21 17:49:11 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a62de87]
2025-03-21 17:49:11 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:49:11 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@7e9402b7]
2025-03-21 17:49:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:11 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:49:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:12 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/appUser/loadDeviceList", parameters={multipart}
2025-03-21 17:49:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:12 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.AppUserInfoController#loadDeviceList(AppDeviceQuery)
2025-03-21 17:49:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c6b9408] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@760502089 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:49:12 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device 
2025-03-21 17:49:12 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:49:12 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c6b9408]
2025-03-21 17:49:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@686dbd44] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:12 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:12 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1100937534 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:49:12 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectList][debug][159]-> ==>  Preparing: SELECT device_id,device_brand,create_time,last_use_time,ip FROM app_device order by create_time desc limit ?,? 
2025-03-21 17:49:12 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectList][debug][159]-> ==> Parameters: 0(Integer), 15(Integer)
2025-03-21 17:49:12 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectList][debug][159]-> <==      Total: 3
2025-03-21 17:49:12 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@686dbd44]
2025-03-21 17:49:12 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:49:12 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@63087227]
2025-03-21 17:49:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:12 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:49:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:13 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/settings/menuList", parameters={multipart}
2025-03-21 17:49:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:13 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.SysMenuController#menuList()
2025-03-21 17:49:13 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:13 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77f8f0d8] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:13 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:13 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1744196654 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:49:13 [DEBUG][com.easyjob.mappers.SysMenuMapper.selectList][debug][159]-> ==>  Preparing: SELECT menu_id ,menu_name,menu_type,menu_url,p_id, sort,permission_code,icon FROM sys_menu order by sort asc 
2025-03-21 17:49:13 [DEBUG][com.easyjob.mappers.SysMenuMapper.selectList][debug][159]-> ==> Parameters: 
2025-03-21 17:49:13 [DEBUG][com.easyjob.mappers.SysMenuMapper.selectList][debug][159]-> <==      Total: 46
2025-03-21 17:49:13 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77f8f0d8]
2025-03-21 17:49:13 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:49:13 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@3577b112]
2025-03-21 17:49:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:13 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:49:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:15 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/settings/menuList", parameters={multipart}
2025-03-21 17:49:15 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/settings/loadRoles", parameters={multipart}
2025-03-21 17:49:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:15 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.SysMenuController#menuList()
2025-03-21 17:49:15 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.SysRoleController#loadRoles(SysRoleQuery)
2025-03-21 17:49:15 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:15 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cfe0c62] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:15 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:15 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:15 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ebd6c1] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:15 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:15 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1833837460 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:49:15 [DEBUG][com.easyjob.mappers.SysMenuMapper.selectList][debug][159]-> ==>  Preparing: SELECT menu_id ,menu_name,menu_type,menu_url,p_id, sort,permission_code,icon FROM sys_menu order by sort asc 
2025-03-21 17:49:15 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1837137248 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:49:15 [DEBUG][com.easyjob.mappers.SysMenuMapper.selectList][debug][159]-> ==> Parameters: 
2025-03-21 17:49:15 [DEBUG][com.easyjob.mappers.SysRoleMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM sys_role 
2025-03-21 17:49:15 [DEBUG][com.easyjob.mappers.SysRoleMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:49:15 [DEBUG][com.easyjob.mappers.SysRoleMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:15 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ebd6c1]
2025-03-21 17:49:15 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:15 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e1d6dfc] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:15 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:15 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@555895996 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:49:15 [DEBUG][com.easyjob.mappers.SysMenuMapper.selectList][debug][159]-> <==      Total: 46
2025-03-21 17:49:15 [DEBUG][com.easyjob.mappers.SysRoleMapper.selectList][debug][159]-> ==>  Preparing: SELECT role_id,role_name,role_desc,create_time,last_update_time FROM sys_role order by create_time desc limit ?,? 
2025-03-21 17:49:15 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cfe0c62]
2025-03-21 17:49:15 [DEBUG][com.easyjob.mappers.SysRoleMapper.selectList][debug][159]-> ==> Parameters: 0(Integer), 15(Integer)
2025-03-21 17:49:15 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:49:15 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@198a5fc8]
2025-03-21 17:49:15 [DEBUG][com.easyjob.mappers.SysRoleMapper.selectList][debug][159]-> <==      Total: 2
2025-03-21 17:49:15 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e1d6dfc]
2025-03-21 17:49:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:15 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:49:15 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@59452dd]
2025-03-21 17:49:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:15 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:49:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:15 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:49:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:15 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/settings/getRoleByRoleId", parameters={multipart}
2025-03-21 17:49:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:15 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.SysRoleController#getRoleByRoleId(Integer)
2025-03-21 17:49:15 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:15 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@724d2438] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:15 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:15 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@945531874 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:49:15 [DEBUG][com.easyjob.mappers.SysRoleMapper.selectByRoleId][debug][159]-> ==>  Preparing: select role_id,role_name,role_desc,create_time,last_update_time from sys_role where role_id=? 
2025-03-21 17:49:15 [DEBUG][com.easyjob.mappers.SysRoleMapper.selectByRoleId][debug][159]-> ==> Parameters: 1001(Integer)
2025-03-21 17:49:15 [DEBUG][com.easyjob.mappers.SysRoleMapper.selectByRoleId][debug][159]-> <==      Total: 1
2025-03-21 17:49:15 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@724d2438]
2025-03-21 17:49:15 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:15 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a4d0636] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:15 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:15 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@29007267 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:49:15 [DEBUG][com.easyjob.mappers.SysRole2MenuMapper.selectMenuIdsByRoleIds][debug][159]-> ==>  Preparing: select menu_id from sys_role_2_menu where role_id in( ? ) and check_type = 1 
2025-03-21 17:49:15 [DEBUG][com.easyjob.mappers.SysRole2MenuMapper.selectMenuIdsByRoleIds][debug][159]-> ==> Parameters: 1001(String)
2025-03-21 17:49:15 [DEBUG][com.easyjob.mappers.SysRole2MenuMapper.selectMenuIdsByRoleIds][debug][159]-> <==      Total: 47
2025-03-21 17:49:15 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a4d0636]
2025-03-21 17:49:15 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:49:15 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@58530984]
2025-03-21 17:49:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:15 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:49:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 17:49:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=1, idle=5, waiting=0)
2025-03-21 17:49:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2025-03-21 17:49:20 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/settings/loadAccountList", parameters={multipart}
2025-03-21 17:49:20 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/settings/loadAllRoles", parameters={multipart}
2025-03-21 17:49:20 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:20 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:20 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.SysRoleController#loadAllRoles()
2025-03-21 17:49:20 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.SysAccountController#loadAccountList(SysAccountQuery)
2025-03-21 17:49:20 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:20 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@194e8605] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:20 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:20 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1432763691 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:49:20 [DEBUG][com.easyjob.mappers.SysRoleMapper.selectList][debug][159]-> ==>  Preparing: SELECT role_id,role_name,role_desc,create_time,last_update_time FROM sys_role order by create_time desc 
2025-03-21 17:49:20 [DEBUG][com.easyjob.mappers.SysRoleMapper.selectList][debug][159]-> ==> Parameters: 
2025-03-21 17:49:20 [DEBUG][com.easyjob.mappers.SysRoleMapper.selectList][debug][159]-> <==      Total: 2
2025-03-21 17:49:20 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@194e8605]
2025-03-21 17:49:20 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:49:20 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@5f722f9]
2025-03-21 17:49:20 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:20 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:20 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:20 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:20 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:20 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:20 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:20 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:49:20 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:20 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:20 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51391aea] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:20 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:20 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2081318997 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:49:20 [DEBUG][com.easyjob.mappers.SysAccountMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM sys_account 
2025-03-21 17:49:20 [DEBUG][com.easyjob.mappers.SysAccountMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:49:20 [DEBUG][com.easyjob.mappers.SysAccountMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:20 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51391aea]
2025-03-21 17:49:20 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:20 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ec9aecc] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:20 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:20 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@57806671 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:49:20 [DEBUG][com.easyjob.mappers.SysAccountMapper.selectList][debug][159]-> ==>  Preparing: SELECT user_id ,phone,user_name,password,position, status,roles,create_time ,(select GROUP_CONCAT(role_name SEPARATOR ',') from sys_role where FIND_IN_SET(role_id,roles) ) roleNames FROM sys_account order by create_time desc limit ?,? 
2025-03-21 17:49:20 [DEBUG][com.easyjob.mappers.SysAccountMapper.selectList][debug][159]-> ==> Parameters: 0(Integer), 15(Integer)
2025-03-21 17:49:20 [DEBUG][com.easyjob.mappers.SysAccountMapper.selectList][debug][159]-> <==      Total: 3
2025-03-21 17:49:20 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ec9aecc]
2025-03-21 17:49:20 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:49:20 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@3bfb8ebc]
2025-03-21 17:49:20 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:20 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:20 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:20 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:20 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:20 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:20 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:20 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:49:20 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:29 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/index/getAllData", parameters={multipart}
2025-03-21 17:49:29 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/index/getContentWeekData", parameters={multipart}
2025-03-21 17:49:29 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/index/getAppWeekData", parameters={multipart}
2025-03-21 17:49:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:29 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.IndexController#getAllData()
2025-03-21 17:49:29 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.IndexController#getContentWeekData()
2025-03-21 17:49:29 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.IndexController#getAppWeekData()
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@224aca57] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1186a326] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53dcf286] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1685812239 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1599129067 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device 
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@882779000 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@224aca57]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1186a326]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53dcf286]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a8319a7] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dc3bb58] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13b3f97d] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1715432984 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@790058490 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@426155918 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a8319a7]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dc3bb58]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13b3f97d]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c53efb4] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a33f0c8] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8b778a] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1313833912 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@171610541 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@209653495 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info 
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-14(String), 2025-03-14(String)
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c53efb4]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8b778a]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a33f0c8]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57ecd13d] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a543b2b] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64ce5edb] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1413593659 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@297284300 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1644058426 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-14(String), 2025-03-14(String)
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a543b2b]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57ecd13d]
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64ce5edb]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73eb8b9] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5edabd18] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1dcefc33] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1871637191 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1826117142 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info 
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@199250391 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73eb8b9]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1dcefc33]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5edabd18]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7dd65f73] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f8ea3dc] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d87590e] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@266328832 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1446911451 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1967909754 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f8ea3dc]
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d87590e]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7dd65f73]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4024f95e] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@401c15d4] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c8ae184] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@719200965 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@657751024 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1667767969 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question 
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-15(String), 2025-03-15(String)
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@401c15d4]
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4024f95e]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c8ae184]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f6ab97c] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f403d24] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79cce943] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@528005616 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@45199679 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2026490267 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-15(String), 2025-03-15(String)
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79cce943]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f6ab97c]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f403d24]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4585269e] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@378e61d] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9970154] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1667037251 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1537034652 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@491733579 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info 
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9970154]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@378e61d]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4585269e]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fd0a0d9] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58f7c436] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cab3a08] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@788303830 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@486246715 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1626754261 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fd0a0d9]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58f7c436]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1832f565] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cab3a08]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@365b8070] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54a56fae] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@50219218 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1349199097 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? 
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@17523784 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer)
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-16(String), 2025-03-16(String)
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1832f565]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@365b8070]
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54a56fae]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55680b7c] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65c2140d] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33789307] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1518224745 wrapping com.mysql.cj.jdbc.ConnectionImpl@270c62e5] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@259014853 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1289704153 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-16(String), 2025-03-16(String)
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55680b7c]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65c2140d]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33789307]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@589e295b] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d7ccf73] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@5554f3db]
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@763964473 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2053870960 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_device WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:49:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 17:49:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppDeviceMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@589e295b]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d7ccf73]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9670e04] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38fdebe4] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@546974338 wrapping com.mysql.cj.jdbc.ConnectionImpl@221038a] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1402059999 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_user_info WHERE join_time>=str_to_date(?, '%Y-%m-%d') and join_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 17:49:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppUserInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9670e04]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38fdebe4]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bc60ba1] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:49:29 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@756cfef4]
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1286824438 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-17(String), 2025-03-17(String)
2025-03-21 17:49:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bc60ba1]
2025-03-21 17:49:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5cbd0353] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1997373542 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-17(String), 2025-03-17(String)
2025-03-21 17:49:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5cbd0353]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@606331d4] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1425015056 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@606331d4]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@588924e7] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@555570099 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@588924e7]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@171c8a8a] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@111360658 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-18(String), 2025-03-18(String)
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@171c8a8a]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31d50fa4] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1114541006 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-18(String), 2025-03-18(String)
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31d50fa4]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53e9b5a4] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1247291474 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53e9b5a4]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13c2909a] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@219698131 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13c2909a]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d8de5ed] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@172810886 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-19(String), 2025-03-19(String)
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d8de5ed]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cc11bcd] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1845572917 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-19(String), 2025-03-19(String)
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cc11bcd]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b2f5706] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1865688797 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM question_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.QuestionInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b2f5706]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2efc8497] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1073373481 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM exam_question WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ExamQuestionMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2efc8497]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2169bdf6] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1811635568 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM share_info WHERE create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> ==> Parameters: 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.ShareInfoMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2169bdf6]
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43c0f8b4] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@791313207 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM app_feedback WHERE p_feedback_id = ? and create_time>=str_to_date(?, '%Y-%m-%d') and create_time< date_sub(str_to_date(?,'%Y-%m-%d'),interval -1 day) 
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> ==> Parameters: 0(Integer), 2025-03-20(String), 2025-03-20(String)
2025-03-21 17:49:29 [DEBUG][com.easyjob.mappers.AppFeedbackMapper.selectCount][debug][159]-> <==      Total: 1
2025-03-21 17:49:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43c0f8b4]
2025-03-21 17:49:29 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:49:29 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@3d9ce653]
2025-03-21 17:49:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:29 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:49:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:30 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/category/loadAllCategory", parameters={multipart}
2025-03-21 17:49:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:30 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.easyjob.controller.CategoryController#loadAllCategory(CategoryQuery)
2025-03-21 17:49:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2025-03-21 17:49:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4699d65e] was not registered for synchronization because synchronization is not active
2025-03-21 17:49:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2025-03-21 17:49:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2060698857 wrapping com.mysql.cj.jdbc.ConnectionImpl@76ae1e0d] will not be managed by Spring
2025-03-21 17:49:30 [DEBUG][com.easyjob.mappers.CategoryMapper.selectList][debug][159]-> ==>  Preparing: SELECT category_id ,category_name,sort,icon_path,bg_color, type FROM category order by sort asc 
2025-03-21 17:49:30 [DEBUG][com.easyjob.mappers.CategoryMapper.selectList][debug][159]-> ==> Parameters: 
2025-03-21 17:49:30 [DEBUG][com.easyjob.mappers.CategoryMapper.selectList][debug][159]-> <==      Total: 9
2025-03-21 17:49:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4699d65e]
2025-03-21 17:49:30 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-03-21 17:49:30 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.easyjob.entity.vo.ResponseVO@14791b16]
2025-03-21 17:49:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2025-03-21 17:49:30 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2025-03-21 17:49:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
